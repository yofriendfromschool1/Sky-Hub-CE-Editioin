--[[CE Edition Support game list:
games it supports Arsenal, Tower of Hell, KAT!, Fencing,
Work At A Pizza Place, VR Hands, Prison Life,
Build A Boat For Treasure, Murder Mystery 2, Mic Up, Neighbors, Natural Diaster Survival,  Blade Ball, Legends of Speed, Chaos, Ninja Legends, Bayside High School, Big PaintBall, Big PaintBall 2, Muscle Legends, Cursed Sea, Blox Fruits and Universal.
30+ games (Including some obbys)]]
local string = "https://discord.gg/xwy5Cu62Vw"
local string2 = "https://discord.com/invite/jVf7eSrED9"
_G.lmao24 = "loo"
if game:GetService("SoundService").RespectFilteringEnabled == true then
	_G.lmao24 = "Enabled"
else
	_G.lmao24 = "Disabled"
end

--Arsenal
if game.PlaceId == 286090429 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	MainSection:NewButton("Mobile aimbot", "ce aimbot for now lol", function()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local localPlayer = Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		local lockOnActive = false
		local teamCheckActive = false
		local currentTouch = nil
		local fovRadius = 125
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
		local toggleButton = Instance.new("TextButton")
		toggleButton.Parent = screenGui
		toggleButton.Size = UDim2.new(0, 150, 0, 50)
		toggleButton.Position = UDim2.new(0, 100, 0, 100)
		toggleButton.Text = "Toggle Lock-On"
		toggleButton.Draggable = true
		local toggleTeamButton = Instance.new("TextButton")
		toggleTeamButton.Parent = screenGui
		toggleTeamButton.Size = UDim2.new(0, 150, 0, 50)
		toggleTeamButton.Position = UDim2.new(0, 100, 0, 160)
		toggleTeamButton.Text = "Toggle Team Check"
		toggleTeamButton.Draggable = true
		local fovCircleGui = Instance.new("ImageLabel")
		fovCircleGui.Parent = screenGui
		fovCircleGui.AnchorPoint = Vector2.new(0.5, 0.5)
		fovCircleGui.Size = UDim2.new(0, fovRadius * 2, 0, fovRadius * 2)
		fovCircleGui.Image = "rbxassetid://432312433"
		fovCircleGui.ImageTransparency = 0.5
		fovCircleGui.ImageColor3 = Color3.new(1, 1, 1)
		fovCircleGui.BackgroundTransparency = 1
		fovCircleGui.Visible = false
		fovCircleGui.ZIndex = 0 -- Ensure it's behind other GUI elements

-- Function to check if a player is within the FOV and not obstructed by walls
		local function isPlayerVisible(targetPlayer)
			if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
				return false
			end
			if teamCheckActive and targetPlayer.Team == localPlayer.Team then
				return false -- Player is on the same team
			end
			local targetHeadPosition = targetPlayer.Character.Head.Position
			local vectorToTarget = (targetHeadPosition - camera.CFrame.Position).unit
			local ray = Ray.new(camera.CFrame.Position, vectorToTarget * fovRadius)
			local part, position = game.Workspace:FindPartOnRay(ray, localPlayer.Character, false, true)
			if part and part:IsDescendantOf(targetPlayer.Character) then
				local dotProduct = camera.CFrame.LookVector:Dot(vectorToTarget)
				local angle = math.deg(math.acos(dotProduct))
				return angle <= (fovRadius / 2) -- Player is within FOV
			end
			return false -- Player is obstructed by walls
		end

-- Toggle button functionality
		toggleButton.MouseButton1Click:Connect(function()
			lockOnActive = not lockOnActive
			toggleButton.Text = lockOnActive and "Lock-On Active" or "Toggle Lock-On"
			fovCircleGui.Visible = lockOnActive
		end)
		toggleTeamButton.MouseButton1Click:Connect(function()
			teamCheckActive = not teamCheckActive
			toggleTeamButton.Text = teamCheckActive and "Team Check Active" or "Toggle Team Check"
		end)

-- Function to handle touch input
		local function onTouchStarted(touch)
			currentTouch = touch.Position
			fovCircleGui.Position = UDim2.new(0, touch.Position.X - fovRadius, 0, touch.Position.Y - fovRadius)
			fovCircleGui.Visible = true
		end

-- Function to handle touch ended
		local function onTouchEnded(touch)
			if currentTouch and currentTouch == touch.Position then
				currentTouch = nil
				fovCircleGui.Visible = false
			end
		end

-- Connect the touch event handlers
		UserInputService.TouchStarted:Connect(onTouchStarted)
		UserInputService.TouchEnded:Connect(onTouchEnded)
		RunService.RenderStepped:Connect(function()
			if lockOnActive then
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and isPlayerVisible(player) then
						local head = player.Character.Head
						local direction = (head.Position - camera.CFrame.Position).unit
						camera.CFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + direction * 10)
						break
					end
				end
			end
		end)
	end)
	MainSection:NewButton("aimbot and esp", "aimbot and esp", function()
		PLAYER  = game.Players.LocalPlayer
MOUSE   = PLAYER:GetMouse()
CC      = game.Workspace.CurrentCamera
 
ENABLED      = false
ESP_ENABLED  = false
 
_G.FREE_FOR_ALL = true
 
_G.ESP_BIND    = 52
_G.CHANGE_AIM  = 'q'
 
_G.AIM_AT = 'Head'
 
wait(1)
 
function GetNearestPlayerToMouse()
	local PLAYERS      = {}
	local PLAYER_HOLD  = {}
	local DISTANCES    = {}
	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= PLAYER then
			table.insert(PLAYERS, v)
		end
	end
	for i, v in pairs(PLAYERS) do
		if _G.FREE_FOR_ALL == false then
			if v and (v.Character) ~= nil and v.TeamColor ~= PLAYER.TeamColor then
				local AIM = v.Character:FindFirstChild(_G.AIM_AT)
				if AIM ~= nil then
					local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
					local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
					local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
					local DIFF                     = math.floor((POS - AIM.Position).magnitude)
					PLAYER_HOLD[v.Name .. i]       = {}
					PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
					PLAYER_HOLD[v.Name .. i].plr   = v
					PLAYER_HOLD[v.Name .. i].diff  = DIFF
					table.insert(DISTANCES, DIFF)
				end
			end
		elseif _G.FREE_FOR_ALL == true then
			local AIM = v.Character:FindFirstChild(_G.AIM_AT)
			if AIM ~= nil then
				local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
				local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
				local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
				local DIFF                     = math.floor((POS - AIM.Position).magnitude)
				PLAYER_HOLD[v.Name .. i]       = {}
				PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
				PLAYER_HOLD[v.Name .. i].plr   = v
				PLAYER_HOLD[v.Name .. i].diff  = DIFF
				table.insert(DISTANCES, DIFF)
			end
		end
	end
 
	if unpack(DISTANCES) == nil then
		return false
	end
 
	local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
	if L_DISTANCE > 20 then
		return false
	end
 
	for i, v in pairs(PLAYER_HOLD) do
		if v.diff == L_DISTANCE then
			return v.plr
		end
	end
	return false
end
 
GUI_MAIN                           = Instance.new('ScreenGui', game.CoreGui)
GUI_TARGET                         = Instance.new('TextLabel', GUI_MAIN)
GUI_AIM_AT                         = Instance.new('TextLabel', GUI_MAIN)
 
GUI_MAIN.Name                      = 'AIMBOT'
 
GUI_TARGET.Size                    = UDim2.new(0,200,0,30)
GUI_TARGET.BackgroundTransparency  = 0.5
GUI_TARGET.BackgroundColor         = BrickColor.new('Fossil')
GUI_TARGET.BorderSizePixel         = 0
GUI_TARGET.Position                = UDim2.new(0.5,-100,0,0)
GUI_TARGET.Text                    = 'AIMBOT : ON'
GUI_TARGET.TextColor3              = Color3.new(1,1,1)
GUI_TARGET.TextStrokeTransparency  = 1
GUI_TARGET.TextWrapped             = true
GUI_TARGET.FontSize                = 'Size24'
GUI_TARGET.Font                    = 'SourceSansBold'
 
GUI_AIM_AT.Size                    = UDim2.new(0,200,0,20)
GUI_AIM_AT.BackgroundTransparency  = 0.5
GUI_AIM_AT.BackgroundColor         = BrickColor.new('Fossil')
GUI_AIM_AT.BorderSizePixel         = 0
GUI_AIM_AT.Position                = UDim2.new(0.5,-100,0,30)
GUI_AIM_AT.Text                    = 'AIMING : HEAD'
GUI_AIM_AT.TextColor3              = Color3.new(1,1,1)
GUI_AIM_AT.TextStrokeTransparency  = 1
GUI_AIM_AT.TextWrapped             = true
GUI_AIM_AT.FontSize                = 'Size18'
GUI_AIM_AT.Font                    = 'SourceSansBold'
 
local TRACK = false
 
function CREATE(BASE, TEAM)
	local ESP_MAIN                   = Instance.new('BillboardGui', PLAYER.PlayerGui)
	local ESP_DOT                    = Instance.new('Frame', ESP_MAIN)
	local ESP_NAME                   = Instance.new('TextLabel', ESP_MAIN)
 
	ESP_MAIN.Name                    = 'ESP'
	ESP_MAIN.Adornee                 = BASE
	ESP_MAIN.AlwaysOnTop             = true
	ESP_MAIN.ExtentsOffset           = Vector3.new(0, 1, 0)
	ESP_MAIN.Size                    = UDim2.new(0, 5, 0, 5)
 
	ESP_DOT.Name                     = 'DOT'
	ESP_DOT.BackgroundColor          = BrickColor.new('Bright red')
	ESP_DOT.BackgroundTransparency   = 0.3
	ESP_DOT.BorderSizePixel          = 0
	ESP_DOT.Position                 = UDim2.new(-0.5, 0, -0.5, 0)
	ESP_DOT.Size                     = UDim2.new(2, 0, 2, 0)
	ESP_DOT.Visible                  = true
	ESP_DOT.ZIndex                   = 10
 
	ESP_NAME.Name                    = 'NAME'
	ESP_NAME.BackgroundColor3        = Color3.new(255, 255, 255)
	ESP_NAME.BackgroundTransparency  = 1
	ESP_NAME.BorderSizePixel         = 0
	ESP_NAME.Position                = UDim2.new(0, 0, 0, -40)
	ESP_NAME.Size                    = UDim2.new(1, 0, 10, 0)
	ESP_NAME.Visible                 = true
	ESP_NAME.ZIndex                  = 10
	ESP_NAME.Font                    = 'ArialBold'
	ESP_NAME.FontSize                = 'Size14'
	ESP_NAME.Text                    = BASE.Parent.Name:upper()
	ESP_NAME.TextColor               = BrickColor.new('Bright red')
end
 
function CLEAR()
	for _,v in pairs(PLAYER.PlayerGui:children()) do
		if v.Name == 'ESP' and v:IsA('BillboardGui') then
			v:Destroy()
		end
	end
end
 
function FIND()
	CLEAR()
	TRACK = true
	spawn(function()
		while wait() do
			if TRACK then
				CLEAR()
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild('Head') then
						if _G.FREE_FOR_ALL == false then
							if v.TeamColor ~= PLAYER.TeamColor then
								if v.Character:FindFirstChild('Head') then
									CREATE(v.Character.Head, true)
								end
							end
						else
							if v.Character:FindFirstChild('Head') then
								CREATE(v.Character.Head, true)
							end
						end
					end
				end
			end
		end
		wait(1)
	end)
end
 
MOUSE.Button2Down:connect(function()
	ENABLED = true
end)
 
MOUSE.Button2Up:connect(function()
	ENABLED = false
end)
 
MOUSE.KeyDown:connect(function(KEY)
	KEY = KEY:lower():byte()
	if KEY == _G.ESP_BIND then
		if ESP_ENABLED == false then
			FIND()
			ESP_ENABLED = true
			print('ESP : ON')
		elseif ESP_ENABLED == true then
			wait()
			CLEAR()
			TRACK = false
			ESP_ENABLED = false
			print('ESP : OFF')
		end
	end
end)
 
MOUSE.KeyDown:connect(function(KEY)
	if KEY == _G.CHANGE_AIM then
		if _G.AIM_AT == 'Head' then
			_G.AIM_AT = 'Torso'
			GUI_AIM_AT.Text = 'AIMING : TORSO'
		elseif _G.AIM_AT == 'Torso' then
			_G.AIM_AT = 'Head'
			GUI_AIM_AT.Text = 'AIMING : HEAD'
		end
	end
end)
 
game:GetService('RunService').RenderStepped:connect(function()
	if ENABLED then
		local TARGET = GetNearestPlayerToMouse()
		if (TARGET ~= false) then
			local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
			if AIM then
				CC.CoordinateFrame = CFrame.new(CC.CoordinateFrame.p, AIM.CFrame.p)
			end
			GUI_TARGET.Text = 'AIMBOT : '.. TARGET.Name:sub(1, 5)
		else
			GUI_TARGET.Text = 'AIMBOT : ON'
		end
	end
end)
 
repeat
	wait()
	if ESP_ENABLED == true then
		FIND()
	end
until ESP_ENABLED == false
	end)
	MainSection:NewButton("Arsenal FE audio + more!", "NOTE: you can get banned from some of these scripts", function()
		value = "2038227137" --song id here
		local args = {
			[1] = {
				[1] = "UpdateID",
				[2] =  value,
			},
		}
		game:GetService("ReplicatedStorage").Events.UpdateLoadout:FireServer(unpack(args))
		local args = {
			[1] = true,
			[2] = game:GetService("ReplicatedStorage").Taunts.Megaphone,
		}
		game:GetService("ReplicatedStorage").Events.ReplicateGear:FireServer(unpack(args))
		Players = game:GetService("Players")
		for i, player in pairs(Players:GetPlayers()) do
			print("[" .. i .. "] = " .. player.Name)
			local args = {
				[1] = "GET NOOB",
				"[" .. i .. "] = " .. player.Name,
			}
		end
	end)

-- KAT!
elseif game.PlaceId == 621129760 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	MainSection:NewButton("aimbot and esp", "aimbot and esp", function()
		PLAYER  = game.Players.LocalPlayer
MOUSE   = PLAYER:GetMouse()
CC      = game.Workspace.CurrentCamera
 
ENABLED      = false
ESP_ENABLED  = false
 
_G.FREE_FOR_ALL = true
 
_G.ESP_BIND    = 52
_G.CHANGE_AIM  = 'q'
 
_G.AIM_AT = 'Head'
 
wait(1)
 
function GetNearestPlayerToMouse()
	local PLAYERS      = {}
	local PLAYER_HOLD  = {}
	local DISTANCES    = {}
	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= PLAYER then
			table.insert(PLAYERS, v)
		end
	end
	for i, v in pairs(PLAYERS) do
		if _G.FREE_FOR_ALL == false then
			if v and (v.Character) ~= nil and v.TeamColor ~= PLAYER.TeamColor then
				local AIM = v.Character:FindFirstChild(_G.AIM_AT)
				if AIM ~= nil then
					local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
					local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
					local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
					local DIFF                     = math.floor((POS - AIM.Position).magnitude)
					PLAYER_HOLD[v.Name .. i]       = {}
					PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
					PLAYER_HOLD[v.Name .. i].plr   = v
					PLAYER_HOLD[v.Name .. i].diff  = DIFF
					table.insert(DISTANCES, DIFF)
				end
			end
		elseif _G.FREE_FOR_ALL == true then
			local AIM = v.Character:FindFirstChild(_G.AIM_AT)
			if AIM ~= nil then
				local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
				local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
				local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
				local DIFF                     = math.floor((POS - AIM.Position).magnitude)
				PLAYER_HOLD[v.Name .. i]       = {}
				PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
				PLAYER_HOLD[v.Name .. i].plr   = v
				PLAYER_HOLD[v.Name .. i].diff  = DIFF
				table.insert(DISTANCES, DIFF)
			end
		end
	end
 
	if unpack(DISTANCES) == nil then
		return false
	end
 
	local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
	if L_DISTANCE > 20 then
		return false
	end
 
	for i, v in pairs(PLAYER_HOLD) do
		if v.diff == L_DISTANCE then
			return v.plr
		end
	end
	return false
end
 
GUI_MAIN                           = Instance.new('ScreenGui', game.CoreGui)
GUI_TARGET                         = Instance.new('TextLabel', GUI_MAIN)
GUI_AIM_AT                         = Instance.new('TextLabel', GUI_MAIN)
 
GUI_MAIN.Name                      = 'AIMBOT'
 
GUI_TARGET.Size                    = UDim2.new(0,200,0,30)
GUI_TARGET.BackgroundTransparency  = 0.5
GUI_TARGET.BackgroundColor         = BrickColor.new('Fossil')
GUI_TARGET.BorderSizePixel         = 0
GUI_TARGET.Position                = UDim2.new(0.5,-100,0,0)
GUI_TARGET.Text                    = 'AIMBOT : ON'
GUI_TARGET.TextColor3              = Color3.new(1,1,1)
GUI_TARGET.TextStrokeTransparency  = 1
GUI_TARGET.TextWrapped             = true
GUI_TARGET.FontSize                = 'Size24'
GUI_TARGET.Font                    = 'SourceSansBold'
 
GUI_AIM_AT.Size                    = UDim2.new(0,200,0,20)
GUI_AIM_AT.BackgroundTransparency  = 0.5
GUI_AIM_AT.BackgroundColor         = BrickColor.new('Fossil')
GUI_AIM_AT.BorderSizePixel         = 0
GUI_AIM_AT.Position                = UDim2.new(0.5,-100,0,30)
GUI_AIM_AT.Text                    = 'AIMING : HEAD'
GUI_AIM_AT.TextColor3              = Color3.new(1,1,1)
GUI_AIM_AT.TextStrokeTransparency  = 1
GUI_AIM_AT.TextWrapped             = true
GUI_AIM_AT.FontSize                = 'Size18'
GUI_AIM_AT.Font                    = 'SourceSansBold'
 
local TRACK = false
 
function CREATE(BASE, TEAM)
	local ESP_MAIN                   = Instance.new('BillboardGui', PLAYER.PlayerGui)
	local ESP_DOT                    = Instance.new('Frame', ESP_MAIN)
	local ESP_NAME                   = Instance.new('TextLabel', ESP_MAIN)
 
	ESP_MAIN.Name                    = 'ESP'
	ESP_MAIN.Adornee                 = BASE
	ESP_MAIN.AlwaysOnTop             = true
	ESP_MAIN.ExtentsOffset           = Vector3.new(0, 1, 0)
	ESP_MAIN.Size                    = UDim2.new(0, 5, 0, 5)
 
	ESP_DOT.Name                     = 'DOT'
	ESP_DOT.BackgroundColor          = BrickColor.new('Bright red')
	ESP_DOT.BackgroundTransparency   = 0.3
	ESP_DOT.BorderSizePixel          = 0
	ESP_DOT.Position                 = UDim2.new(-0.5, 0, -0.5, 0)
	ESP_DOT.Size                     = UDim2.new(2, 0, 2, 0)
	ESP_DOT.Visible                  = true
	ESP_DOT.ZIndex                   = 10
 
	ESP_NAME.Name                    = 'NAME'
	ESP_NAME.BackgroundColor3        = Color3.new(255, 255, 255)
	ESP_NAME.BackgroundTransparency  = 1
	ESP_NAME.BorderSizePixel         = 0
	ESP_NAME.Position                = UDim2.new(0, 0, 0, -40)
	ESP_NAME.Size                    = UDim2.new(1, 0, 10, 0)
	ESP_NAME.Visible                 = true
	ESP_NAME.ZIndex                  = 10
	ESP_NAME.Font                    = 'ArialBold'
	ESP_NAME.FontSize                = 'Size14'
	ESP_NAME.Text                    = BASE.Parent.Name:upper()
	ESP_NAME.TextColor               = BrickColor.new('Bright red')
end
 
function CLEAR()
	for _,v in pairs(PLAYER.PlayerGui:children()) do
		if v.Name == 'ESP' and v:IsA('BillboardGui') then
			v:Destroy()
		end
	end
end
 
function FIND()
	CLEAR()
	TRACK = true
	spawn(function()
		while wait() do
			if TRACK then
				CLEAR()
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild('Head') then
						if _G.FREE_FOR_ALL == false then
							if v.TeamColor ~= PLAYER.TeamColor then
								if v.Character:FindFirstChild('Head') then
									CREATE(v.Character.Head, true)
								end
							end
						else
							if v.Character:FindFirstChild('Head') then
								CREATE(v.Character.Head, true)
							end
						end
					end
				end
			end
		end
		wait(1)
	end)
end
 
MOUSE.Button2Down:connect(function()
	ENABLED = true
end)
 
MOUSE.Button2Up:connect(function()
	ENABLED = false
end)
 
MOUSE.KeyDown:connect(function(KEY)
	KEY = KEY:lower():byte()
	if KEY == _G.ESP_BIND then
		if ESP_ENABLED == false then
			FIND()
			ESP_ENABLED = true
			print('ESP : ON')
		elseif ESP_ENABLED == true then
			wait()
			CLEAR()
			TRACK = false
			ESP_ENABLED = false
			print('ESP : OFF')
		end
	end
end)
 
MOUSE.KeyDown:connect(function(KEY)
	if KEY == _G.CHANGE_AIM then
		if _G.AIM_AT == 'Head' then
			_G.AIM_AT = 'Torso'
			GUI_AIM_AT.Text = 'AIMING : TORSO'
		elseif _G.AIM_AT == 'Torso' then
			_G.AIM_AT = 'Head'
			GUI_AIM_AT.Text = 'AIMING : HEAD'
		end
	end
end)
 
game:GetService('RunService').RenderStepped:connect(function()
	if ENABLED then
		local TARGET = GetNearestPlayerToMouse()
		if (TARGET ~= false) then
			local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
			if AIM then
				CC.CoordinateFrame = CFrame.new(CC.CoordinateFrame.p, AIM.CFrame.p)
			end
			GUI_TARGET.Text = 'AIMBOT : '.. TARGET.Name:sub(1, 5)
		else
			GUI_TARGET.Text = 'AIMBOT : ON'
		end
	end
end)
 
repeat
	wait()
	if ESP_ENABLED == true then
		FIND()
	end
until ESP_ENABLED == false
	end)
	MainSection:NewButton("Mobile aimbot", "ce aimbot for now lol", function()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local localPlayer = Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		local lockOnActive = false
		local teamCheckActive = false
		local currentTouch = nil
		local fovRadius = 125
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
		local toggleButton = Instance.new("TextButton")
		toggleButton.Parent = screenGui
		toggleButton.Size = UDim2.new(0, 150, 0, 50)
		toggleButton.Position = UDim2.new(0, 100, 0, 100)
		toggleButton.Text = "Toggle Lock-On"
		toggleButton.Draggable = true
		local toggleTeamButton = Instance.new("TextButton")
		toggleTeamButton.Parent = screenGui
		toggleTeamButton.Size = UDim2.new(0, 150, 0, 50)
		toggleTeamButton.Position = UDim2.new(0, 100, 0, 160)
		toggleTeamButton.Text = "Toggle Team Check"
		toggleTeamButton.Draggable = true
		local fovCircleGui = Instance.new("ImageLabel")
		fovCircleGui.Parent = screenGui
		fovCircleGui.AnchorPoint = Vector2.new(0.5, 0.5)
		fovCircleGui.Size = UDim2.new(0, fovRadius * 2, 0, fovRadius * 2)
		fovCircleGui.Image = "rbxassetid://432312433"
		fovCircleGui.ImageTransparency = 0.5
		fovCircleGui.ImageColor3 = Color3.new(1, 1, 1)
		fovCircleGui.BackgroundTransparency = 1
		fovCircleGui.Visible = false
		fovCircleGui.ZIndex = 0 -- Ensure it's behind other GUI elements
 
 -- Function to check if a player is within the FOV and not obstructed by walls
		local function isPlayerVisible(targetPlayer)
			if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
				return false
			end
			if teamCheckActive and targetPlayer.Team == localPlayer.Team then
				return false -- Player is on the same team
			end
			local targetHeadPosition = targetPlayer.Character.Head.Position
			local vectorToTarget = (targetHeadPosition - camera.CFrame.Position).unit
			local ray = Ray.new(camera.CFrame.Position, vectorToTarget * fovRadius)
			local part, position = game.Workspace:FindPartOnRay(ray, localPlayer.Character, false, true)
			if part and part:IsDescendantOf(targetPlayer.Character) then
				local dotProduct = camera.CFrame.LookVector:Dot(vectorToTarget)
				local angle = math.deg(math.acos(dotProduct))
				return angle <= (fovRadius / 2) -- Player is within FOV
			end
			return false -- Player is obstructed by walls
		end
 
 -- Toggle button functionality
		toggleButton.MouseButton1Click:Connect(function()
			lockOnActive = not lockOnActive
			toggleButton.Text = lockOnActive and "Lock-On Active" or "Toggle Lock-On"
			fovCircleGui.Visible = lockOnActive
		end)
		toggleTeamButton.MouseButton1Click:Connect(function()
			teamCheckActive = not teamCheckActive
			toggleTeamButton.Text = teamCheckActive and "Team Check Active" or "Toggle Team Check"
		end)
 
 -- Function to handle touch input
		local function onTouchStarted(touch)
			currentTouch = touch.Position
			fovCircleGui.Position = UDim2.new(0, touch.Position.X - fovRadius, 0, touch.Position.Y - fovRadius)
			fovCircleGui.Visible = true
		end
 
 -- Function to handle touch ended
		local function onTouchEnded(touch)
			if currentTouch and currentTouch == touch.Position then
				currentTouch = nil
				fovCircleGui.Visible = false
			end
		end
 
 -- Connect the touch event handlers
		UserInputService.TouchStarted:Connect(onTouchStarted)
		UserInputService.TouchEnded:Connect(onTouchEnded)
		RunService.RenderStepped:Connect(function()
			if lockOnActive then
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and isPlayerVisible(player) then
						local head = player.Character.Head
						local direction = (head.Position - camera.CFrame.Position).unit
						camera.CFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + direction * 10)
						break
					end
				end
			end
		end)
	end)
	MainSection:NewButton("KAT!", "auto throws knife", function()
   --Subscribe to Ducky Exploits
		function nearestPlayerToRay()
			local dist = math.huge
			local ray
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v ~= game:GetService("Players").LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("Head") and not v.Character:FindFirstChild("ForceField") then
					if v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") then -- needed..
						local newVec = (v.Character.Head.Position - game:GetService("Players").LocalPlayer.Character.Head.Position)
						if newVec.magnitude < dist then
							local toRay = Ray.new(game:GetService("Players").LocalPlayer.Character.Head.Position, newVec)
							if not workspace:FindPartOnRayWithIgnoreList(toRay, {
								game:GetService("Players").LocalPlayer.Character,
								v.Character,
								workspace.WorldIgnore,
								workspace.CurrentCamera
							}) then
								dist = newVec.magnitude
								ray = toRay
							end
						end
					end
				end
			end
			return ray
		end
		local ray
		function init()
			local knife = game:GetService("Players").LocalPlayer.Character:WaitForChild("Knife")
			local scr = getsenv(knife.KnifeServer.KnifeClient)
			if scr then
				local ir = scr.inputReleased
				local u7 = debug.getupvalue(ir, 2)
				local cam = debug.getupvalue(ir, 5)
				debug.setupvalue(ir, 5, setmetatable({}, {
					__index = function(t, k)
						if k == "ScreenPointToRay" then
							if ray ~= nil then
								return function()
									return ray
								end
							end
						end
						return cam[k]
					end
				}))
				while wait(.1) do
					if game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 then
						break
					end
					ray = nearestPlayerToRay()
					if ray then
						scr.inputDown()
						u7.ChargeStart = -math.huge
						ir()
					end
				end
			end
		end
		init()
		game:GetService("Players").LocalPlayer.CharacterAdded:connect(function()
			print("hi")
			wait()
			init()
		end)
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
 -- Fencing
elseif game.PlaceId == 12109643 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	MainSection:NewButton("Hat Hub", "need hats for this or items", function()
		_G.HatHub()
	end)
	MainSection:NewButton("FE spam sound", "if it says yes than everyone can hear if no then no one can hear", function()
		
		local SoundService = game:GetService("SoundService")
		if SoundService.RespectFilteringEnabled == false then
			print("success", "Success", "Everyone can hear the sounds in this game!")
			print("message", "YouTube : darkModz", "YouTube - darkmodz")
		else
			print("warning", "Warning", "Unfortunately no one else can hear it in this game, try a different one.\nMaybe an older game will work.")
		end
		while wait() do
			for _, sound in next, workspace:GetDescendants() do
				if sound:IsA("Sound") then
					sound.Volume = 10
					sound:Play()
				end
			end
		end
	end)
	MainSection:NewButton("FE Brick Spam", "spams bricks", function()
   -- https://www.roblox.com/games/12109643/Fencing
		game:GetService('RunService').Stepped:connect(function()
			for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
				if v.Name == "Spray" then
					if v.Handle.Mesh then
						v.Handle.Mesh:Destroy()
					end
					v.Parent = workspace
				end
			end
		end)
		local function paint()
			for i, v in pairs(game.Workspace:GetChildren()) do
				if v.Name == "Handle" then
					v.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
					v.Transparency = 1
					v.CanCollide = false
					wait()
					v.CFrame = game:GetService("Players").LocalPlayer.Character["Left Leg"].CFrame
				end
			end
		end
		local function equip()
			for i, v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
				if v.Name == "Spray" then
					game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(v)
				end
			end
		end
		while wait(0.05) do
			paint()
			equip()
		end
	end)
	MainSection:NewButton("FE Gain Double Health", "bruh", function()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(56, 3.5, 124.5)
		wait()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-130, 3.5, 30)
	end)
	MainSection:NewButton("Fencing", "bruh", function()
		_G.fencing()
	end)
	MainSection:NewButton("FE Give SprayPaint", "SprayPaint", function()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(188, 3.5, 106)
		wait()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-130, 3.5, 30)
	end)
	MainSection:NewButton("FE Perm God Mode", "permeanent God mode", function()
		button              = workspace.Button
		button.CanCollide   = false
		button.Transparency = 1
		game:GetService("RunService").Heartbeat:connect(function(step)
			button.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.Head.Position)
			button.Size   = Vector3.new(math.random(0, 0), math.random(0, 0), math.random(1, 5))
			wait()
			button.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character["Right Arm"].Position)
			button.Size = Vector3.new(math.random(0, 0), math.random(0, 0), math.random(0, 0))
			wait()
			button.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.Torso.Position)
			button.Size = Vector3.new(math.random(0, 0), math.random(0, 0), math.random(0, 0))
			wait()
			button.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character["Left Arm"].Position)
			button.Size = Vector3.new(math.random(0, 0), math.random(0, 0), math.random(0, 0))
			wait()
			button.Size = Vector3.new(math.random(0, 0), math.random(0, 0), math.random(0, 0))
			button.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character["Left Leg"].Position)
			wait()
			button.Size   = Vector3.new(math.random(0, 0), math.random(0, 0), math.random(0, 0))
			button.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character["Right Leg"].Position)
		end)
	end)
	MainSection:NewButton("FE Reach", "Farther Reach", function()
		a = Instance.new("SelectionBox", game:GetService("Players").LocalPlayer.Backpack.Foil.Handle)
		a.Adornee = game:GetService("Players").LocalPlayer.Backpack.Foil.Handle
		game:GetService("Players").LocalPlayer.Backpack.Foil.Handle.Size = Vector3.new(1, 1, 30)
	end)
	MainSection:NewButton("FE Seat Spam", "Seat Spam", function()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-25, 7.5, 54)
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Sit            = false
		wait(0.05)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-30, 7.5, 54)
		wait(0.05)
	end)
	MainSection:NewButton("FE Weird Broken Fencing Swords", "Swords", function()
		game.Lighting["LinkedSword3"]:Clone().Parent = game:GetService("Players").LocalPlayer.Backpack
		game.Lighting["LinkedSword2"]:Clone().Parent = game:GetService("Players").LocalPlayer.Backpack
		game.Lighting["LinkedSword"]:Clone().Parent = game:GetService("Players").LocalPlayer.Backpack
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
-- Work at a Pizza Place
elseif game.PlaceId == 192800 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	
	MainSection:NewButton("FE spam sound", "if it says yes than everyone can hear if no then no one can hear", function()
		
		local SoundService = game:GetService("SoundService")
		if SoundService.RespectFilteringEnabled == false then
			print("success", "Success", "Everyone can hear the sounds in this game!")
			print("message", "YouTube : darkModz", "YouTube - darkmodz")
		else
			print("warning", "Warning", "Unfortunately no one else can hear it in this game, try a different one.\nMaybe an older game will work.")
		end
		while wait() do
			for _, sound in next, workspace:GetDescendants() do
				if sound:IsA("Sound") then
					sound.Volume = 10
					sound:Play()
				end
			end
		end
	end)
	MainSection:NewButton("FE Open Manager's Door", "Opens Manager's Door", function()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(43, 5, 7)
		wait(0.2)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(42, 5, 7)
		wait(0.2)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(43, 5, 7)
		wait(0.2)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(51, 5, 7)
	end)
	MainSection:NewButton("FE Paint Cars Hot Pink", "Paints the cars but it can be laggy", function()
 --Change "Hot Pink" to a Roblox Color that they have.
		local Color = BrickColor.new('Hot pink')
		local PaintCar = function(Car, Color_Code)
			for ii, Child in pairs(Car:GetChildren()) do
				game.ReplicatedStorage.Channels.VehicleChannel:FireServer('Paint', Child, 'None', Color_Code)
			end
		end
		while wait() do
			for i, Car in pairs(workspace.Cars:GetChildren()) do
				PaintCar(Car, Color.Number)
			end
		end
	end)
	
	MainSection:NewButton("FE Pizza Toppings Troll", "troll", function()
		for i, v in pairs(workspace.AllDough:GetChildren()) do
			workspace.GameService.AddIngredientToPizza:FireServer(v, "Sausage")
			workspace.GameService.AddIngredientToPizza:FireServer(v, "Cheese")
			workspace.GameService.AddIngredientToPizza:FireServer(v, "Pepperoni")
			workspace.GameService.AddIngredientToPizza:FireServer(v, "TomatoSauce")
		end
	end)
	MainSection:NewButton("FE Teleport To manager chair", "it tps to manager chair", function()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(23, 5, 6.5)
	end)
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
 -- VR Hands
elseif game.PlaceId == 4832438542 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	MainSection:NewButton("VR Hands GUI", "GUI", function()
		_G.VRhands()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)

--Prison Life
elseif game.PlaceId == 155615604 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	MainSection:NewButton("Tiger Admin", "idk", function()
		_G.Tigeradmin()
	end)
	MainSection:NewButton("pris life", "idk", function()
		_G.prisonlife()
	end)
	MainSection:NewButton("Crash server", "need remigton/shotgun", function()
		local Gun = "Remington 870"
 
		local Player = game.Players.LocalPlayer.Name
		
		--game.Workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Gun].ITEMPICKUP)
		
		for i,v in pairs(game.Players[Player].Backpack:GetChildren()) do
			if v.Name == (Gun) then
				v.Parent = game.Players.LocalPlayer.Character
			end
		end
		
		Gun = game.Players[Player].Character[Gun]
		
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
		
		function FireGun(target)
				coroutine.resume(coroutine.create(function()
						local bulletTable = {}
						table.insert(bulletTable, {
						Hit = target,
						Distance = 100,
						Cframe = CFrame.new(0,1,1),
						RayObject = Ray.new(Vector3.new(0.1,0.2), Vector3.new(0.3,0.4))
						})
						game.ReplicatedStorage.ShootEvent:FireServer(bulletTable, Gun)
						wait()
				end))
		end
		
		while game:GetService("RunService").Stepped:Wait() do
				for count = 0, 10, 10 do
						FireGun()
				end
		end
	end)
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	MainSection:NewButton("Gui", "kill all more stuff", function()
		local DeleteMob={
			KillAll={
				Enabled = false;
		
				TargetAPayer = false;
				Target = "";
			}
		}
		
		local ScreenGui = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local Enable = Instance.new("TextButton")
		local TextBox = Instance.new("TextBox")
		local TeamCheck = Instance.new("TextButton")
		
		--Properties:
		
		ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		
		Frame.Parent = ScreenGui
		Frame.Active = true
		Frame.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
		Frame.BorderColor3 = Color3.fromRGB(255, 255, 255)
		Frame.Position = UDim2.new(0.119955778, 0, 0.456822097, 0)
		Frame.Size = UDim2.new(0, 200, 0, 199)
		Frame.Draggable = true
		
		Enable.Name = "Enable"
		Enable.Parent = Frame
		Enable.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
		Enable.BorderColor3 = Color3.fromRGB(255, 255, 255)
		Enable.Size = UDim2.new(0, 200, 0, 50)
		Enable.Font = Enum.Font.GothamBold
		Enable.Text = "Kill All"
		Enable.TextColor3 = Color3.fromRGB(255, 255, 255)
		Enable.TextSize = 14.000
		Enable.MouseButton1Click:Connect(function()
			if DeleteMob.KillAll.Enabled == true then
				DeleteMob.KillAll.Enabled = false
			else
				DeleteMob.KillAll.Enabled = true
			end
		end)
		
		TextBox.Parent = Frame
		TextBox.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
		TextBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.Position = UDim2.new(0, 0, 0.492659211, 0)
		TextBox.Size = UDim2.new(0, 200, 0, 50)
		TextBox.ClearTextOnFocus = false
		TextBox.Font = Enum.Font.GothamBold
		TextBox.PlaceholderText = "Player Name"
		TextBox.Text = ""
		TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.TextSize = 14.000
		
		TeamCheck.Name = "TeamCheck"
		TeamCheck.Parent = Frame
		TeamCheck.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
		TeamCheck.BorderColor3 = Color3.fromRGB(255, 255, 255)
		TeamCheck.Position = UDim2.new(0, 0, 0.246329606, 0)
		TeamCheck.Size = UDim2.new(0, 200, 0, 50)
		TeamCheck.Font = Enum.Font.GothamBold
		TeamCheck.Text = "Target Player"
		TeamCheck.TextColor3 = Color3.fromRGB(255, 255, 255)
		TeamCheck.TextSize = 14.000
		TeamCheck.MouseButton1Click:Connect(function()
			if DeleteMob.KillAll.TargetAPayer == true then
				DeleteMob.KillAll.TargetAPayer = false
			else
				DeleteMob.KillAll.TargetAPayer = true
			end
		end)
		
		game:GetService('RunService').RenderStepped:connect(function()
			for i,v in pairs(game.Players:GetChildren()) do
				if TextBox.Text == v.Name  then
					DeleteMob.KillAll.Target = TextBox.Text
				end
			end
		end)
		
		while wait(.001) do
			if DeleteMob.KillAll.Enabled == true then
				if DeleteMob.KillAll.TargetAPayer == true then
					for _, plr in pairs (game:GetService('Players'):GetChildren()) do
						if plr.Name ~= game.Players.LocalPlayer.Name and plr.Name == DeleteMob.KillAll.Target then
							game.ReplicatedStorage['meleeEvent']:FireServer(plr)
						end
					end
					for i,v in pairs(game:GetService("Players"):GetPlayers()) do
						if v.Character and v ~= game.Players.LocalPlayer and v.Name == DeleteMob.KillAll.Target then
							if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character.Humanoid.Health > 0 and not (v.Character:FindFirstChild("ForceField")) then 
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame + Vector3.new(0, 0, -1)
							end
						end
					end
				else
					for _, plr in pairs (game:GetService('Players'):GetChildren()) do
						if plr.Name ~= game.Players.LocalPlayer.Name then
							game.ReplicatedStorage['meleeEvent']:FireServer(plr)
						end
					end
					for i,v in pairs(game:GetService("Players"):GetPlayers()) do
						if v.Character and v ~= game.Players.LocalPlayer then
							if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character.Humanoid.Health > 0 and not (v.Character:FindFirstChild("ForceField")) then 
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame + Vector3.new(0, 0, -1)
							end
						end
					end
				end
			end
		end
	end)
	MainSection:NewButton("aimbot and esp", "aimbot and esp", function()
		PLAYER  = game.Players.LocalPlayer
MOUSE   = PLAYER:GetMouse()
CC      = game.Workspace.CurrentCamera
 
ENABLED      = false
ESP_ENABLED  = false
 
_G.FREE_FOR_ALL = true
 
_G.ESP_BIND    = 52
_G.CHANGE_AIM  = 'q'
 
_G.AIM_AT = 'Head'
 
wait(1)
 
function GetNearestPlayerToMouse()
	local PLAYERS      = {}
	local PLAYER_HOLD  = {}
	local DISTANCES    = {}
	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= PLAYER then
			table.insert(PLAYERS, v)
		end
	end
	for i, v in pairs(PLAYERS) do
		if _G.FREE_FOR_ALL == false then
			if v and (v.Character) ~= nil and v.TeamColor ~= PLAYER.TeamColor then
				local AIM = v.Character:FindFirstChild(_G.AIM_AT)
				if AIM ~= nil then
					local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
					local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
					local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
					local DIFF                     = math.floor((POS - AIM.Position).magnitude)
					PLAYER_HOLD[v.Name .. i]       = {}
					PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
					PLAYER_HOLD[v.Name .. i].plr   = v
					PLAYER_HOLD[v.Name .. i].diff  = DIFF
					table.insert(DISTANCES, DIFF)
				end
			end
		elseif _G.FREE_FOR_ALL == true then
			local AIM = v.Character:FindFirstChild(_G.AIM_AT)
			if AIM ~= nil then
				local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
				local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
				local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
				local DIFF                     = math.floor((POS - AIM.Position).magnitude)
				PLAYER_HOLD[v.Name .. i]       = {}
				PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
				PLAYER_HOLD[v.Name .. i].plr   = v
				PLAYER_HOLD[v.Name .. i].diff  = DIFF
				table.insert(DISTANCES, DIFF)
			end
		end
	end
 
	if unpack(DISTANCES) == nil then
		return false
	end
 
	local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
	if L_DISTANCE > 20 then
		return false
	end
 
	for i, v in pairs(PLAYER_HOLD) do
		if v.diff == L_DISTANCE then
			return v.plr
		end
	end
	return false
end
 
GUI_MAIN                           = Instance.new('ScreenGui', game.CoreGui)
GUI_TARGET                         = Instance.new('TextLabel', GUI_MAIN)
GUI_AIM_AT                         = Instance.new('TextLabel', GUI_MAIN)
 
GUI_MAIN.Name                      = 'AIMBOT'
 
GUI_TARGET.Size                    = UDim2.new(0,200,0,30)
GUI_TARGET.BackgroundTransparency  = 0.5
GUI_TARGET.BackgroundColor         = BrickColor.new('Fossil')
GUI_TARGET.BorderSizePixel         = 0
GUI_TARGET.Position                = UDim2.new(0.5,-100,0,0)
GUI_TARGET.Text                    = 'AIMBOT : ON'
GUI_TARGET.TextColor3              = Color3.new(1,1,1)
GUI_TARGET.TextStrokeTransparency  = 1
GUI_TARGET.TextWrapped             = true
GUI_TARGET.FontSize                = 'Size24'
GUI_TARGET.Font                    = 'SourceSansBold'
 
GUI_AIM_AT.Size                    = UDim2.new(0,200,0,20)
GUI_AIM_AT.BackgroundTransparency  = 0.5
GUI_AIM_AT.BackgroundColor         = BrickColor.new('Fossil')
GUI_AIM_AT.BorderSizePixel         = 0
GUI_AIM_AT.Position                = UDim2.new(0.5,-100,0,30)
GUI_AIM_AT.Text                    = 'AIMING : HEAD'
GUI_AIM_AT.TextColor3              = Color3.new(1,1,1)
GUI_AIM_AT.TextStrokeTransparency  = 1
GUI_AIM_AT.TextWrapped             = true
GUI_AIM_AT.FontSize                = 'Size18'
GUI_AIM_AT.Font                    = 'SourceSansBold'
 
local TRACK = false
 
function CREATE(BASE, TEAM)
	local ESP_MAIN                   = Instance.new('BillboardGui', PLAYER.PlayerGui)
	local ESP_DOT                    = Instance.new('Frame', ESP_MAIN)
	local ESP_NAME                   = Instance.new('TextLabel', ESP_MAIN)
 
	ESP_MAIN.Name                    = 'ESP'
	ESP_MAIN.Adornee                 = BASE
	ESP_MAIN.AlwaysOnTop             = true
	ESP_MAIN.ExtentsOffset           = Vector3.new(0, 1, 0)
	ESP_MAIN.Size                    = UDim2.new(0, 5, 0, 5)
 
	ESP_DOT.Name                     = 'DOT'
	ESP_DOT.BackgroundColor          = BrickColor.new('Bright red')
	ESP_DOT.BackgroundTransparency   = 0.3
	ESP_DOT.BorderSizePixel          = 0
	ESP_DOT.Position                 = UDim2.new(-0.5, 0, -0.5, 0)
	ESP_DOT.Size                     = UDim2.new(2, 0, 2, 0)
	ESP_DOT.Visible                  = true
	ESP_DOT.ZIndex                   = 10
 
	ESP_NAME.Name                    = 'NAME'
	ESP_NAME.BackgroundColor3        = Color3.new(255, 255, 255)
	ESP_NAME.BackgroundTransparency  = 1
	ESP_NAME.BorderSizePixel         = 0
	ESP_NAME.Position                = UDim2.new(0, 0, 0, -40)
	ESP_NAME.Size                    = UDim2.new(1, 0, 10, 0)
	ESP_NAME.Visible                 = true
	ESP_NAME.ZIndex                  = 10
	ESP_NAME.Font                    = 'ArialBold'
	ESP_NAME.FontSize                = 'Size14'
	ESP_NAME.Text                    = BASE.Parent.Name:upper()
	ESP_NAME.TextColor               = BrickColor.new('Bright red')
end
 
function CLEAR()
	for _,v in pairs(PLAYER.PlayerGui:children()) do
		if v.Name == 'ESP' and v:IsA('BillboardGui') then
			v:Destroy()
		end
	end
end
 
function FIND()
	CLEAR()
	TRACK = true
	spawn(function()
		while wait() do
			if TRACK then
				CLEAR()
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild('Head') then
						if _G.FREE_FOR_ALL == false then
							if v.TeamColor ~= PLAYER.TeamColor then
								if v.Character:FindFirstChild('Head') then
									CREATE(v.Character.Head, true)
								end
							end
						else
							if v.Character:FindFirstChild('Head') then
								CREATE(v.Character.Head, true)
							end
						end
					end
				end
			end
		end
		wait(1)
	end)
end
 
MOUSE.Button2Down:connect(function()
	ENABLED = true
end)
 
MOUSE.Button2Up:connect(function()
	ENABLED = false
end)
 
MOUSE.KeyDown:connect(function(KEY)
	KEY = KEY:lower():byte()
	if KEY == _G.ESP_BIND then
		if ESP_ENABLED == false then
			FIND()
			ESP_ENABLED = true
			print('ESP : ON')
		elseif ESP_ENABLED == true then
			wait()
			CLEAR()
			TRACK = false
			ESP_ENABLED = false
			print('ESP : OFF')
		end
	end
end)
 
MOUSE.KeyDown:connect(function(KEY)
	if KEY == _G.CHANGE_AIM then
		if _G.AIM_AT == 'Head' then
			_G.AIM_AT = 'Torso'
			GUI_AIM_AT.Text = 'AIMING : TORSO'
		elseif _G.AIM_AT == 'Torso' then
			_G.AIM_AT = 'Head'
			GUI_AIM_AT.Text = 'AIMING : HEAD'
		end
	end
end)
 
game:GetService('RunService').RenderStepped:connect(function()
	if ENABLED then
		local TARGET = GetNearestPlayerToMouse()
		if (TARGET ~= false) then
			local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
			if AIM then
				CC.CoordinateFrame = CFrame.new(CC.CoordinateFrame.p, AIM.CFrame.p)
			end
			GUI_TARGET.Text = 'AIMBOT : '.. TARGET.Name:sub(1, 5)
		else
			GUI_TARGET.Text = 'AIMBOT : ON'
		end
	end
end)
 
repeat
	wait()
	if ESP_ENABLED == true then
		FIND()
	end
until ESP_ENABLED == false
	end)
	MainSection:NewButton("Mobile aimbot", "ce aimbot for now lol", function()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local localPlayer = Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		local lockOnActive = false
		local teamCheckActive = false
		local currentTouch = nil
		local fovRadius = 125
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
		local toggleButton = Instance.new("TextButton")
		toggleButton.Parent = screenGui
		toggleButton.Size = UDim2.new(0, 150, 0, 50)
		toggleButton.Position = UDim2.new(0, 100, 0, 100)
		toggleButton.Text = "Toggle Lock-On"
		toggleButton.Draggable = true
		local toggleTeamButton = Instance.new("TextButton")
		toggleTeamButton.Parent = screenGui
		toggleTeamButton.Size = UDim2.new(0, 150, 0, 50)
		toggleTeamButton.Position = UDim2.new(0, 100, 0, 160)
		toggleTeamButton.Text = "Toggle Team Check"
		toggleTeamButton.Draggable = true
		local fovCircleGui = Instance.new("ImageLabel")
		fovCircleGui.Parent = screenGui
		fovCircleGui.AnchorPoint = Vector2.new(0.5, 0.5)
		fovCircleGui.Size = UDim2.new(0, fovRadius * 2, 0, fovRadius * 2)
		fovCircleGui.Image = "rbxassetid://432312433"
		fovCircleGui.ImageTransparency = 0.5
		fovCircleGui.ImageColor3 = Color3.new(1, 1, 1)
		fovCircleGui.BackgroundTransparency = 1
		fovCircleGui.Visible = false
		fovCircleGui.ZIndex = 0 -- Ensure it's behind other GUI elements

-- Function to check if a player is within the FOV and not obstructed by walls
		local function isPlayerVisible(targetPlayer)
			if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
				return false
			end
			if teamCheckActive and targetPlayer.Team == localPlayer.Team then
				return false -- Player is on the same team
			end
			local targetHeadPosition = targetPlayer.Character.Head.Position
			local vectorToTarget = (targetHeadPosition - camera.CFrame.Position).unit
			local ray = Ray.new(camera.CFrame.Position, vectorToTarget * fovRadius)
			local part, position = game.Workspace:FindPartOnRay(ray, localPlayer.Character, false, true)
			if part and part:IsDescendantOf(targetPlayer.Character) then
				local dotProduct = camera.CFrame.LookVector:Dot(vectorToTarget)
				local angle = math.deg(math.acos(dotProduct))
				return angle <= (fovRadius / 2) -- Player is within FOV
			end
			return false -- Player is obstructed by walls
		end

-- Toggle button functionality
		toggleButton.MouseButton1Click:Connect(function()
			lockOnActive = not lockOnActive
			toggleButton.Text = lockOnActive and "Lock-On Active" or "Toggle Lock-On"
			fovCircleGui.Visible = lockOnActive
		end)
		toggleTeamButton.MouseButton1Click:Connect(function()
			teamCheckActive = not teamCheckActive
			toggleTeamButton.Text = teamCheckActive and "Team Check Active" or "Toggle Team Check"
		end)

-- Function to handle touch input
		local function onTouchStarted(touch)
			currentTouch = touch.Position
			fovCircleGui.Position = UDim2.new(0, touch.Position.X - fovRadius, 0, touch.Position.Y - fovRadius)
			fovCircleGui.Visible = true
		end

-- Function to handle touch ended
		local function onTouchEnded(touch)
			if currentTouch and currentTouch == touch.Position then
				currentTouch = nil
				fovCircleGui.Visible = false
			end
		end

-- Connect the touch event handlers
		UserInputService.TouchStarted:Connect(onTouchStarted)
		UserInputService.TouchEnded:Connect(onTouchEnded)
		RunService.RenderStepped:Connect(function()
			if lockOnActive then
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and isPlayerVisible(player) then
						local head = player.Character.Head
						local direction = (head.Position - camera.CFrame.Position).unit
						camera.CFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + direction * 10)
						break
					end
				end
			end
		end)
	end)
	MainSection:NewButton("FE spam sound", "if it says yes than everyone can hear if no then no one can hear", function()
		
		local SoundService = game:GetService("SoundService")
		if SoundService.RespectFilteringEnabled == false then
			print("success", "Success", "Everyone can hear the sounds in this game!")
			print("message", "YouTube : darkModz", "YouTube - darkmodz")
		else
			print("warning", "Warning", "Unfortunately no one else can hear it in this game, try a different one.\nMaybe an older game will work.")
		end
		while wait() do
			for _, sound in next, workspace:GetDescendants() do
				if sound:IsA("Sound") then
					sound.Volume = 10
					sound:Play()
				end
			end
		end
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
 
-- Murder Mystery 2 or MM2
elseif game.PlaceId == 142823291 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)

	MainSection:NewButton("MM2 Admin Panel", "not real admin stu", function()
		_G.mmadmin()
	end)
	
	MainSection:NewButton("MM2 AutoFarm V2", "idk", function()
		_G.AutoFarmMM()
	end)
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	MainSection:NewButton("tp coins to u", "idk", function()
		while true do
			wait()
			local children = game.Workspace:GetChildren()
			for _, child in pairs(children) do
				for _, child in pairs(child:GetChildren()) do
					table.insert(children, child)
				end
				if child:IsA("BasePart") and child.Name == "Coin" then
					child.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
				end
			end
		end
	end)
	MainSection:NewButton("aimbot and esp", "aimbot and esp", function()
		PLAYER  = game.Players.LocalPlayer
MOUSE   = PLAYER:GetMouse()
CC      = game.Workspace.CurrentCamera
 
ENABLED      = false
ESP_ENABLED  = false
 
_G.FREE_FOR_ALL = true
 
_G.ESP_BIND    = 52
_G.CHANGE_AIM  = 'q'
 
_G.AIM_AT = 'Head'
 
wait(1)
 
function GetNearestPlayerToMouse()
	local PLAYERS      = {}
	local PLAYER_HOLD  = {}
	local DISTANCES    = {}
	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= PLAYER then
			table.insert(PLAYERS, v)
		end
	end
	for i, v in pairs(PLAYERS) do
		if _G.FREE_FOR_ALL == false then
			if v and (v.Character) ~= nil and v.TeamColor ~= PLAYER.TeamColor then
				local AIM = v.Character:FindFirstChild(_G.AIM_AT)
				if AIM ~= nil then
					local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
					local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
					local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
					local DIFF                     = math.floor((POS - AIM.Position).magnitude)
					PLAYER_HOLD[v.Name .. i]       = {}
					PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
					PLAYER_HOLD[v.Name .. i].plr   = v
					PLAYER_HOLD[v.Name .. i].diff  = DIFF
					table.insert(DISTANCES, DIFF)
				end
			end
		elseif _G.FREE_FOR_ALL == true then
			local AIM = v.Character:FindFirstChild(_G.AIM_AT)
			if AIM ~= nil then
				local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
				local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
				local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
				local DIFF                     = math.floor((POS - AIM.Position).magnitude)
				PLAYER_HOLD[v.Name .. i]       = {}
				PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
				PLAYER_HOLD[v.Name .. i].plr   = v
				PLAYER_HOLD[v.Name .. i].diff  = DIFF
				table.insert(DISTANCES, DIFF)
			end
		end
	end
 
	if unpack(DISTANCES) == nil then
		return false
	end
 
	local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
	if L_DISTANCE > 20 then
		return false
	end
 
	for i, v in pairs(PLAYER_HOLD) do
		if v.diff == L_DISTANCE then
			return v.plr
		end
	end
	return false
end
 
GUI_MAIN                           = Instance.new('ScreenGui', game.CoreGui)
GUI_TARGET                         = Instance.new('TextLabel', GUI_MAIN)
GUI_AIM_AT                         = Instance.new('TextLabel', GUI_MAIN)
 
GUI_MAIN.Name                      = 'AIMBOT'
 
GUI_TARGET.Size                    = UDim2.new(0,200,0,30)
GUI_TARGET.BackgroundTransparency  = 0.5
GUI_TARGET.BackgroundColor         = BrickColor.new('Fossil')
GUI_TARGET.BorderSizePixel         = 0
GUI_TARGET.Position                = UDim2.new(0.5,-100,0,0)
GUI_TARGET.Text                    = 'AIMBOT : ON'
GUI_TARGET.TextColor3              = Color3.new(1,1,1)
GUI_TARGET.TextStrokeTransparency  = 1
GUI_TARGET.TextWrapped             = true
GUI_TARGET.FontSize                = 'Size24'
GUI_TARGET.Font                    = 'SourceSansBold'
 
GUI_AIM_AT.Size                    = UDim2.new(0,200,0,20)
GUI_AIM_AT.BackgroundTransparency  = 0.5
GUI_AIM_AT.BackgroundColor         = BrickColor.new('Fossil')
GUI_AIM_AT.BorderSizePixel         = 0
GUI_AIM_AT.Position                = UDim2.new(0.5,-100,0,30)
GUI_AIM_AT.Text                    = 'AIMING : HEAD'
GUI_AIM_AT.TextColor3              = Color3.new(1,1,1)
GUI_AIM_AT.TextStrokeTransparency  = 1
GUI_AIM_AT.TextWrapped             = true
GUI_AIM_AT.FontSize                = 'Size18'
GUI_AIM_AT.Font                    = 'SourceSansBold'
 
local TRACK = false
 
function CREATE(BASE, TEAM)
	local ESP_MAIN                   = Instance.new('BillboardGui', PLAYER.PlayerGui)
	local ESP_DOT                    = Instance.new('Frame', ESP_MAIN)
	local ESP_NAME                   = Instance.new('TextLabel', ESP_MAIN)
 
	ESP_MAIN.Name                    = 'ESP'
	ESP_MAIN.Adornee                 = BASE
	ESP_MAIN.AlwaysOnTop             = true
	ESP_MAIN.ExtentsOffset           = Vector3.new(0, 1, 0)
	ESP_MAIN.Size                    = UDim2.new(0, 5, 0, 5)
 
	ESP_DOT.Name                     = 'DOT'
	ESP_DOT.BackgroundColor          = BrickColor.new('Bright red')
	ESP_DOT.BackgroundTransparency   = 0.3
	ESP_DOT.BorderSizePixel          = 0
	ESP_DOT.Position                 = UDim2.new(-0.5, 0, -0.5, 0)
	ESP_DOT.Size                     = UDim2.new(2, 0, 2, 0)
	ESP_DOT.Visible                  = true
	ESP_DOT.ZIndex                   = 10
 
	ESP_NAME.Name                    = 'NAME'
	ESP_NAME.BackgroundColor3        = Color3.new(255, 255, 255)
	ESP_NAME.BackgroundTransparency  = 1
	ESP_NAME.BorderSizePixel         = 0
	ESP_NAME.Position                = UDim2.new(0, 0, 0, -40)
	ESP_NAME.Size                    = UDim2.new(1, 0, 10, 0)
	ESP_NAME.Visible                 = true
	ESP_NAME.ZIndex                  = 10
	ESP_NAME.Font                    = 'ArialBold'
	ESP_NAME.FontSize                = 'Size14'
	ESP_NAME.Text                    = BASE.Parent.Name:upper()
	ESP_NAME.TextColor               = BrickColor.new('Bright red')
end
 
function CLEAR()
	for _,v in pairs(PLAYER.PlayerGui:children()) do
		if v.Name == 'ESP' and v:IsA('BillboardGui') then
			v:Destroy()
		end
	end
end
 
function FIND()
	CLEAR()
	TRACK = true
	spawn(function()
		while wait() do
			if TRACK then
				CLEAR()
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild('Head') then
						if _G.FREE_FOR_ALL == false then
							if v.TeamColor ~= PLAYER.TeamColor then
								if v.Character:FindFirstChild('Head') then
									CREATE(v.Character.Head, true)
								end
							end
						else
							if v.Character:FindFirstChild('Head') then
								CREATE(v.Character.Head, true)
							end
						end
					end
				end
			end
		end
		wait(1)
	end)
end
 
MOUSE.Button2Down:connect(function()
	ENABLED = true
end)
 
MOUSE.Button2Up:connect(function()
	ENABLED = false
end)
 
MOUSE.KeyDown:connect(function(KEY)
	KEY = KEY:lower():byte()
	if KEY == _G.ESP_BIND then
		if ESP_ENABLED == false then
			FIND()
			ESP_ENABLED = true
			print('ESP : ON')
		elseif ESP_ENABLED == true then
			wait()
			CLEAR()
			TRACK = false
			ESP_ENABLED = false
			print('ESP : OFF')
		end
	end
end)
 
MOUSE.KeyDown:connect(function(KEY)
	if KEY == _G.CHANGE_AIM then
		if _G.AIM_AT == 'Head' then
			_G.AIM_AT = 'Torso'
			GUI_AIM_AT.Text = 'AIMING : TORSO'
		elseif _G.AIM_AT == 'Torso' then
			_G.AIM_AT = 'Head'
			GUI_AIM_AT.Text = 'AIMING : HEAD'
		end
	end
end)
 
game:GetService('RunService').RenderStepped:connect(function()
	if ENABLED then
		local TARGET = GetNearestPlayerToMouse()
		if (TARGET ~= false) then
			local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
			if AIM then
				CC.CoordinateFrame = CFrame.new(CC.CoordinateFrame.p, AIM.CFrame.p)
			end
			GUI_TARGET.Text = 'AIMBOT : '.. TARGET.Name:sub(1, 5)
		else
			GUI_TARGET.Text = 'AIMBOT : ON'
		end
	end
end)
 
repeat
	wait()
	if ESP_ENABLED == true then
		FIND()
	end
until ESP_ENABLED == false
	end)
	MainSection:NewButton("Mobile aimbot", "ce aimbot for now lol", function()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local localPlayer = Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		local lockOnActive = false
		local teamCheckActive = false
		local currentTouch = nil
		local fovRadius = 125
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
		local toggleButton = Instance.new("TextButton")
		toggleButton.Parent = screenGui
		toggleButton.Size = UDim2.new(0, 150, 0, 50)
		toggleButton.Position = UDim2.new(0, 100, 0, 100)
		toggleButton.Text = "Toggle Lock-On"
		toggleButton.Draggable = true
		local toggleTeamButton = Instance.new("TextButton")
		toggleTeamButton.Parent = screenGui
		toggleTeamButton.Size = UDim2.new(0, 150, 0, 50)
		toggleTeamButton.Position = UDim2.new(0, 100, 0, 160)
		toggleTeamButton.Text = "Toggle Team Check"
		toggleTeamButton.Draggable = true
		local fovCircleGui = Instance.new("ImageLabel")
		fovCircleGui.Parent = screenGui
		fovCircleGui.AnchorPoint = Vector2.new(0.5, 0.5)
		fovCircleGui.Size = UDim2.new(0, fovRadius * 2, 0, fovRadius * 2)
		fovCircleGui.Image = "rbxassetid://432312433"
		fovCircleGui.ImageTransparency = 0.5
		fovCircleGui.ImageColor3 = Color3.new(1, 1, 1)
		fovCircleGui.BackgroundTransparency = 1
		fovCircleGui.Visible = false
		fovCircleGui.ZIndex = 0 -- Ensure it's behind other GUI elements

-- Function to check if a player is within the FOV and not obstructed by walls
		local function isPlayerVisible(targetPlayer)
			if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
				return false
			end
			if teamCheckActive and targetPlayer.Team == localPlayer.Team then
				return false -- Player is on the same team
			end
			local targetHeadPosition = targetPlayer.Character.Head.Position
			local vectorToTarget = (targetHeadPosition - camera.CFrame.Position).unit
			local ray = Ray.new(camera.CFrame.Position, vectorToTarget * fovRadius)
			local part, position = game.Workspace:FindPartOnRay(ray, localPlayer.Character, false, true)
			if part and part:IsDescendantOf(targetPlayer.Character) then
				local dotProduct = camera.CFrame.LookVector:Dot(vectorToTarget)
				local angle = math.deg(math.acos(dotProduct))
				return angle <= (fovRadius / 2) -- Player is within FOV
			end
			return false -- Player is obstructed by walls
		end

-- Toggle button functionality
		toggleButton.MouseButton1Click:Connect(function()
			lockOnActive = not lockOnActive
			toggleButton.Text = lockOnActive and "Lock-On Active" or "Toggle Lock-On"
			fovCircleGui.Visible = lockOnActive
		end)
		toggleTeamButton.MouseButton1Click:Connect(function()
			teamCheckActive = not teamCheckActive
			toggleTeamButton.Text = teamCheckActive and "Team Check Active" or "Toggle Team Check"
		end)

-- Function to handle touch input
		local function onTouchStarted(touch)
			currentTouch = touch.Position
			fovCircleGui.Position = UDim2.new(0, touch.Position.X - fovRadius, 0, touch.Position.Y - fovRadius)
			fovCircleGui.Visible = true
		end

-- Function to handle touch ended
		local function onTouchEnded(touch)
			if currentTouch and currentTouch == touch.Position then
				currentTouch = nil
				fovCircleGui.Visible = false
			end
		end

-- Connect the touch event handlers
		UserInputService.TouchStarted:Connect(onTouchStarted)
		UserInputService.TouchEnded:Connect(onTouchEnded)
		RunService.RenderStepped:Connect(function()
			if lockOnActive then
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and isPlayerVisible(player) then
						local head = player.Character.Head
						local direction = (head.Position - camera.CFrame.Position).unit
						camera.CFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + direction * 10)
						break
					end
				end
			end
		end)
	end)
	MainSection:NewButton("Destroy GUIS", "CLCK A LOT OF TIMES", function()
		for i, v in pairs(game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):GetDescendants()) do
			if v.Name == "Main" and v.Parent then
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				wait(0.1)
				v.Parent:Destroy()
				break
			end
		end
	end)
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
	 

				   	-- Mic Up
elseif game.PlaceId == 6884319169 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	
	MainSection:NewButton("FE Mic Up lag and noise spam", "yu", function()
		for i, v in pairs(workspace:GetDescendants()) do
			if v:IsA('ClickDetector') and not v.Parent.Name:match('Purchase') then
				spawn(function()
					for i = 1, 20 do
						fireclickdetector(v)
						task.wait(.01)
					end
				end)
			end
		end
	end)
	MainSection:NewButton("Show admin gui Mic Up", "should be at middle right guy pose", function()
		game:GetService("Players").LocalPlayer.PlayerGui.Admin.Enabled = true
		game:GetService("Players").LocalPlayer.PlayerGui.Admin.Frame.Visible = true
		game:GetService("Players").LocalPlayer.PlayerGui.Admin.OpenClose.Visible = true
	end)
	MainSection:NewButton("FE Mic Up grab Coil Tool", "Grabs coil", function()
		local active = true
		local player = game:GetService("Players").LocalPlayer
		local function getCoilPart()
			for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
				if v.ClassName == "MeshPart" and v.Name == "ToolGrab" and v.MeshId == "rbxassetid://16606212" then
					return v -- Script by Amph#5896
				end
			end
		end
		if _G.running then
			_G.running = false
			task.wait(0.1)
		end
		_G.running = active
		while _G.running do
			task.wait(1)
			pcall(function()
				repeat
					wait()
				until player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 1
				if not player.Character:FindFirstChild("coil") and not player.Backpack:FindFirstChild("coil") then
					local coiL = getCoilPart()
					local currentPos = player.Character.HumanoidRootPart.CFrame
					task.wait(0.1)
			
					repeat 
						player.Character.HumanoidRootPart.CFrame = coiL.CFrame - Vector3.new(0, 5, 0)
						fireproximityprompt(coiL.ProximityPrompt, 0)
						task.wait()
					until player.Character:FindFirstChild("coil") or player.Backpack:FindFirstChild("coil")
			
					player.Character.HumanoidRootPart.CFrame = currentPos
				end
			end)
		end
	end)
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
				    	-- Neighbors
elseif game.PlaceId == 12699642568 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	
	MainSection:NewButton("Can Walk on Grass Neighbors", "Deletes all Touch Intrests", function()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v.Name == "TouchInterest" then
				v:Destroy()
			end
		end
	end)
	MainSection:NewButton("Skip Player Neighbors", "if you run out of skips Basically just tps to sum and kills you", function()
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Terrain.CFrame
	end)
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
-- Natural Diaster Survival
elseif game.PlaceId == 189707 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewButton("Shows Diaster before shows all", "you need to be on the map and still alive btw", function()
		game.StarterGui:SetCore("SendNotification",  {
			Title = "This Diaster is";
			Text = game:GetService("Players").LocalPlayer.Character.SurvivalTag.Value;
			Icon = "";
			Duration = 5;
			Callback = NotificationBindable;
		})
	end)
	MainSection:NewButton("Vanta CE NDS Script", "Vanta CE NDS Script", function()
		_G.NDS()
	end)
	
	
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
-- Blade Ball
elseif game.PlaceId == 13772394625 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	
	
	MainSection:NewButton("auto parry", "idk", function()
		local services = setmetatable({}, { __index = function(self, key)
			local service = game:GetService(key)
			self[key] = service
			return service
		end })
		
		local Players = services.Players
		local Workspace = services.Workspace
		
		local client = Players.LocalPlayer
		
		local ballsFolder = Workspace.Balls
		
		local Util = {}
		do
			shared.Util = Util
		
			function Util.getBalls()
				local realBall, otherBall
		
				for i = 1, #ballsFolder:GetChildren() do
					local ball = ballsFolder:GetChildren()[i]
					if not ball:IsA("BasePart") then continue end
		
					local isRealBall = ball:GetAttribute("realBall")
					if isRealBall == nil then continue end
		
					if isRealBall then
						realBall = ball
					else
						otherBall = ball
					end
		
					if realBall and otherBall then break end
				end
		
				return realBall, otherBall
			end
		
			function Util.isHunting()
				local realBall = Util.getBalls()
				if not realBall then return false end
		
				local target = realBall:GetAttribute("target")
				if not target then return false end
		
				return target == client.Name
			end
		end
		
		ballsFolder.ChildAdded:Connect(function()
			print('------------------- Ball Spawned -------------------')
		
			task.wait(1.5)
		
			local realBall, fakeBall
		
			for i = 1, #ballsFolder:GetChildren() do
				local ball = ballsFolder:GetChildren()[i]
				if not ball:IsA("BasePart") then continue end
		
				local currentSpeed = ball.Velocity.Magnitude
				if currentSpeed == 0 then
					realBall = ball
				else
					fakeBall = ball
				end
		
				if realBall and fakeBall then break end
			end
		
			if realBall then
				local usedRemote = false
				local lastPosition = realBall.Position
				local lastVelocity = fakeBall.Velocity
		
				realBall:GetPropertyChangedSignal("Position"):Connect(function()
					if not Util.isHunting() then return end
		
					local playerPosition = client.Character and client.Character.PrimaryPart and client.Character.PrimaryPart.Position
					if not playerPosition then return end
		
					local currentSpeed = fakeBall and fakeBall.Velocity.Magnitude or 0
		
					local predictedPosition = lastPosition + lastVelocity
					local predictedDistance = (predictedPosition - playerPosition).Magnitude
		
					lastPosition = realBall.Position
					lastVelocity = realBall.Velocity
		
					local timeToReachPlayer = predictedDistance / (currentSpeed == 0 and 1 or currentSpeed)
					print(timeToReachPlayer)
		
					if timeToReachPlayer <= 0.3 and not usedRemote then
						game:GetService("ReplicatedStorage"):WaitForChild("Remotes", 9e9):WaitForChild("ParryButtonPress"):Fire()
						task.wait(0.1)
						usedRemote = true
					elseif timeToReachPlayer > 0.4 then
						usedRemote = false
					end
				end)
			end
		end)		
	end)
	MainSection:NewButton("Auto Parry 2", "second auto parry", function()
		_G.autoparry()
	end)
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)

	

-- Legends of Speed
elseif game.PlaceId == 3101667897 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewButton("GUI made by Ree", "made by Ree", function()
			-- Made By Ree
		game.StarterGui:SetCore("SendNotification",  {
			Title = "Script Made By Ree";
			Text = "this Script was made by Ree";
			Icon = "";
			Duration = 5;
			Callback = NotificationBindable;
		})
		_G.LegendOfSpeed()
	end)
	
	MainSection:NewButton("fire all orb touch interests", "yuh", function()
		getgenv().collectOrbsToggle = true
		spawn(function()
			while wait() do
				if not getgenv().collectOrbsToggle then
					break
				end
				for i, v in pairs(game:GetService("Workspace").orbFolder:GetDescendants()) do
					if v.Name == "TouchInterest" and v.Parent then
						firetouchinterest(game:GetService("Players").LocalPlayer.Character.Head, v.Parent, 0)
						wait(0.1)
						firetouchinterest(game:GetService("Players").LocalPlayer.Character.Head, v.Parent, 1)
						break
					end
				end
			end
		end)
	end)
	
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)



						-- Chaos
elseif game.PlaceId == 6441847031 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	
	MainSection:NewButton("chaos script", "idk", function()
		_G.chaos()
	end)
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)

-- Bayside High School
elseif game.PlaceId == 12640491155 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewDropdown("Teleports", "Teleports to Place", {
		"School",
		"Dorms",
		"Floor 1",
		"Floor 2",
		"Floor 3",
		"Floor 4",
		"Floor 5",
		"Penthouse",
		"Party",
		"Football Field",
		"Gym",
		"Principle Office",
		"Science/Boys Bathroom",
		"History",
		"English",
		"Math/Girls Bathroom",
		"Computer Lab",
		"Art",
		"Music",
		"Library",
		"Bus",
		"Aquatic Center"
	}, function(currentOption)
		if currentOption == "School" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-511, 13, -24)
		elseif currentOption == "Dorms" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-511, 13, 356)
		elseif currentOption == "Floor 1" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-510, 13, 441)
		elseif currentOption == "Floor 2" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-510, 31, 441)
		elseif currentOption == "Floor 3" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-510, 48, 441)
		elseif currentOption == "Floor 4" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-510, 66, 441)
		elseif currentOption == "Floor 5" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-510, 83, 441)
		elseif currentOption == "Penthouse" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-510, 101, 441)
		elseif currentOption == "Party" then 
			for i, v in pairs(workspace:GetDescendants()) do
				if v.Name == "PartyParticle" then
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
				end
			end
		elseif currentOption == "Football Field" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-509, 17, -400)
		elseif currentOption == "Gym" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-650, 17, -195)
		elseif currentOption == "Principle Office" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-635, 17, -15)
		elseif currentOption == "Science/Boys Bathroom" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-640, 46, -122)
		elseif currentOption == "History" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-379, 46, -49)
		elseif currentOption == "English" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-641, 46, -48)
		elseif currentOption == "Math/Girls Bathroom" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-379, 46, -122)
		elseif currentOption == "Computer Lab" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-580, 46, -114)
		elseif currentOption == "Art" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-509, 46, -114)
		elseif currentOption == "Music" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-440, 46, -116)
		elseif currentOption == "Library" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-399, 17, -118)
		elseif currentOption == "Bus" then
			for i, v in pairs(workspace:GetDescendants()) do
				if v.Name == "BusSeat" then
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
				end
			end
		elseif currentOption == "Aquatic Center" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-488, 20, -557)
		end
	end)
	MainSection:NewDropdown("Spawn/despawns Vehicle/Cars", "spawns/despawns cars", {
		"Thunderbird",
		"Ladybug",
		"Offroader",
		"Golf Cart"
	}, function(currentOption2)
		if currentOption2 == "Thunderbird" then
			local args = {
				[1] = "Spawn",
				[2] = "Thunderbird"
			}
			
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
		elseif currentOption2 == "Ladybug" then
			local args = {
				[1] = "Spawn",
				[2] = "Ladybug"
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
		elseif currentOption2 == "Offroader" then
			local args = {
				[1] = "Spawn",
				[2] = "Offroader"
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
		elseif currentOption2 == "Golf Cart" then
			local args = {
				[1] = "Spawn",
				[2] = "Golf Cart"
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
		end
	end)	
	MainSection:NewTextBox("Teleport in players car", "puts you in players passenger of car can put rp name too", function(txt)
		for i, v in pairs(workspace.Vehicles:GetChildren()) do
			local player = txt
			local targname = ""
			for i, v in pairs(game.Players:GetPlayers()) do
				if string.sub(string.lower(v.Name), 0, #player) == string.lower(player) or string.sub(string.lower(v.DisplayName), 0, #player) == string.lower(player) or string.sub(string.lower(v.Character.Head:WaitForChild("PlayerHover").Frame.RPName.Text), 0, #player) == string.lower(player) then
					targname = v.Name
				end
			end
			if v.Name == targname then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Body.VehicleSeat.CFrame
				wait(0.25)
				fireproximityprompt(v.Body.VehicleSeat.ButtonPrompt)
			end
		end
	end)
	MainSection:NewTextBox("Teleport to player", "can put rp name too for tp", function(txt)
		for i, v in pairs(workspace:GetChildren()) do
			local player = txt
			local targname = ""
			for i, v in pairs(game.Players:GetPlayers()) do
				if string.sub(string.lower(v.Name), 0, #player) == string.lower(player) or string.sub(string.lower(v.DisplayName), 0, #player) == string.lower(player) or string.sub(string.lower(v.Character.Head:WaitForChild("PlayerHover").Frame.RPName.Text), 0, #player) == string.lower(player) then
					targname = v.Name
				end
			end
			if v.Name == targname then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:WaitForChild("HumanoidRootPart").CFrame
			end
		end
	end)
	local VehicleMods = Window:NewTab("Vehicle Mods")
	local VehicleModsSection = VehicleMods:NewSection("Vehicle Mods")
	VehicleModsSection:NewSlider("Vehicle Max Speed", "laggy idk why, Sets max speed of vehicle", 9999, 1, function(lol86)
		for i, v in pairs(workspace:GetDescendants()) do
			if v.Name == game:GetService("Players").LocalPlayer.Name then
				for i, v in pairs(v:GetChildren()) do
					if v.Name == "Stats" then
						for i, v in pairs(v:GetChildren()) do
							if v.Name == "MaxSpeed" then
								v.Value = lol86
							end
						end
					end
				end
			end
		end
	end)
	VehicleModsSection:NewSlider("Vehicle Torque", "laggy idk why, Sets torque/horsepower/hp/Acceleration of vehicle", 9999, 1, function(lol86)
		for i, v in pairs(workspace:GetDescendants()) do
			if v.Name == game:GetService("Players").LocalPlayer.Name then
				for i, v in pairs(v:GetChildren()) do
					if v.Name == "Stats" then
						for i, v in pairs(v:GetChildren()) do
							if v.Name == "Torque" then
								v.Value = lol86
							end
						end
					end
				end
			end
		end
	end)
	VehicleModsSection:NewSlider("Vehicle Max Turn Speed", "laggy idk why, Sets turn speed of vehicle", 9999, 1, function(lol86)
		for i, v in pairs(workspace:GetDescendants()) do
			if v.Name == game:GetService("Players").LocalPlayer.Name then
				for i, v in pairs(v:GetChildren()) do
					if v.Name == "Stats" then
						for i, v in pairs(v:GetChildren()) do
							if v.Name == "TurnSpeed" then
								v.Value = lol86
							end
						end
					end
				end
			end
		end
	end)
	VehicleModsSection:NewToggle("FE Rainbow Car", "rainbow car", function(state)
		if state then
			getgenv().whaterv = true -- set to false when you want it to stop and true when you want it to start again

			spawn(function()
				while wait() do
					if not getgenv().whaterv then
						break
					end
					local args = {
						[1] = "Paint",
						[2] = Color3.new(math.random(), math.random(), math.random())
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
				end
			end)	
		else
			getgenv().whaterv = false -- set to false when you want it to stop and true when you want it to start again
			spawn(function()
				while wait() do
					if not getgenv().whaterv then
						break
					end
					local args = {
						[1] = "Paint",
						[2] = Color3.new(math.random(), math.random(), math.random())
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
				end
			end)
		end
	end)
	VehicleModsSection:NewToggle("FE Spam Horn", "annoying asf", function(state)
		if state then
			getgenv().whaterv3 = true -- set to false when you want it to stop and true when you want it to start again
			spawn(function()
				while wait() do
					if not getgenv().whaterv3 then
						break
					end
					local args = {
						[1] = "Horn"
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
				end
			end)
		else
			getgenv().whaterv3 = false -- set to false when you want it to stop and true when you want it to start again
			spawn(function()
				while wait() do
					if not getgenv().whaterv3 then
						break
					end
					local args = {
						[1] = "Horn"
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Vehicle"):FireServer(unpack(args))
				end
			end)
		end
	end)
	

	local Misc23 = Window:NewTab("Misc")
	local Misc23Section = Misc23:NewSection("Misc")
	Misc23Section:NewToggle("Backpack Loop", "loops tru all free backpacks", function(state)
		if state then
			getgenv().whaterv2 = true -- set to false when you want it to stop and true when you want it to start again
			spawn(function()
				while wait() do
					if not getgenv().whaterv2 then
						break
					end
					local args = {
						[1] = "Theme",
						[2] = "Default"
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Patched"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Checkered Luxury"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Gingham"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Hypebeast"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Preppy"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
				end
			end)
		else
			getgenv().whaterv2 = false -- set to false when you want it to stop and true when you want it to start again
			spawn(function()
				while wait() do
					if not getgenv().whaterv2 then
						break
					end
					local args = {
						[1] = "Theme",
						[2] = "Default"
					}
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Patched"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Checkered Luxury"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Gingham"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Hypebeast"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
					local args = {
						[1] = "Theme",
						[2] = "Preppy"
					}
					wait(0.51)
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Backpack"):FireServer(unpack(args))
				end
			end)
		end
	end)
	Misc23Section:NewButton("Remove Most House/Dorm Doors", "Client sided ofc", function()
		for i, v in pairs(workspace:GetDescendants()) do
			if v.Name == "DormDoor" then
				v:Destroy()
			end
		end
	end)

	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
-- Big PaintBall
elseif game.PlaceId == 3527629287 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewButton("Auto Kill", "super detected", function()
		if _G.active == nil then
			_G.active = true
		end
		local plr = game:GetService("Players").LocalPlayer
		local round_type = game:GetService("Workspace")["__VARIABLES"].RoundType
		local guns_folder = game:GetService("Workspace")["__DEBRIS"].Guns
		local RS = game:GetService("RunService")
		local function getPlayer()
			local char = plr.Character or plr.CharacterAdded:Wait()
			local humr = char:WaitForChild("HumanoidRootPart")
			return char, humr
		end
		local function get_target_players()
			local current_guns = guns_folder:GetChildren()
			local target_players = {}
			for i, v in next, current_guns do
				local player = game:GetService("Players"):FindFirstChild(v.Name)
				if player then
					if round_type.Value:lower():match("tdm") and player.Team ~= plr.Team then
						table.insert(target_players, player)
					elseif round_type.Value:lower():match("ffa") and player.UserId ~= plr.UserId then
						table.insert(target_players, player)
					end
				end
			end
			return target_players
		end
		while RS.RenderStepped:Wait() and _G.active do
			local targets = get_target_players()
			for i, v in next, targets do
				local cam = workspace.CurrentCamera
				repeat
					local char, humr = getPlayer()
					local target_char = v.Character
					if not target_char then
						break
					end
					local target_humr = target_char:WaitForChild("HumanoidRootPart")
					humr.CFrame = target_humr.CFrame - target_humr.CFrame.lookVector * 5
					cam.CFrame = CFrame.new(cam.CFrame.p, target_humr.Position)
					RS.RenderStepped:Wait()
				until not guns_folder:FindFirstChild(v.Name) or not _G.active
			end
		end
	end)
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
-- Big PaintBall 2
elseif game.PlaceId == 9865958871 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end

	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewButton("Gun Mods", "norecoil/RapidFire", function()
		_G.noRecoil = true
		_G.rapidFire = true
		for _,v in pairs(getgc(true)) do
			if(typeof(v) == "table") then
				if(rawget(v,"fireRate")) then
					if _G.noRecoil then v.shakeMagnitude = 0 end
					if _G.rapidFire then v.fireRate = 1000 end
				end
			end
		end
	end)
	

	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)

-- Tower Of Hell
elseif game.PlaceId == 1962086868 then
	local ScreenGui = Instance.new("ScreenGui")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Minimize = Instance.new("TextButton")
local Rot = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Close = Instance.new("TextButton")
local Rot_3 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame_6 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TabList = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")
local Tabs = Instance.new("Folder")
local CTabs = Instance.new("Folder")
local TabTemplates = Instance.new("Folder")
local TTemp = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Desc = Instance.new("TextLabel")
local ITemp = Instance.new("Frame")
local Input = Instance.new("TextBox")
local UICorner_9 = Instance.new("UICorner")
local BTemp = Instance.new("Frame")
local Button = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local SectionTemp = Instance.new("Frame")
local Section = Instance.new("TextLabel")
local SectionSpacer = Instance.new("Frame")
local Slide = Instance.new("Frame")
local Max = Instance.new("TextButton")
local Bar = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local UICorner_12 = Instance.new("UICorner")
local DTemp = Instance.new("Frame")
local Button_2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Drop = Instance.new("ScrollingFrame")
local UICorner_14 = Instance.new("UICorner")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local Button_3 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TabStuff = Instance.new("Folder")
local TabTemp = Instance.new("Frame")
local Button_4 = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local TempTab = Instance.new("ScrollingFrame")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local Script = Instance.new("Script", ImageLabel)
Script.Name = "Script"

--Properties:
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.ClipsDescendants = true
ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
ImageLabel.Size = UDim2.new(0, 550, 0, 300)
ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
ImageLabel.ImageTransparency = 0.150

UICorner.Parent = ImageLabel

TopBar.Name = "TopBar"
TopBar.Parent = ImageLabel
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 0.900
TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(1, 0, 0, 40)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Sky Hub CE Edition"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
UIGradient.Rotation = 90
UIGradient.Parent = TopBar

Minimize.Name = "Minimize"
Minimize.Parent = TopBar
Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0, 470, 0, 0)
Minimize.Size = UDim2.new(0, 40, 0, 40)
Minimize.Font = Enum.Font.Ubuntu
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Rot.Name = "Rot"
Rot.Parent = Minimize
Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot.BackgroundTransparency = 1.000
Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot.BorderSizePixel = 0
Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot.Rotation = 90.000
Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

UICorner_2.CornerRadius = UDim.new(0, 500)
UICorner_2.Parent = Frame

Frame_2.Parent = Rot
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_3.CornerRadius = UDim.new(0, 500)
UICorner_3.Parent = Frame_2

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 510, 0, 0)
Close.Rotation = 1.000
Close.Size = UDim2.new(0, 40, 0, 40)
Close.Font = Enum.Font.Ubuntu
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000

Rot_3.Name = "Rot"
Rot_3.Parent = Close
Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rot_3.BackgroundTransparency = 1.000
Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rot_3.BorderSizePixel = 0
Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

Frame_5.Parent = Rot_3
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
Frame_5.Rotation = -45.000
Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_6.CornerRadius = UDim.new(0, 500)
UICorner_6.Parent = Frame_5

Frame_6.Parent = Rot_3
Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_6.BorderSizePixel = 0
Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
Frame_6.Rotation = 45.000
Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

UICorner_7.CornerRadius = UDim.new(0, 500)
UICorner_7.Parent = Frame_6

TabList.Name = "TabList"
TabList.Parent = ImageLabel
TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabList.BackgroundTransparency = 1.000
TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabList.BorderSizePixel = 0
TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
TabList.Size = UDim2.new(0, 120, 0, 251)
TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
TabList.ScrollBarThickness = 0

UIGridLayout.Parent = TabList
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

Tabs.Name = "Tabs"
Tabs.Parent = ImageLabel

CTabs.Name = "CTabs"
CTabs.Parent = ImageLabel

TabTemplates.Name = "TabTemplates"
TabTemplates.Parent = Script

TTemp.Name = "TTemp"
TTemp.Parent = TabTemplates
TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TTemp.BackgroundTransparency = 1.000
TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TTemp.BorderSizePixel = 0
TTemp.Size = UDim2.new(0, 100, 0, 100)

Toggle.Name = "Toggle"
Toggle.Parent = TTemp
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.BackgroundTransparency = 0.750
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
Toggle.Size = UDim2.new(0, 33, 0, 33)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.Ubuntu
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 30.000

UICorner_8.CornerRadius = UDim.new(0, 5)
UICorner_8.Parent = Toggle

Desc.Name = "Desc"
Desc.Parent = TTemp
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
Desc.Size = UDim2.new(0, 145, 0, 26)
Desc.Font = Enum.Font.Ubuntu
Desc.Text = "Checkmark"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true
Desc.TextXAlignment = Enum.TextXAlignment.Left

ITemp.Name = "ITemp"
ITemp.Parent = TabTemplates
ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ITemp.BackgroundTransparency = 1.000
ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
ITemp.BorderSizePixel = 0
ITemp.Size = UDim2.new(0, 100, 0, 100)

Input.Name = "Input"
Input.Parent = ITemp
Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Input.BackgroundTransparency = 0.750
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
Input.Size = UDim2.new(0, 150, 0, 33)
Input.Font = Enum.Font.Ubuntu
Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Input.PlaceholderText = "Placeholder"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 22.000
Input.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 5)
UICorner_9.Parent = Input

BTemp.Name = "BTemp"
BTemp.Parent = TabTemplates
BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
BTemp.BackgroundTransparency = 1.000
BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
BTemp.BorderSizePixel = 0
BTemp.Size = UDim2.new(0, 100, 0, 100)

Button.Name = "Button"
Button.Parent = BTemp
Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button.BackgroundTransparency = 0.750
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button.Size = UDim2.new(0, 150, 0, 33)
Button.Font = Enum.Font.Ubuntu
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextSize = 18.000

UICorner_10.CornerRadius = UDim.new(0, 5)
UICorner_10.Parent = Button

SectionTemp.Name = "SectionTemp"
SectionTemp.Parent = TabTemplates
SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionTemp.BackgroundTransparency = 1.000
SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionTemp.BorderSizePixel = 0
SectionTemp.Size = UDim2.new(0, 100, 0, 100)

Section.Name = "Section"
Section.Parent = SectionTemp
Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Section.BackgroundTransparency = 1.000
Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
Section.Font = Enum.Font.Ubuntu
Section.Text = "Section"
Section.TextColor3 = Color3.fromRGB(255, 255, 255)
Section.TextScaled = true
Section.TextSize = 14.000
Section.TextWrapped = true
Section.TextXAlignment = Enum.TextXAlignment.Left

SectionSpacer.Name = "SectionSpacer"
SectionSpacer.Parent = TabTemplates
SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionSpacer.BackgroundTransparency = 1.000
SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionSpacer.BorderSizePixel = 0
SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

Slide.Name = "Slide"
Slide.Parent = TabTemplates
Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slide.BackgroundTransparency = 1.000
Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slide.BorderSizePixel = 0
Slide.Size = UDim2.new(0, 100, 0, 100)

Max.Name = "Max"
Max.Parent = Slide
Max.AnchorPoint = Vector2.new(0.5, 0.5)
Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Max.BackgroundTransparency = 0.500
Max.BorderSizePixel = 0
Max.Position = UDim2.new(0.5, 0, 0.5, 0)
Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
Max.AutoButtonColor = false
Max.Font = Enum.Font.Ubuntu
Max.Text = ""
Max.TextColor3 = Color3.fromRGB(0, 0, 0)
Max.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Max
Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 82, 1, 0)

UICorner_11.Parent = Bar

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
UIGradient_2.Parent = Bar

UICorner_12.Parent = Max

DTemp.Name = "DTemp"
DTemp.Parent = TabTemplates
DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DTemp.BackgroundTransparency = 1.000
DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
DTemp.BorderSizePixel = 0
DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
DTemp.Size = UDim2.new(0, 100, 0, 100)

Button_2.Name = "Button"
Button_2.Parent = DTemp
Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_2.BackgroundTransparency = 0.750
Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_2.BorderSizePixel = 0
Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_2.Size = UDim2.new(0, 150, 0, 33)
Button_2.Font = Enum.Font.Ubuntu
Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_2.TextSize = 18.000

UICorner_13.CornerRadius = UDim.new(0, 5)
UICorner_13.Parent = Button_2

Drop.Name = "Drop"
Drop.Parent = Button_2
Drop.Active = true
Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Drop.BackgroundTransparency = 0.750
Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
Drop.Size = UDim2.new(0, 150, 0, 127)
Drop.ZIndex = 2
Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
Drop.ScrollBarThickness = 0

UICorner_14.CornerRadius = UDim.new(0, 5)
UICorner_14.Parent = Drop

UIGridLayout_2.Parent = Drop
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

Button_3.Name = "Button"
Button_3.Parent = UIGridLayout_2
Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_3.BorderSizePixel = 0
Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
Button_3.Size = UDim2.new(0, 150, 0, 33)
Button_3.Font = Enum.Font.Ubuntu
Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_3.TextSize = 18.000

UICorner_15.CornerRadius = UDim.new(0, 5)
UICorner_15.Parent = Button_3

TabStuff.Name = "TabStuff"
TabStuff.Parent = Script

TabTemp.Name = "TabTemp"
TabTemp.Parent = TabStuff
TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
TabTemp.BackgroundTransparency = 0.900
TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabTemp.BorderSizePixel = 0
TabTemp.Size = UDim2.new(0, 100, 0, 100)

Button_4.Name = "Button"
Button_4.Parent = TabTemp
Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Button_4.BackgroundTransparency = 1.000
Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button_4.BorderSizePixel = 0
Button_4.Size = UDim2.new(1, 0, 1, 0)
Button_4.Font = Enum.Font.Ubuntu
Button_4.Text = ""
Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Button_4.TextSize = 20.000

TextLabel_2.Parent = TabTemp
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
TextLabel_2.Font = Enum.Font.Ubuntu
TextLabel_2.Text = "Tab 1"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 20.000
TextLabel_2.TextWrapped = true

ImageLabel_2.Parent = TabTemp
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
ImageLabel_2.Image = "rbxassetid://12010069146"

TempTab.Name = "TempTab"
TempTab.Parent = TabStuff
TempTab.Active = true
TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TempTab.BackgroundTransparency = 1.000
TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
TempTab.BorderSizePixel = 0
TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
TempTab.Size = UDim2.new(0, 430, 0, 260)
TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
TempTab.ScrollBarThickness = 0

UIGridLayout_3.Parent = TempTab
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

-- Scripts:
local close = false
local function HLBC_fake_script() -- ImageLabel.Script 
	local script = Instance.new('LocalScript', ImageLabel)

	--[[
		
		Version 6.0
		
		Max Intensity: 1
		
		Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
		Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
		
		Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
		
		]]
	
	local BlurIntensity = 0.4
	
	local RunService = game:GetService('RunService')
	local camera = workspace.CurrentCamera
	local MTREL = "Glass"
	local binds = {}
	local root = Instance.new('Folder', camera)
	
	local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
	local frame = script.Parent
	DepthOfField.FarIntensity = 0
	DepthOfField.FocusDistance = 51.6
	DepthOfField.InFocusRadius = 50
	DepthOfField.NearIntensity = BlurIntensity
	DepthOfField.Name = " "
	root.Name = 'BlurSnox'
	
	local GenUid; do -- Generate unique names for RenderStepped bindings
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end
	
	do
		local function IsNotNaN(x)
			return x == x
		end
		local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		while not continue do
			RunService.RenderStepped:wait()
			continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	
	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2
	
		local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end
	
			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para
	
			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)
	
			local cf0 = st
	
			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
	
			local ac = CFrame.Angles(0, 0, acos(dot))
	
			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
	
			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
	
			if not p0 then
				p0 = Instance.new('Part')
				p0.Color = Color3.fromRGB(91, 128, 130)
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.CastShadow = false
				p0.Material = MTREL
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0
	
			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1
	
			return p0, p1
		end
	
		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end
	
	if binds[frame] then
		return binds[frame].parts
	end
	
	local uid = GenUid()
	local parts = {}
	local visible = true
	local f = Instance.new('Folder', root)
	f.Name = frame.Name
	
	local parents = {}
	do
		local function add(child)
			if child:IsA'GuiObject' then
				parents[#parents + 1] = child
				add(child.Parent)
			end
		end
		add(frame)
	end
	
	local function UpdateOrientation(fetchProps)
		if close == true then
			return
		end
		local trans = 0.99
		if visible == false then
			trans = 1
		end
		local properties = {
			Transparency = trans;
			--BrickColor = BrickColor.new('Institutional white');
		}
		local zIndex = 1 - 0.05*frame.ZIndex
	
		local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
		local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
		do
			local rot = 0;
			for _, v in ipairs(parents) do
				rot = rot + v.Rotation
			end
			if rot ~= 0 and rot%180 ~= 0 then
				local mid = tl:lerp(br, 0.5)
				local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
				local vec = tl
				tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
				tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
				bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
				br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
			end
		end
		DrawQuad(
			camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
			camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
			camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
			camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
			parts
		)
		if fetchProps then
			for _, pt in pairs(parts) do
				pt.Parent = f
			end
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end
	
	UpdateOrientation(true)
	RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	local function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.TopBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
	script.Parent.TopBar.Minimize.Activated:Connect(function()
		visible = false
	end)
	script.Parent.TopBar.Close.Activated:Connect(function()
		close = true
		script.Parent.Parent:Destroy()
		game:GetService("Workspace").Camera.BlurSnox:Destroy()
		game:GetService("Lighting")[" "]:Destroy()
	end)
	local uis = game:GetService("UserInputService")
	uis.InputBegan:Connect(function(inp)
		if inp.KeyCode == Enum.KeyCode.RightControl then
			visible = true
		end
	end)
	task.spawn(function()
		while task.wait() do
			script.Parent.Visible = visible
		end
	end)
	
		--[[
		local lib = require(script.Parent.Lib)
		local tab = lib.AddTab("Tabs are over rated")
		
		tab.AddButton("Button", "Im a button test", function()
			print("Testing!")
		end)
		tab.AddToggle("Toggle", "Toggle Desc", function(bool)
			print(bool)
		end)
		tab.AddInput("Input", "Placeholder i think", function(out)
			print(out)
		end)
		tab.AddSection("Wha da fuck")
		tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
			print(val)
		end)
		
		local tab2 = lib.AddTab("Why are most niggers annoying")
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
			print(str)
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)
		tab2.AddButton("Why are you black", "Cause im a negro", function()
			print("Niggers")
		end)]]
end
coroutine.wrap(HLBC_fake_script)()

local lib = {}
local tabs = {}
local ui = ImageLabel

function AddToggle(name, text, callback, tab)
	local button = ui.Script.TabTemplates.TTemp:Clone()
	button.Name = name
	button.Desc.Text = name
	button.Desc.MouseEnter:Connect(function()
		button.Desc.Text = text
	end)
	button.Desc.MouseLeave:Connect(function()
		button.Desc.Text = name
	end)
	local enabled = false
	local deb = false
	local ts = game:GetService("TweenService")
	button.Toggle.Activated:Connect(function()
		if deb == false then
			if enabled == false then
				enabled = true
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			else
				enabled = false
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
				ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
				deb = true
				task.spawn(function()
					wait(0.25)
					deb = false
				end)
			end
			callback(enabled)
		end
	end)
	button.Parent = tab
	return button
end

function AddInput(name, placeholder, callback, tab)
	local button = ui.Script.TabTemplates.ITemp:Clone()
	button.Name = name
	button.Input.PlaceholderText = placeholder
	local previousinput = ""
	task.spawn(function()
		while task.wait(0.1) do
			if #button.Input.Text >= 10 then
				button.Input.TextScaled = true
			else
				button.Input.TextScaled = true
			end
		end
	end)
	button.Input.FocusLost:Connect(function()
		if button.Input.Text == "" then
			return
		end
		previousinput = button.Input.Text
		callback(button.Input.Text)
	end)
	button.Parent = tab
	return button
end

function AddButton(name, text, callback, tab)
	local button = ui.Script.TabTemplates.BTemp:Clone()
	button.Name = name
	button.Button.Text = name
	button.ZIndex = 1
	button.Button.MouseEnter:Connect(function()
		button.Button.Text = text
		button.Button.TextScaled = true
	end)
	button.Button.MouseLeave:Connect(function()
		button.Button.Text = name
		button.Button.TextScaled = false
	end)
	button.Button.Activated:Connect(callback)
	button.Parent = tab
	return button
end

function AddEmpty(tab)
	local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
	spacer.Parent = tab
end

function AddSection(name, tab)
	local actions = #tab:GetChildren()
	local section = ui.Script.TabTemplates.SectionTemp:Clone()
	if actions % 2 == 0 then
		AddEmpty(tab)
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	else
		section.Parent = tab
		section.Section.Text = name
		AddEmpty(tab)
	end
	return section
end

function AddSlider(name,tab,callback, maxi,min)
	local slider = ui.Script.TabTemplates.Slide:Clone()
	local text = Instance.new("TextLabel", slider)
	text.Size = UDim2.new(1,0,1,0)
	text.BackgroundTransparency = 1
	text.TextColor3 = Color3.new(255,255,255)
	text.Text = ""
	slider.Parent = tab
	task.spawn(function()
		local max = slider.Max
		local bar = max.Bar
		local player = game.Players.LocalPlayer
		local mouse = player:GetMouse()
		local uis = game:GetService("UserInputService")
		local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
		local down = false
		local lastinp = nil

		max.InputBegan:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = true
			end
		end)

		max.InputEnded:Connect(function(input, gp)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
				lastinp = input
				down = false
			end
		end)
		local function ScaleToOffset(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
		end


		local function OffsetToScale(Offset)
			local ViewPortSize = workspace.Camera.ViewportSize
			return Offset / max.Size
		end
		while task.wait(0.05) do
			if down == true and lastinp ~= nil then
				local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
				--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
				local ts = game:GetService("TweenService")
				ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
				local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
				local function range(value)
					local oldmin, oldmax = 0, 161
					local newmin, newmax = min, maxi

					local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

					return newValue
				end
				text.Text = name .. " " .. tostring(math.round(range(val)))
				callback(range(val))
			end
		end
	end)
	return slider
end

function AddDropdown(name,text,s_table,callback,tab)
	local dropdown = ui.Script.TabTemplates.DTemp:Clone()
	dropdown.Parent = tab
	dropdown.Name = name
	dropdown.Button.Text = name
	dropdown.ZIndex = 2
	dropdown.Button.MouseEnter:Connect(function()
		dropdown.Button.Text = text
	end)
	dropdown.Button.MouseLeave:Connect(function()
		dropdown.Button.Text = name
	end)
	local visible = false
	dropdown.Button.Activated:Connect(function()
		if visible == true then
			visible = false
		else
			visible = true
		end
	end)
	dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
	task.spawn(function()
		while task.wait() do
			dropdown.Button.Drop.Visible = visible
		end
	end)
	for i, v in pairs(s_table) do
		local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
		temp.Parent = dropdown.Button.Drop
		temp.Text = v
		temp.Activated:Connect(function()
			visible = false
			callback(v)
		end)
	end
	return dropdown
end

local tabs = 0
local uistroke = Instance.new("UIStroke", ui)
uistroke.Color = Color3.fromRGB(0,0,0)
uistroke.Thickness = 5
uistroke.Transparency = 0.85
local tdeb = false
function lib.AddTab(name, icon)
	tabs += 1
	local tname = name
	local icon = icon or "160460785"
	icon = "rbxassetid://" .. icon
	local tbutton = ui.Script.TabStuff.TabTemp:Clone()
	tbutton.Parent = ui.TabList
	tbutton.ImageLabel.Image = icon
	tbutton.TextLabel.Text = name
	local tholder = ui.Script.TabStuff.TempTab:Clone()
	tholder.Parent = ui.Tabs
	tholder.Name = name
	tholder.Visible = false
	if tabs == 1 then
		tholder.Visible = true
	end
	tbutton.Button.Activated:Connect(function()
		if tdeb == true then
			return
		end
		tdeb = true
		local ts = game:GetService("TweenService")
		for i, v in pairs(ui.Tabs:GetChildren()) do
			for i, v in pairs(v:GetDescendants()) do
				if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
					if not v:FindFirstChild("Trans") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
							local dat2 = Instance.new("NumberValue", v)
							dat2.Name = "TTrans"
							dat2.Value = v.TextTransparency
						elseif v:IsA("UIStroke") then
							local dat = Instance.new("NumberValue", v)
							dat.Name = "STrans"
							dat.Value = v.Transparency
						else
							local dat = Instance.new("NumberValue", v)
							dat.Name = "Trans"
							dat.Value = v.BackgroundTransparency
						end
					end
					--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				end
			end
			if v ~= tholder then
				local clone = v--:Clone()
				v.Parent = ui.CTabs
				--v.Visible = false
				for i, v in pairs(clone:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						--local dat = Instance.new("NumberValue", v)
						--dat.Name = "Trans"
						--dat.Value = v.BackgroundTransparency
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
						end
						--print("maybe twen")
					end
				end
				task.spawn(function()
					wait(0.5)
					v.Visible = false
				end)
			end
		end
		wait(0.5)
		tholder.Visible = true
		tholder.Parent = ui.Tabs
		for i, v in pairs(tholder:GetChildren()) do
			if v ~= tholder then
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
						elseif v:IsA("UIStroke") then
							ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
						else
							ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
						end
					end
				end
			end
		end
		tdeb = false
	end)
	local toreturn = {}
	toreturn.AddButton = function(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	toreturn.AddDropdown = function(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	toreturn.AddInput = function(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	toreturn.AddToggle = function(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	toreturn.AddSection = function(Name)
		AddSection(Name, tholder)
		return toreturn
	end
	toreturn.AddSlider = function(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	function toreturn:NewButton(Name, text, callback)
		AddButton(Name,text,callback,tholder)
	end
	function toreturn:NewDropdown(Name, text, tab, callback)
		AddDropdown(Name,text,tab,callback,tholder)
	end
	function toreturn:NewTextBox(Name, text, callback)
		AddInput(Name,text,callback,tholder)
	end
	function toreturn:NewToggle(Name, text, callback)
		AddToggle(Name,text,callback,tholder)
	end
	function toreturn:NewSection(Name)
		AddSection(Name,tholder)
		return toreturn
	end
	function toreturn:NewSlider(name, text, max, min, callback)
		AddSlider(name,tholder,callback, max, min)
	end
	toreturn.Source = tholder
	return toreturn
end

task.spawn(function()
	while task.wait(0.1) do
		
		ui.TopBar.TextLabel.Text = "Sky Hub CE Edition" 
	end
end)

lib.CreateLib = function(name,smth)
	local toreturn = {}
	function toreturn:NewTab(name, icon)
		return lib.AddTab(name,icon)
	end
	return toreturn
end
	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	MainSection:NewButton("God mode", "need to reexecute one u respawn/new stage", function()
		if game:GetService("Players").LocalPlayer.Character:FindFirstChild('KillScript') then -- path here
			for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
				if v.Name == "KillScript" then
					v:Destroy()
				end
			end
		end
	end)
	MainSection:NewButton("TP TO TOP", "tp to end of tower", function()
		if workspace.tower.walls["2"]:FindFirstChild('killwall') then -- path here
			for i,v in pairs(workspace.tower.walls["2"]:GetChildren()) do
				if v.Name == "killwall" then
					v:Destroy()
				end
			end
		end
		if game:GetService("Players").LocalPlayer.Character:FindFirstChild('KillScript') then -- path here
			for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
				if v.Name == "KillScript" then
					v:Destroy()
				end
			end
		end
		local plr = game:service"Players".LocalPlayer;
		local tween_s = game:service"TweenService";
		local info = TweenInfo.new(5,Enum.EasingStyle.Quad);
		
		
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == "finishes" and v.Parent.Name == "tower" then
				local tween = tween_s:Create(plr.Character["HumanoidRootPart"],info,{CFrame=v.Finish.CFrame});
			   tween:Play();
				
			end
		end
	end)
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
	 -- Build A Boat or BABFT
elseif game.PlaceId == 537413528 then
	local ScreenGui = Instance.new("ScreenGui")
	local ImageLabel = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local Minimize = Instance.new("TextButton")
	local Rot = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Frame_2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Frame_3 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Frame_4 = Instance.new("Frame")
	local UICorner_5 = Instance.new("UICorner")
	local Close = Instance.new("TextButton")
	local Rot_3 = Instance.new("Frame")
	local Frame_5 = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local Frame_6 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local TabList = Instance.new("ScrollingFrame")
	local UIGridLayout = Instance.new("UIGridLayout")
	local Tabs = Instance.new("Folder")
	local CTabs = Instance.new("Folder")
	local TabTemplates = Instance.new("Folder")
	local TTemp = Instance.new("Frame")
	local Toggle = Instance.new("TextButton")
	local UICorner_8 = Instance.new("UICorner")
	local Desc = Instance.new("TextLabel")
	local ITemp = Instance.new("Frame")
	local Input = Instance.new("TextBox")
	local UICorner_9 = Instance.new("UICorner")
	local BTemp = Instance.new("Frame")
	local Button = Instance.new("TextButton")
	local UICorner_10 = Instance.new("UICorner")
	local SectionTemp = Instance.new("Frame")
	local Section = Instance.new("TextLabel")
	local SectionSpacer = Instance.new("Frame")
	local Slide = Instance.new("Frame")
	local Max = Instance.new("TextButton")
	local Bar = Instance.new("Frame")
	local UICorner_11 = Instance.new("UICorner")
	local UIGradient_2 = Instance.new("UIGradient")
	local UICorner_12 = Instance.new("UICorner")
	local DTemp = Instance.new("Frame")
	local Button_2 = Instance.new("TextButton")
	local UICorner_13 = Instance.new("UICorner")
	local Drop = Instance.new("ScrollingFrame")
	local UICorner_14 = Instance.new("UICorner")
	local UIGridLayout_2 = Instance.new("UIGridLayout")
	local Button_3 = Instance.new("TextButton")
	local UICorner_15 = Instance.new("UICorner")
	local TabStuff = Instance.new("Folder")
	local TabTemp = Instance.new("Frame")
	local Button_4 = Instance.new("TextButton")
	local TextLabel_2 = Instance.new("TextLabel")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local TempTab = Instance.new("ScrollingFrame")
	local UIGridLayout_3 = Instance.new("UIGridLayout")
	local Script = Instance.new("Script", ImageLabel)
	Script.Name = "Script"

	--Properties:
	ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ImageLabel.Parent = ScreenGui
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.ClipsDescendants = true
	ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
	ImageLabel.Size = UDim2.new(0, 550, 0, 300)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
	ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
	ImageLabel.ImageTransparency = 0.150

	UICorner.Parent = ImageLabel

	TopBar.Name = "TopBar"
	TopBar.Parent = ImageLabel
	TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TopBar.BackgroundTransparency = 0.900
	TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BorderSizePixel = 0
	TopBar.Size = UDim2.new(1, 0, 0, 40)

	TextLabel.Parent = TopBar
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 200, 0, 40)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "Sky Hub CE Edition"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 25.000
	TextLabel.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
	UIGradient.Rotation = 90
	UIGradient.Parent = TopBar

	Minimize.Name = "Minimize"
	Minimize.Parent = TopBar
	Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Minimize.BackgroundTransparency = 1.000
	Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.BorderSizePixel = 0
	Minimize.Position = UDim2.new(0, 470, 0, 0)
	Minimize.Size = UDim2.new(0, 40, 0, 40)
	Minimize.Font = Enum.Font.Ubuntu
	Minimize.Text = ""
	Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.TextSize = 14.000

	Rot.Name = "Rot"
	Rot.Parent = Minimize
	Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot.BackgroundTransparency = 1.000
	Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot.BorderSizePixel = 0
	Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot.Rotation = 90.000
	Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

	UICorner_2.CornerRadius = UDim.new(0, 500)
	UICorner_2.Parent = Frame

	Frame_2.Parent = Rot
	Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
	Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_3.CornerRadius = UDim.new(0, 500)
	UICorner_3.Parent = Frame_2

	Close.Name = "Close"
	Close.Parent = TopBar
	Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Close.BackgroundTransparency = 1.000
	Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 510, 0, 0)
	Close.Rotation = 1.000
	Close.Size = UDim2.new(0, 40, 0, 40)
	Close.Font = Enum.Font.Ubuntu
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(0, 0, 0)
	Close.TextSize = 14.000

	Rot_3.Name = "Rot"
	Rot_3.Parent = Close
	Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot_3.BackgroundTransparency = 1.000
	Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot_3.BorderSizePixel = 0
	Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

	Frame_5.Parent = Rot_3
	Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_5.BorderSizePixel = 0
	Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
	Frame_5.Rotation = -45.000
	Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_6.CornerRadius = UDim.new(0, 500)
	UICorner_6.Parent = Frame_5

	Frame_6.Parent = Rot_3
	Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_6.BorderSizePixel = 0
	Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
	Frame_6.Rotation = 45.000
	Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_7.CornerRadius = UDim.new(0, 500)
	UICorner_7.Parent = Frame_6

	TabList.Name = "TabList"
	TabList.Parent = ImageLabel
	TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabList.BackgroundTransparency = 1.000
	TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabList.BorderSizePixel = 0
	TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
	TabList.Size = UDim2.new(0, 120, 0, 251)
	TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
	TabList.ScrollBarThickness = 0

	UIGridLayout.Parent = TabList
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

	Tabs.Name = "Tabs"
	Tabs.Parent = ImageLabel

	CTabs.Name = "CTabs"
	CTabs.Parent = ImageLabel

	TabTemplates.Name = "TabTemplates"
	TabTemplates.Parent = Script

	TTemp.Name = "TTemp"
	TTemp.Parent = TabTemplates
	TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TTemp.BackgroundTransparency = 1.000
	TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TTemp.BorderSizePixel = 0
	TTemp.Size = UDim2.new(0, 100, 0, 100)

	Toggle.Name = "Toggle"
	Toggle.Parent = TTemp
	Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Toggle.BackgroundTransparency = 0.750
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
	Toggle.Size = UDim2.new(0, 33, 0, 33)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.Ubuntu
	Toggle.Text = ""
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 30.000

	UICorner_8.CornerRadius = UDim.new(0, 5)
	UICorner_8.Parent = Toggle

	Desc.Name = "Desc"
	Desc.Parent = TTemp
	Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Desc.BackgroundTransparency = 1.000
	Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Desc.BorderSizePixel = 0
	Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
	Desc.Size = UDim2.new(0, 145, 0, 26)
	Desc.Font = Enum.Font.Ubuntu
	Desc.Text = "Checkmark"
	Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
	Desc.TextScaled = true
	Desc.TextSize = 14.000
	Desc.TextWrapped = true
	Desc.TextXAlignment = Enum.TextXAlignment.Left

	ITemp.Name = "ITemp"
	ITemp.Parent = TabTemplates
	ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ITemp.BackgroundTransparency = 1.000
	ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ITemp.BorderSizePixel = 0
	ITemp.Size = UDim2.new(0, 100, 0, 100)

	Input.Name = "Input"
	Input.Parent = ITemp
	Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Input.BackgroundTransparency = 0.750
	Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Input.BorderSizePixel = 0
	Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
	Input.Size = UDim2.new(0, 150, 0, 33)
	Input.Font = Enum.Font.Ubuntu
	Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Input.PlaceholderText = "Placeholder"
	Input.Text = ""
	Input.TextColor3 = Color3.fromRGB(255, 255, 255)
	Input.TextSize = 22.000
	Input.TextWrapped = true

	UICorner_9.CornerRadius = UDim.new(0, 5)
	UICorner_9.Parent = Input

	BTemp.Name = "BTemp"
	BTemp.Parent = TabTemplates
	BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
	BTemp.BackgroundTransparency = 1.000
	BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BTemp.BorderSizePixel = 0
	BTemp.Size = UDim2.new(0, 100, 0, 100)

	Button.Name = "Button"
	Button.Parent = BTemp
	Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button.BackgroundTransparency = 0.750
	Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button.Size = UDim2.new(0, 150, 0, 33)
	Button.Font = Enum.Font.Ubuntu
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 18.000

	UICorner_10.CornerRadius = UDim.new(0, 5)
	UICorner_10.Parent = Button

	SectionTemp.Name = "SectionTemp"
	SectionTemp.Parent = TabTemplates
	SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionTemp.BackgroundTransparency = 1.000
	SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionTemp.BorderSizePixel = 0
	SectionTemp.Size = UDim2.new(0, 100, 0, 100)

	Section.Name = "Section"
	Section.Parent = SectionTemp
	Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Section.BackgroundTransparency = 1.000
	Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Section.BorderSizePixel = 0
	Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
	Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
	Section.Font = Enum.Font.Ubuntu
	Section.Text = "Section"
	Section.TextColor3 = Color3.fromRGB(255, 255, 255)
	Section.TextScaled = true
	Section.TextSize = 14.000
	Section.TextWrapped = true
	Section.TextXAlignment = Enum.TextXAlignment.Left

	SectionSpacer.Name = "SectionSpacer"
	SectionSpacer.Parent = TabTemplates
	SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionSpacer.BackgroundTransparency = 1.000
	SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionSpacer.BorderSizePixel = 0
	SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

	Slide.Name = "Slide"
	Slide.Parent = TabTemplates
	Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slide.BackgroundTransparency = 1.000
	Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slide.BorderSizePixel = 0
	Slide.Size = UDim2.new(0, 100, 0, 100)

	Max.Name = "Max"
	Max.Parent = Slide
	Max.AnchorPoint = Vector2.new(0.5, 0.5)
	Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Max.BackgroundTransparency = 0.500
	Max.BorderSizePixel = 0
	Max.Position = UDim2.new(0.5, 0, 0.5, 0)
	Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
	Max.AutoButtonColor = false
	Max.Font = Enum.Font.Ubuntu
	Max.Text = ""
	Max.TextColor3 = Color3.fromRGB(0, 0, 0)
	Max.TextSize = 14.000

	Bar.Name = "Bar"
	Bar.Parent = Max
	Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Bar.BorderSizePixel = 0
	Bar.Size = UDim2.new(0, 82, 1, 0)

	UICorner_11.Parent = Bar

	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
	UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
	UIGradient_2.Parent = Bar

	UICorner_12.Parent = Max

	DTemp.Name = "DTemp"
	DTemp.Parent = TabTemplates
	DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DTemp.BackgroundTransparency = 1.000
	DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DTemp.BorderSizePixel = 0
	DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
	DTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_2.Name = "Button"
	Button_2.Parent = DTemp
	Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_2.BackgroundTransparency = 0.750
	Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_2.BorderSizePixel = 0
	Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_2.Size = UDim2.new(0, 150, 0, 33)
	Button_2.Font = Enum.Font.Ubuntu
	Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_2.TextSize = 18.000

	UICorner_13.CornerRadius = UDim.new(0, 5)
	UICorner_13.Parent = Button_2

	Drop.Name = "Drop"
	Drop.Parent = Button_2
	Drop.Active = true
	Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Drop.BackgroundTransparency = 0.750
	Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Drop.BorderSizePixel = 0
	Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
	Drop.Size = UDim2.new(0, 150, 0, 127)
	Drop.ZIndex = 2
	Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
	Drop.ScrollBarThickness = 0

	UICorner_14.CornerRadius = UDim.new(0, 5)
	UICorner_14.Parent = Drop

	UIGridLayout_2.Parent = Drop
	UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

	Button_3.Name = "Button"
	Button_3.Parent = UIGridLayout_2
	Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_3.BorderSizePixel = 0
	Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_3.Size = UDim2.new(0, 150, 0, 33)
	Button_3.Font = Enum.Font.Ubuntu
	Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_3.TextSize = 18.000

	UICorner_15.CornerRadius = UDim.new(0, 5)
	UICorner_15.Parent = Button_3

	TabStuff.Name = "TabStuff"
	TabStuff.Parent = Script

	TabTemp.Name = "TabTemp"
	TabTemp.Parent = TabStuff
	TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabTemp.BackgroundTransparency = 0.900
	TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabTemp.BorderSizePixel = 0
	TabTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_4.Name = "Button"
	Button_4.Parent = TabTemp
	Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_4.BackgroundTransparency = 1.000
	Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_4.BorderSizePixel = 0
	Button_4.Size = UDim2.new(1, 0, 1, 0)
	Button_4.Font = Enum.Font.Ubuntu
	Button_4.Text = ""
	Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_4.TextSize = 20.000

	TextLabel_2.Parent = TabTemp
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel_2.BorderSizePixel = 0
	TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
	TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
	TextLabel_2.Font = Enum.Font.Ubuntu
	TextLabel_2.Text = "Tab 1"
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextScaled = true
	TextLabel_2.TextSize = 20.000
	TextLabel_2.TextWrapped = true

	ImageLabel_2.Parent = TabTemp
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel_2.BorderSizePixel = 0
	ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
	ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
	ImageLabel_2.Image = "rbxassetid://12010069146"

	TempTab.Name = "TempTab"
	TempTab.Parent = TabStuff
	TempTab.Active = true
	TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TempTab.BackgroundTransparency = 1.000
	TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TempTab.BorderSizePixel = 0
	TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
	TempTab.Size = UDim2.new(0, 430, 0, 260)
	TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
	TempTab.ScrollBarThickness = 0

	UIGridLayout_3.Parent = TempTab
	UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

	-- Scripts:
	local close = false
	local function HLBC_fake_script() -- ImageLabel.Script 
		local script = Instance.new('LocalScript', ImageLabel)

		--[[
			
			Version 6.0
			
			Max Intensity: 1
			
			Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
			Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
			
			Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
			
			]]
		
		local BlurIntensity = 0.4
		
		local RunService = game:GetService('RunService')
		local camera = workspace.CurrentCamera
		local MTREL = "Glass"
		local binds = {}
		local root = Instance.new('Folder', camera)
		
		local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
		local frame = script.Parent
		DepthOfField.FarIntensity = 0
		DepthOfField.FocusDistance = 51.6
		DepthOfField.InFocusRadius = 50
		DepthOfField.NearIntensity = BlurIntensity
		DepthOfField.Name = " "
		root.Name = 'BlurSnox'
		
		local GenUid; do -- Generate unique names for RenderStepped bindings
			local id = 0
			function GenUid()
				id = id + 1
				return 'neon::'..tostring(id)
			end
		end
		
		do
			local function IsNotNaN(x)
				return x == x
			end
			local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			while not continue do
				RunService.RenderStepped:wait()
				continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			end
		end
		
		local DrawQuad; do
			local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
			local sz = 0.2
		
			local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
				local s1 = (v1 - v2).magnitude
				local s2 = (v2 - v3).magnitude
				local s3 = (v3 - v1).magnitude
				local smax = max(s1, s2, s3)
				local A, B, C
				if s1 == smax then
					A, B, C = v1, v2, v3
				elseif s2 == smax then
					A, B, C = v2, v3, v1
				elseif s3 == smax then
					A, B, C = v3, v1, v2
				end
		
				local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
				local perp = sqrt((C-A).magnitude^2 - para*para)
				local dif_para = (A - B).magnitude - para
		
				local st = CFrame.new(B, A)
				local za = CFrame.Angles(pi/2,0,0)
		
				local cf0 = st
		
				local Top_Look = (cf0 * za).lookVector
				local Mid_Point = A + CFrame.new(A, B).LookVector * para
				local Needed_Look = CFrame.new(Mid_Point, C).LookVector
				local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
		
				local ac = CFrame.Angles(0, 0, acos(dot))
		
				cf0 = cf0 * ac
				if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
				end
				cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
		
				local cf1 = st * ac * CFrame.Angles(0, pi, 0)
				if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
				end
				cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
		
				if not p0 then
					p0 = Instance.new('Part')
					p0.Color = Color3.fromRGB(91, 128, 130)
					p0.FormFactor = 'Custom'
					p0.TopSurface = 0
					p0.BottomSurface = 0
					p0.Anchored = true
					p0.CanCollide = false
					p0.CastShadow = false
					p0.Material = MTREL
					p0.Size = Vector3.new(sz, sz, sz)
					local mesh = Instance.new('SpecialMesh', p0)
					mesh.MeshType = 2
					mesh.Name = 'WedgeMesh'
				end
				p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
				p0.CFrame = cf0
		
				if not p1 then
					p1 = p0:clone()
				end
				p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
				p1.CFrame = cf1
		
				return p0, p1
			end
		
			function DrawQuad(v1, v2, v3, v4, parts)
				parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
				parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
			end
		end
		
		if binds[frame] then
			return binds[frame].parts
		end
		
		local uid = GenUid()
		local parts = {}
		local visible = true
		local f = Instance.new('Folder', root)
		f.Name = frame.Name
		
		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end
		
		local function UpdateOrientation(fetchProps)
			if close == true then
				return
			end
			local trans = 0.99
			if visible == false then
				trans = 1
			end
			local properties = {
				Transparency = trans;
				--BrickColor = BrickColor.new('Institutional white');
			}
			local zIndex = 1 - 0.05*frame.ZIndex
		
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end
		
		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
		local UserInputService = game:GetService("UserInputService")
		local runService = (game:GetService("RunService"));
		
		local gui = script.Parent
		
		local dragging
		local dragInput
		local dragStart
		local startPos
		
		local function Lerp(a, b, m)
			return a + (b - a) * m
		end;
		
		local lastMousePos
		local lastGoalPos
		local DRAG_SPEED = (8); -- // The speed of the UI darg.
		local function Update(dt)
			if not (startPos) then return end;
			if not (dragging) and (lastGoalPos) then
				gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
				return 
			end;
		
			local delta = (lastMousePos - UserInputService:GetMouseLocation())
			local xGoal = (startPos.X.Offset - delta.X);
			local yGoal = (startPos.Y.Offset - delta.Y);
			lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
		end;
		
		gui.TopBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position
				lastMousePos = UserInputService:GetMouseLocation()
		
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		
		gui.TopBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		
		runService.Heartbeat:Connect(Update)
		script.Parent.TopBar.Minimize.Activated:Connect(function()
			visible = false
		end)
		script.Parent.TopBar.Close.Activated:Connect(function()
			close = true
			script.Parent.Parent:Destroy()
			game:GetService("Workspace").Camera.BlurSnox:Destroy()
			game:GetService("Lighting")[" "]:Destroy()
		end)
		local uis = game:GetService("UserInputService")
		uis.InputBegan:Connect(function(inp)
			if inp.KeyCode == Enum.KeyCode.RightControl then
				visible = true
			end
		end)
		task.spawn(function()
			while task.wait() do
				script.Parent.Visible = visible
			end
		end)
		
			--[[
			local lib = require(script.Parent.Lib)
			local tab = lib.AddTab("Tabs are over rated")
			
			tab.AddButton("Button", "Im a button test", function()
				print("Testing!")
			end)
			tab.AddToggle("Toggle", "Toggle Desc", function(bool)
				print(bool)
			end)
			tab.AddInput("Input", "Placeholder i think", function(out)
				print(out)
			end)
			tab.AddSection("Wha da fuck")
			tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
				print(val)
			end)
			
			local tab2 = lib.AddTab("Why are most niggers annoying")
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
				print(str)
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)]]
	end
	coroutine.wrap(HLBC_fake_script)()

	local lib = {}
	local tabs = {}
	local ui = ImageLabel

	function AddToggle(name, text, callback, tab)
		local button = ui.Script.TabTemplates.TTemp:Clone()
		button.Name = name
		button.Desc.Text = name
		button.Desc.MouseEnter:Connect(function()
			button.Desc.Text = text
		end)
		button.Desc.MouseLeave:Connect(function()
			button.Desc.Text = name
		end)
		local enabled = false
		local deb = false
		local ts = game:GetService("TweenService")
		button.Toggle.Activated:Connect(function()
			if deb == false then
				if enabled == false then
					enabled = true
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				else
					enabled = false
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				end
				callback(enabled)
			end
		end)
		button.Parent = tab
		return button
	end

	function AddInput(name, placeholder, callback, tab)
		local button = ui.Script.TabTemplates.ITemp:Clone()
		button.Name = name
		button.Input.PlaceholderText = placeholder
		local previousinput = ""
		task.spawn(function()
			while task.wait(0.1) do
				if #button.Input.Text >= 10 then
					button.Input.TextScaled = true
				else
					button.Input.TextScaled = true
				end
			end
		end)
		button.Input.FocusLost:Connect(function()
			if button.Input.Text == "" then
				return
			end
			previousinput = button.Input.Text
			callback(button.Input.Text)
		end)
		button.Parent = tab
		return button
	end

	function AddButton(name, text, callback, tab)
		local button = ui.Script.TabTemplates.BTemp:Clone()
		button.Name = name
		button.Button.Text = name
		button.ZIndex = 1
		button.Button.MouseEnter:Connect(function()
			button.Button.Text = text
			button.Button.TextScaled = true
		end)
		button.Button.MouseLeave:Connect(function()
			button.Button.Text = name
			button.Button.TextScaled = false
		end)
		button.Button.Activated:Connect(callback)
		button.Parent = tab
		return button
	end

	function AddEmpty(tab)
		local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
		spacer.Parent = tab
	end

	function AddSection(name, tab)
		local actions = #tab:GetChildren()
		local section = ui.Script.TabTemplates.SectionTemp:Clone()
		if actions % 2 == 0 then
			AddEmpty(tab)
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		else
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		end
		return section
	end

	function AddSlider(name,tab,callback, maxi,min)
		local slider = ui.Script.TabTemplates.Slide:Clone()
		local text = Instance.new("TextLabel", slider)
		text.Size = UDim2.new(1,0,1,0)
		text.BackgroundTransparency = 1
		text.TextColor3 = Color3.new(255,255,255)
		text.Text = ""
		slider.Parent = tab
		task.spawn(function()
			local max = slider.Max
			local bar = max.Bar
			local player = game.Players.LocalPlayer
			local mouse = player:GetMouse()
			local uis = game:GetService("UserInputService")
			local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
			local down = false
			local lastinp = nil

			max.InputBegan:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = true
				end
			end)

			max.InputEnded:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = false
				end
			end)
			local function ScaleToOffset(Scale)
				local ViewPortSize = workspace.Camera.ViewportSize
				return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
			end


			local function OffsetToScale(Offset)
				local ViewPortSize = workspace.Camera.ViewportSize
				return Offset / max.Size
			end
			while task.wait(0.05) do
				if down == true and lastinp ~= nil then
					local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
					--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
					local ts = game:GetService("TweenService")
					ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
					local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
					local function range(value)
						local oldmin, oldmax = 0, 161
						local newmin, newmax = min, maxi

						local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

						return newValue
					end
					text.Text = name .. " " .. tostring(math.round(range(val)))
					callback(range(val))
				end
			end
		end)
		return slider
	end

	function AddDropdown(name,text,s_table,callback,tab)
		local dropdown = ui.Script.TabTemplates.DTemp:Clone()
		dropdown.Parent = tab
		dropdown.Name = name
		dropdown.Button.Text = name
		dropdown.ZIndex = 2
		dropdown.Button.MouseEnter:Connect(function()
			dropdown.Button.Text = text
		end)
		dropdown.Button.MouseLeave:Connect(function()
			dropdown.Button.Text = name
		end)
		local visible = false
		dropdown.Button.Activated:Connect(function()
			if visible == true then
				visible = false
			else
				visible = true
			end
		end)
		dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
		task.spawn(function()
			while task.wait() do
				dropdown.Button.Drop.Visible = visible
			end
		end)
		for i, v in pairs(s_table) do
			local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
			temp.Parent = dropdown.Button.Drop
			temp.Text = v
			temp.Activated:Connect(function()
				visible = false
				callback(v)
			end)
		end
		return dropdown
	end

	local tabs = 0
	local uistroke = Instance.new("UIStroke", ui)
	uistroke.Color = Color3.fromRGB(0,0,0)
	uistroke.Thickness = 5
	uistroke.Transparency = 0.85
	local tdeb = false
	function lib.AddTab(name, icon)
		tabs += 1
		local tname = name
		local icon = icon or "160460785"
		icon = "rbxassetid://" .. icon
		local tbutton = ui.Script.TabStuff.TabTemp:Clone()
		tbutton.Parent = ui.TabList
		tbutton.ImageLabel.Image = icon
		tbutton.TextLabel.Text = name
		local tholder = ui.Script.TabStuff.TempTab:Clone()
		tholder.Parent = ui.Tabs
		tholder.Name = name
		tholder.Visible = false
		if tabs == 1 then
			tholder.Visible = true
		end
		tbutton.Button.Activated:Connect(function()
			if tdeb == true then
				return
			end
			tdeb = true
			local ts = game:GetService("TweenService")
			for i, v in pairs(ui.Tabs:GetChildren()) do
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if not v:FindFirstChild("Trans") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
								local dat2 = Instance.new("NumberValue", v)
								dat2.Name = "TTrans"
								dat2.Value = v.TextTransparency
							elseif v:IsA("UIStroke") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "STrans"
								dat.Value = v.Transparency
							else
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
							end
						end
						--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
					end
				end
				if v ~= tholder then
					local clone = v--:Clone()
					v.Parent = ui.CTabs
					--v.Visible = false
					for i, v in pairs(clone:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							--local dat = Instance.new("NumberValue", v)
							--dat.Name = "Trans"
							--dat.Value = v.BackgroundTransparency
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							end
							--print("maybe twen")
						end
					end
					task.spawn(function()
						wait(0.5)
						v.Visible = false
					end)
				end
			end
			wait(0.5)
			tholder.Visible = true
			tholder.Parent = ui.Tabs
			for i, v in pairs(tholder:GetChildren()) do
				if v ~= tholder then
					for i, v in pairs(v:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							end
						end
					end
				end
			end
			tdeb = false
		end)
		local toreturn = {}
		toreturn.AddButton = function(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		toreturn.AddDropdown = function(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		toreturn.AddInput = function(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		toreturn.AddToggle = function(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		toreturn.AddSection = function(Name)
			AddSection(Name, tholder)
			return toreturn
		end
		toreturn.AddSlider = function(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		function toreturn:NewButton(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		function toreturn:NewDropdown(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		function toreturn:NewTextBox(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		function toreturn:NewToggle(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		function toreturn:NewSection(Name)
			AddSection(Name,tholder)
			return toreturn
		end
		function toreturn:NewSlider(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		toreturn.Source = tholder
		return toreturn
	end

	task.spawn(function()
		while task.wait(0.1) do
			
			ui.TopBar.TextLabel.Text = "Sky Hub CE Edition"
		end
	end)

	lib.CreateLib = function(name,smth)
		local toreturn = {}
		function toreturn:NewTab(name, icon)
			return lib.AddTab(name,icon)
		end
		return toreturn
	end
	local Window = lib.CreateLib("Sky Hub", OptTheme)
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	
	MainSection:NewToggle("Auto Farm", "yay", function(state)
		if state then
			-- // Custom Settings
getgenv().TreasureAutoFarm = {
    Enabled = true, -- // Toggle the auto farm on and off
    Teleport = 2, -- // How fast between each teleport between the stages and stuff
    TimeBetweenRuns = 5 -- // How long to wait until it goes to the next run
}

-- // Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

-- // Vars
local LocalPlayer = Players.LocalPlayer

-- // Goes through all of the stages
local autoFarm = function(currentRun)
    -- // Variables
    local Character = LocalPlayer.Character
    local NormalStages = Workspace.BoatStages.NormalStages

    -- // Go to each stage thing
    for i = 1, 10 do
        local Stage = NormalStages["CaveStage" .. i]
        local DarknessPart = Stage:FindFirstChild("DarknessPart")

        if (DarknessPart) then
            -- // Teleport to next stage
            print("Teleporting to next stage: Stage " .. i)
            Character.HumanoidRootPart.CFrame = DarknessPart.CFrame

            -- // Create a temp part under you
            local Part = Instance.new("Part", LocalPlayer.Character)
            Part.Anchored = true
            Part.Position = LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 6, 0)

            -- // Wait and remove temp part
            wait(getgenv().TreasureAutoFarm.Teleport)
            Part:Destroy()
        end
    end

    -- // Go to end
    print("Teleporting to the end")
    repeat wait()
        Character.HumanoidRootPart.CFrame = NormalStages.TheEnd.GoldenChest.Trigger.CFrame
    until Lighting.ClockTime ~= 14

    -- // Wait until you have respawned
    local Respawned = false
    local Connection
    Connection = LocalPlayer.CharacterAdded:Connect(function()
        Respawned = true
        Connection:Disconnect()
    end)

    repeat wait() until Respawned
    wait(getgenv().TreasureAutoFarm.TimeBetweenRuns)
    print("Auto Farm: Run " .. currentRun .. " finished")
end

-- // Whilst the autofarm is enable, constantly do it
local autoFarmRun = 1
while wait() do
    if (getgenv().TreasureAutoFarm.Enabled) then
        print("Initialising Auto Farm: Run " .. autoFarmRun)
        autoFarm(autoFarmRun)
        autoFarmRun = autoFarmRun + 1
    end
end
		else
			-- // Custom Settings
getgenv().TreasureAutoFarm = {
    Enabled = false, -- // Toggle the auto farm on and off
    Teleport = 2, -- // How fast between each teleport between the stages and stuff
    TimeBetweenRuns = 5 -- // How long to wait until it goes to the next run
}

-- // Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

-- // Vars
local LocalPlayer = Players.LocalPlayer

-- // Goes through all of the stages
local autoFarm = function(currentRun)
    -- // Variables
    local Character = LocalPlayer.Character
    local NormalStages = Workspace.BoatStages.NormalStages

    -- // Go to each stage thing
    for i = 1, 10 do
        local Stage = NormalStages["CaveStage" .. i]
        local DarknessPart = Stage:FindFirstChild("DarknessPart")

        if (DarknessPart) then
            -- // Teleport to next stage
            print("Teleporting to next stage: Stage " .. i)
            Character.HumanoidRootPart.CFrame = DarknessPart.CFrame

            -- // Create a temp part under you
            local Part = Instance.new("Part", LocalPlayer.Character)
            Part.Anchored = true
            Part.Position = LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 6, 0)

            -- // Wait and remove temp part
            wait(getgenv().TreasureAutoFarm.Teleport)
            Part:Destroy()
        end
    end

    -- // Go to end
    print("Teleporting to the end")
    repeat wait()
        Character.HumanoidRootPart.CFrame = NormalStages.TheEnd.GoldenChest.Trigger.CFrame
    until Lighting.ClockTime ~= 14

    -- // Wait until you have respawned
    local Respawned = false
    local Connection
    Connection = LocalPlayer.CharacterAdded:Connect(function()
        Respawned = true
        Connection:Disconnect()
    end)

    repeat wait() until Respawned
    wait(getgenv().TreasureAutoFarm.TimeBetweenRuns)
    print("Auto Farm: Run " .. currentRun .. " finished")
end

-- // Whilst the autofarm is enable, constantly do it
local autoFarmRun = 1
while wait() do
    if (getgenv().TreasureAutoFarm.Enabled) then
        print("Initialising Auto Farm: Run " .. autoFarmRun)
        autoFarm(autoFarmRun)
        autoFarmRun = autoFarmRun + 1
    end
end
end
	end)
	
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
	-- Ninja Legends
elseif game.PlaceId == 3956818381 then
	local ScreenGui = Instance.new("ScreenGui")
	local ImageLabel = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local Minimize = Instance.new("TextButton")
	local Rot = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Frame_2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Frame_3 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Frame_4 = Instance.new("Frame")
	local UICorner_5 = Instance.new("UICorner")
	local Close = Instance.new("TextButton")
	local Rot_3 = Instance.new("Frame")
	local Frame_5 = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local Frame_6 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local TabList = Instance.new("ScrollingFrame")
	local UIGridLayout = Instance.new("UIGridLayout")
	local Tabs = Instance.new("Folder")
	local CTabs = Instance.new("Folder")
	local TabTemplates = Instance.new("Folder")
	local TTemp = Instance.new("Frame")
	local Toggle = Instance.new("TextButton")
	local UICorner_8 = Instance.new("UICorner")
	local Desc = Instance.new("TextLabel")
	local ITemp = Instance.new("Frame")
	local Input = Instance.new("TextBox")
	local UICorner_9 = Instance.new("UICorner")
	local BTemp = Instance.new("Frame")
	local Button = Instance.new("TextButton")
	local UICorner_10 = Instance.new("UICorner")
	local SectionTemp = Instance.new("Frame")
	local Section = Instance.new("TextLabel")
	local SectionSpacer = Instance.new("Frame")
	local Slide = Instance.new("Frame")
	local Max = Instance.new("TextButton")
	local Bar = Instance.new("Frame")
	local UICorner_11 = Instance.new("UICorner")
	local UIGradient_2 = Instance.new("UIGradient")
	local UICorner_12 = Instance.new("UICorner")
	local DTemp = Instance.new("Frame")
	local Button_2 = Instance.new("TextButton")
	local UICorner_13 = Instance.new("UICorner")
	local Drop = Instance.new("ScrollingFrame")
	local UICorner_14 = Instance.new("UICorner")
	local UIGridLayout_2 = Instance.new("UIGridLayout")
	local Button_3 = Instance.new("TextButton")
	local UICorner_15 = Instance.new("UICorner")
	local TabStuff = Instance.new("Folder")
	local TabTemp = Instance.new("Frame")
	local Button_4 = Instance.new("TextButton")
	local TextLabel_2 = Instance.new("TextLabel")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local TempTab = Instance.new("ScrollingFrame")
	local UIGridLayout_3 = Instance.new("UIGridLayout")
	local Script = Instance.new("Script", ImageLabel)
	Script.Name = "Script"

	--Properties:
	ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ImageLabel.Parent = ScreenGui
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.ClipsDescendants = true
	ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
	ImageLabel.Size = UDim2.new(0, 550, 0, 300)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
	ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
	ImageLabel.ImageTransparency = 0.150

	UICorner.Parent = ImageLabel

	TopBar.Name = "TopBar"
	TopBar.Parent = ImageLabel
	TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TopBar.BackgroundTransparency = 0.900
	TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BorderSizePixel = 0
	TopBar.Size = UDim2.new(1, 0, 0, 40)

	TextLabel.Parent = TopBar
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 200, 0, 40)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "Sky Hub CE Edition"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 25.000
	TextLabel.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
	UIGradient.Rotation = 90
	UIGradient.Parent = TopBar

	Minimize.Name = "Minimize"
	Minimize.Parent = TopBar
	Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Minimize.BackgroundTransparency = 1.000
	Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.BorderSizePixel = 0
	Minimize.Position = UDim2.new(0, 470, 0, 0)
	Minimize.Size = UDim2.new(0, 40, 0, 40)
	Minimize.Font = Enum.Font.Ubuntu
	Minimize.Text = ""
	Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.TextSize = 14.000

	Rot.Name = "Rot"
	Rot.Parent = Minimize
	Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot.BackgroundTransparency = 1.000
	Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot.BorderSizePixel = 0
	Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot.Rotation = 90.000
	Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

	UICorner_2.CornerRadius = UDim.new(0, 500)
	UICorner_2.Parent = Frame

	Frame_2.Parent = Rot
	Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
	Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_3.CornerRadius = UDim.new(0, 500)
	UICorner_3.Parent = Frame_2

	Close.Name = "Close"
	Close.Parent = TopBar
	Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Close.BackgroundTransparency = 1.000
	Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 510, 0, 0)
	Close.Rotation = 1.000
	Close.Size = UDim2.new(0, 40, 0, 40)
	Close.Font = Enum.Font.Ubuntu
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(0, 0, 0)
	Close.TextSize = 14.000

	Rot_3.Name = "Rot"
	Rot_3.Parent = Close
	Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot_3.BackgroundTransparency = 1.000
	Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot_3.BorderSizePixel = 0
	Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

	Frame_5.Parent = Rot_3
	Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_5.BorderSizePixel = 0
	Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
	Frame_5.Rotation = -45.000
	Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_6.CornerRadius = UDim.new(0, 500)
	UICorner_6.Parent = Frame_5

	Frame_6.Parent = Rot_3
	Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_6.BorderSizePixel = 0
	Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
	Frame_6.Rotation = 45.000
	Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_7.CornerRadius = UDim.new(0, 500)
	UICorner_7.Parent = Frame_6

	TabList.Name = "TabList"
	TabList.Parent = ImageLabel
	TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabList.BackgroundTransparency = 1.000
	TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabList.BorderSizePixel = 0
	TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
	TabList.Size = UDim2.new(0, 120, 0, 251)
	TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
	TabList.ScrollBarThickness = 0

	UIGridLayout.Parent = TabList
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

	Tabs.Name = "Tabs"
	Tabs.Parent = ImageLabel

	CTabs.Name = "CTabs"
	CTabs.Parent = ImageLabel

	TabTemplates.Name = "TabTemplates"
	TabTemplates.Parent = Script

	TTemp.Name = "TTemp"
	TTemp.Parent = TabTemplates
	TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TTemp.BackgroundTransparency = 1.000
	TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TTemp.BorderSizePixel = 0
	TTemp.Size = UDim2.new(0, 100, 0, 100)

	Toggle.Name = "Toggle"
	Toggle.Parent = TTemp
	Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Toggle.BackgroundTransparency = 0.750
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
	Toggle.Size = UDim2.new(0, 33, 0, 33)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.Ubuntu
	Toggle.Text = ""
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 30.000

	UICorner_8.CornerRadius = UDim.new(0, 5)
	UICorner_8.Parent = Toggle

	Desc.Name = "Desc"
	Desc.Parent = TTemp
	Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Desc.BackgroundTransparency = 1.000
	Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Desc.BorderSizePixel = 0
	Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
	Desc.Size = UDim2.new(0, 145, 0, 26)
	Desc.Font = Enum.Font.Ubuntu
	Desc.Text = "Checkmark"
	Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
	Desc.TextScaled = true
	Desc.TextSize = 14.000
	Desc.TextWrapped = true
	Desc.TextXAlignment = Enum.TextXAlignment.Left

	ITemp.Name = "ITemp"
	ITemp.Parent = TabTemplates
	ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ITemp.BackgroundTransparency = 1.000
	ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ITemp.BorderSizePixel = 0
	ITemp.Size = UDim2.new(0, 100, 0, 100)

	Input.Name = "Input"
	Input.Parent = ITemp
	Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Input.BackgroundTransparency = 0.750
	Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Input.BorderSizePixel = 0
	Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
	Input.Size = UDim2.new(0, 150, 0, 33)
	Input.Font = Enum.Font.Ubuntu
	Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Input.PlaceholderText = "Placeholder"
	Input.Text = ""
	Input.TextColor3 = Color3.fromRGB(255, 255, 255)
	Input.TextSize = 22.000
	Input.TextWrapped = true

	UICorner_9.CornerRadius = UDim.new(0, 5)
	UICorner_9.Parent = Input

	BTemp.Name = "BTemp"
	BTemp.Parent = TabTemplates
	BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
	BTemp.BackgroundTransparency = 1.000
	BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BTemp.BorderSizePixel = 0
	BTemp.Size = UDim2.new(0, 100, 0, 100)

	Button.Name = "Button"
	Button.Parent = BTemp
	Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button.BackgroundTransparency = 0.750
	Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button.Size = UDim2.new(0, 150, 0, 33)
	Button.Font = Enum.Font.Ubuntu
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 18.000

	UICorner_10.CornerRadius = UDim.new(0, 5)
	UICorner_10.Parent = Button

	SectionTemp.Name = "SectionTemp"
	SectionTemp.Parent = TabTemplates
	SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionTemp.BackgroundTransparency = 1.000
	SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionTemp.BorderSizePixel = 0
	SectionTemp.Size = UDim2.new(0, 100, 0, 100)

	Section.Name = "Section"
	Section.Parent = SectionTemp
	Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Section.BackgroundTransparency = 1.000
	Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Section.BorderSizePixel = 0
	Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
	Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
	Section.Font = Enum.Font.Ubuntu
	Section.Text = "Section"
	Section.TextColor3 = Color3.fromRGB(255, 255, 255)
	Section.TextScaled = true
	Section.TextSize = 14.000
	Section.TextWrapped = true
	Section.TextXAlignment = Enum.TextXAlignment.Left

	SectionSpacer.Name = "SectionSpacer"
	SectionSpacer.Parent = TabTemplates
	SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionSpacer.BackgroundTransparency = 1.000
	SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionSpacer.BorderSizePixel = 0
	SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

	Slide.Name = "Slide"
	Slide.Parent = TabTemplates
	Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slide.BackgroundTransparency = 1.000
	Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slide.BorderSizePixel = 0
	Slide.Size = UDim2.new(0, 100, 0, 100)

	Max.Name = "Max"
	Max.Parent = Slide
	Max.AnchorPoint = Vector2.new(0.5, 0.5)
	Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Max.BackgroundTransparency = 0.500
	Max.BorderSizePixel = 0
	Max.Position = UDim2.new(0.5, 0, 0.5, 0)
	Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
	Max.AutoButtonColor = false
	Max.Font = Enum.Font.Ubuntu
	Max.Text = ""
	Max.TextColor3 = Color3.fromRGB(0, 0, 0)
	Max.TextSize = 14.000

	Bar.Name = "Bar"
	Bar.Parent = Max
	Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Bar.BorderSizePixel = 0
	Bar.Size = UDim2.new(0, 82, 1, 0)

	UICorner_11.Parent = Bar

	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
	UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
	UIGradient_2.Parent = Bar

	UICorner_12.Parent = Max

	DTemp.Name = "DTemp"
	DTemp.Parent = TabTemplates
	DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DTemp.BackgroundTransparency = 1.000
	DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DTemp.BorderSizePixel = 0
	DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
	DTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_2.Name = "Button"
	Button_2.Parent = DTemp
	Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_2.BackgroundTransparency = 0.750
	Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_2.BorderSizePixel = 0
	Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_2.Size = UDim2.new(0, 150, 0, 33)
	Button_2.Font = Enum.Font.Ubuntu
	Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_2.TextSize = 18.000

	UICorner_13.CornerRadius = UDim.new(0, 5)
	UICorner_13.Parent = Button_2

	Drop.Name = "Drop"
	Drop.Parent = Button_2
	Drop.Active = true
	Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Drop.BackgroundTransparency = 0.750
	Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Drop.BorderSizePixel = 0
	Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
	Drop.Size = UDim2.new(0, 150, 0, 127)
	Drop.ZIndex = 2
	Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
	Drop.ScrollBarThickness = 0

	UICorner_14.CornerRadius = UDim.new(0, 5)
	UICorner_14.Parent = Drop

	UIGridLayout_2.Parent = Drop
	UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

	Button_3.Name = "Button"
	Button_3.Parent = UIGridLayout_2
	Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_3.BorderSizePixel = 0
	Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_3.Size = UDim2.new(0, 150, 0, 33)
	Button_3.Font = Enum.Font.Ubuntu
	Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_3.TextSize = 18.000

	UICorner_15.CornerRadius = UDim.new(0, 5)
	UICorner_15.Parent = Button_3

	TabStuff.Name = "TabStuff"
	TabStuff.Parent = Script

	TabTemp.Name = "TabTemp"
	TabTemp.Parent = TabStuff
	TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabTemp.BackgroundTransparency = 0.900
	TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabTemp.BorderSizePixel = 0
	TabTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_4.Name = "Button"
	Button_4.Parent = TabTemp
	Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_4.BackgroundTransparency = 1.000
	Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_4.BorderSizePixel = 0
	Button_4.Size = UDim2.new(1, 0, 1, 0)
	Button_4.Font = Enum.Font.Ubuntu
	Button_4.Text = ""
	Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_4.TextSize = 20.000

	TextLabel_2.Parent = TabTemp
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel_2.BorderSizePixel = 0
	TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
	TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
	TextLabel_2.Font = Enum.Font.Ubuntu
	TextLabel_2.Text = "Tab 1"
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextScaled = true
	TextLabel_2.TextSize = 20.000
	TextLabel_2.TextWrapped = true

	ImageLabel_2.Parent = TabTemp
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel_2.BorderSizePixel = 0
	ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
	ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
	ImageLabel_2.Image = "rbxassetid://12010069146"

	TempTab.Name = "TempTab"
	TempTab.Parent = TabStuff
	TempTab.Active = true
	TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TempTab.BackgroundTransparency = 1.000
	TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TempTab.BorderSizePixel = 0
	TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
	TempTab.Size = UDim2.new(0, 430, 0, 260)
	TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
	TempTab.ScrollBarThickness = 0

	UIGridLayout_3.Parent = TempTab
	UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

	-- Scripts:
	local close = false
	local function HLBC_fake_script() -- ImageLabel.Script 
		local script = Instance.new('LocalScript', ImageLabel)

		--[[
			
			Version 6.0
			
			Max Intensity: 1
			
			Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
			Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
			
			Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
			
			]]
		
		local BlurIntensity = 0.4
		
		local RunService = game:GetService('RunService')
		local camera = workspace.CurrentCamera
		local MTREL = "Glass"
		local binds = {}
		local root = Instance.new('Folder', camera)
		
		local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
		local frame = script.Parent
		DepthOfField.FarIntensity = 0
		DepthOfField.FocusDistance = 51.6
		DepthOfField.InFocusRadius = 50
		DepthOfField.NearIntensity = BlurIntensity
		DepthOfField.Name = " "
		root.Name = 'BlurSnox'
		
		local GenUid; do -- Generate unique names for RenderStepped bindings
			local id = 0
			function GenUid()
				id = id + 1
				return 'neon::'..tostring(id)
			end
		end
		
		do
			local function IsNotNaN(x)
				return x == x
			end
			local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			while not continue do
				RunService.RenderStepped:wait()
				continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			end
		end
		
		local DrawQuad; do
			local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
			local sz = 0.2
		
			local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
				local s1 = (v1 - v2).magnitude
				local s2 = (v2 - v3).magnitude
				local s3 = (v3 - v1).magnitude
				local smax = max(s1, s2, s3)
				local A, B, C
				if s1 == smax then
					A, B, C = v1, v2, v3
				elseif s2 == smax then
					A, B, C = v2, v3, v1
				elseif s3 == smax then
					A, B, C = v3, v1, v2
				end
		
				local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
				local perp = sqrt((C-A).magnitude^2 - para*para)
				local dif_para = (A - B).magnitude - para
		
				local st = CFrame.new(B, A)
				local za = CFrame.Angles(pi/2,0,0)
		
				local cf0 = st
		
				local Top_Look = (cf0 * za).lookVector
				local Mid_Point = A + CFrame.new(A, B).LookVector * para
				local Needed_Look = CFrame.new(Mid_Point, C).LookVector
				local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
		
				local ac = CFrame.Angles(0, 0, acos(dot))
		
				cf0 = cf0 * ac
				if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
				end
				cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
		
				local cf1 = st * ac * CFrame.Angles(0, pi, 0)
				if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
				end
				cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
		
				if not p0 then
					p0 = Instance.new('Part')
					p0.Color = Color3.fromRGB(91, 128, 130)
					p0.FormFactor = 'Custom'
					p0.TopSurface = 0
					p0.BottomSurface = 0
					p0.Anchored = true
					p0.CanCollide = false
					p0.CastShadow = false
					p0.Material = MTREL
					p0.Size = Vector3.new(sz, sz, sz)
					local mesh = Instance.new('SpecialMesh', p0)
					mesh.MeshType = 2
					mesh.Name = 'WedgeMesh'
				end
				p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
				p0.CFrame = cf0
		
				if not p1 then
					p1 = p0:clone()
				end
				p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
				p1.CFrame = cf1
		
				return p0, p1
			end
		
			function DrawQuad(v1, v2, v3, v4, parts)
				parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
				parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
			end
		end
		
		if binds[frame] then
			return binds[frame].parts
		end
		
		local uid = GenUid()
		local parts = {}
		local visible = true
		local f = Instance.new('Folder', root)
		f.Name = frame.Name
		
		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end
		
		local function UpdateOrientation(fetchProps)
			if close == true then
				return
			end
			local trans = 0.99
			if visible == false then
				trans = 1
			end
			local properties = {
				Transparency = trans;
				--BrickColor = BrickColor.new('Institutional white');
			}
			local zIndex = 1 - 0.05*frame.ZIndex
		
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end
		
		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
		local UserInputService = game:GetService("UserInputService")
		local runService = (game:GetService("RunService"));
		
		local gui = script.Parent
		
		local dragging
		local dragInput
		local dragStart
		local startPos
		
		local function Lerp(a, b, m)
			return a + (b - a) * m
		end;
		
		local lastMousePos
		local lastGoalPos
		local DRAG_SPEED = (8); -- // The speed of the UI darg.
		local function Update(dt)
			if not (startPos) then return end;
			if not (dragging) and (lastGoalPos) then
				gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
				return 
			end;
		
			local delta = (lastMousePos - UserInputService:GetMouseLocation())
			local xGoal = (startPos.X.Offset - delta.X);
			local yGoal = (startPos.Y.Offset - delta.Y);
			lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
		end;
		
		gui.TopBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position
				lastMousePos = UserInputService:GetMouseLocation()
		
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		
		gui.TopBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		
		runService.Heartbeat:Connect(Update)
		script.Parent.TopBar.Minimize.Activated:Connect(function()
			visible = false
		end)
		script.Parent.TopBar.Close.Activated:Connect(function()
			close = true
			script.Parent.Parent:Destroy()
			game:GetService("Workspace").Camera.BlurSnox:Destroy()
			game:GetService("Lighting")[" "]:Destroy()
		end)
		local uis = game:GetService("UserInputService")
		uis.InputBegan:Connect(function(inp)
			if inp.KeyCode == Enum.KeyCode.RightControl then
				visible = true
			end
		end)
		task.spawn(function()
			while task.wait() do
				script.Parent.Visible = visible
			end
		end)
		
			--[[
			local lib = require(script.Parent.Lib)
			local tab = lib.AddTab("Tabs are over rated")
			
			tab.AddButton("Button", "Im a button test", function()
				print("Testing!")
			end)
			tab.AddToggle("Toggle", "Toggle Desc", function(bool)
				print(bool)
			end)
			tab.AddInput("Input", "Placeholder i think", function(out)
				print(out)
			end)
			tab.AddSection("Wha da fuck")
			tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
				print(val)
			end)
			
			local tab2 = lib.AddTab("Why are most niggers annoying")
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
				print(str)
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)]]
	end
	coroutine.wrap(HLBC_fake_script)()

	local lib = {}
	local tabs = {}
	local ui = ImageLabel

	function AddToggle(name, text, callback, tab)
		local button = ui.Script.TabTemplates.TTemp:Clone()
		button.Name = name
		button.Desc.Text = name
		button.Desc.MouseEnter:Connect(function()
			button.Desc.Text = text
		end)
		button.Desc.MouseLeave:Connect(function()
			button.Desc.Text = name
		end)
		local enabled = false
		local deb = false
		local ts = game:GetService("TweenService")
		button.Toggle.Activated:Connect(function()
			if deb == false then
				if enabled == false then
					enabled = true
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				else
					enabled = false
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				end
				callback(enabled)
			end
		end)
		button.Parent = tab
		return button
	end

	function AddInput(name, placeholder, callback, tab)
		local button = ui.Script.TabTemplates.ITemp:Clone()
		button.Name = name
		button.Input.PlaceholderText = placeholder
		local previousinput = ""
		task.spawn(function()
			while task.wait(0.1) do
				if #button.Input.Text >= 10 then
					button.Input.TextScaled = true
				else
					button.Input.TextScaled = true
				end
			end
		end)
		button.Input.FocusLost:Connect(function()
			if button.Input.Text == "" then
				return
			end
			previousinput = button.Input.Text
			callback(button.Input.Text)
		end)
		button.Parent = tab
		return button
	end

	function AddButton(name, text, callback, tab)
		local button = ui.Script.TabTemplates.BTemp:Clone()
		button.Name = name
		button.Button.Text = name
		button.ZIndex = 1
		button.Button.MouseEnter:Connect(function()
			button.Button.Text = text
			button.Button.TextScaled = true
		end)
		button.Button.MouseLeave:Connect(function()
			button.Button.Text = name
			button.Button.TextScaled = false
		end)
		button.Button.Activated:Connect(callback)
		button.Parent = tab
		return button
	end

	function AddEmpty(tab)
		local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
		spacer.Parent = tab
	end

	function AddSection(name, tab)
		local actions = #tab:GetChildren()
		local section = ui.Script.TabTemplates.SectionTemp:Clone()
		if actions % 2 == 0 then
			AddEmpty(tab)
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		else
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		end
		return section
	end

	function AddSlider(name,tab,callback, maxi,min)
		local slider = ui.Script.TabTemplates.Slide:Clone()
		local text = Instance.new("TextLabel", slider)
		text.Size = UDim2.new(1,0,1,0)
		text.BackgroundTransparency = 1
		text.TextColor3 = Color3.new(255,255,255)
		text.Text = ""
		slider.Parent = tab
		task.spawn(function()
			local max = slider.Max
			local bar = max.Bar
			local player = game.Players.LocalPlayer
			local mouse = player:GetMouse()
			local uis = game:GetService("UserInputService")
			local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
			local down = false
			local lastinp = nil

			max.InputBegan:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = true
				end
			end)

			max.InputEnded:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = false
				end
			end)
			local function ScaleToOffset(Scale)
				local ViewPortSize = workspace.Camera.ViewportSize
				return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
			end


			local function OffsetToScale(Offset)
				local ViewPortSize = workspace.Camera.ViewportSize
				return Offset / max.Size
			end
			while task.wait(0.05) do
				if down == true and lastinp ~= nil then
					local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
					--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
					local ts = game:GetService("TweenService")
					ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
					local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
					local function range(value)
						local oldmin, oldmax = 0, 161
						local newmin, newmax = min, maxi

						local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

						return newValue
					end
					text.Text = name .. " " .. tostring(math.round(range(val)))
					callback(range(val))
				end
			end
		end)
		return slider
	end

	function AddDropdown(name,text,s_table,callback,tab)
		local dropdown = ui.Script.TabTemplates.DTemp:Clone()
		dropdown.Parent = tab
		dropdown.Name = name
		dropdown.Button.Text = name
		dropdown.ZIndex = 2
		dropdown.Button.MouseEnter:Connect(function()
			dropdown.Button.Text = text
		end)
		dropdown.Button.MouseLeave:Connect(function()
			dropdown.Button.Text = name
		end)
		local visible = false
		dropdown.Button.Activated:Connect(function()
			if visible == true then
				visible = false
			else
				visible = true
			end
		end)
		dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
		task.spawn(function()
			while task.wait() do
				dropdown.Button.Drop.Visible = visible
			end
		end)
		for i, v in pairs(s_table) do
			local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
			temp.Parent = dropdown.Button.Drop
			temp.Text = v
			temp.Activated:Connect(function()
				visible = false
				callback(v)
			end)
		end
		return dropdown
	end

	local tabs = 0
	local uistroke = Instance.new("UIStroke", ui)
	uistroke.Color = Color3.fromRGB(0,0,0)
	uistroke.Thickness = 5
	uistroke.Transparency = 0.85
	local tdeb = false
	function lib.AddTab(name, icon)
		tabs += 1
		local tname = name
		local icon = icon or "160460785"
		icon = "rbxassetid://" .. icon
		local tbutton = ui.Script.TabStuff.TabTemp:Clone()
		tbutton.Parent = ui.TabList
		tbutton.ImageLabel.Image = icon
		tbutton.TextLabel.Text = name
		local tholder = ui.Script.TabStuff.TempTab:Clone()
		tholder.Parent = ui.Tabs
		tholder.Name = name
		tholder.Visible = false
		if tabs == 1 then
			tholder.Visible = true
		end
		tbutton.Button.Activated:Connect(function()
			if tdeb == true then
				return
			end
			tdeb = true
			local ts = game:GetService("TweenService")
			for i, v in pairs(ui.Tabs:GetChildren()) do
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if not v:FindFirstChild("Trans") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
								local dat2 = Instance.new("NumberValue", v)
								dat2.Name = "TTrans"
								dat2.Value = v.TextTransparency
							elseif v:IsA("UIStroke") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "STrans"
								dat.Value = v.Transparency
							else
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
							end
						end
						--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
					end
				end
				if v ~= tholder then
					local clone = v--:Clone()
					v.Parent = ui.CTabs
					--v.Visible = false
					for i, v in pairs(clone:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							--local dat = Instance.new("NumberValue", v)
							--dat.Name = "Trans"
							--dat.Value = v.BackgroundTransparency
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							end
							--print("maybe twen")
						end
					end
					task.spawn(function()
						wait(0.5)
						v.Visible = false
					end)
				end
			end
			wait(0.5)
			tholder.Visible = true
			tholder.Parent = ui.Tabs
			for i, v in pairs(tholder:GetChildren()) do
				if v ~= tholder then
					for i, v in pairs(v:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							end
						end
					end
				end
			end
			tdeb = false
		end)
		local toreturn = {}
		toreturn.AddButton = function(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		toreturn.AddDropdown = function(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		toreturn.AddInput = function(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		toreturn.AddToggle = function(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		toreturn.AddSection = function(Name)
			AddSection(Name, tholder)
			return toreturn
		end
		toreturn.AddSlider = function(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		function toreturn:NewButton(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		function toreturn:NewDropdown(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		function toreturn:NewTextBox(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		function toreturn:NewToggle(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		function toreturn:NewSection(Name)
			AddSection(Name,tholder)
			return toreturn
		end
		function toreturn:NewSlider(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		toreturn.Source = tholder
		return toreturn
	end

	task.spawn(function()
		while task.wait(0.1) do
			
			ui.TopBar.TextLabel.Text = "Sky Hub CE Edition"
		end
	end)

	lib.CreateLib = function(name,smth)
		local toreturn = {}
		function toreturn:NewTab(name, icon)
			return lib.AddTab(name,icon)
		end
		return toreturn
	end
	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewToggle("auto farm", "autofarm", function(state)
		if state then
			getgenv().swing = true
spawn(function()
    while true do wait()
        if not getgenv().swing then break end

        local args = {
            [1] = "swingKatana"
        }

        game:GetService("Players").LocalPlayer:WaitForChild("ninjaEvent"):FireServer(unpack(args))
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(91, 91246, 144)
        wait(0.01)
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(88, 91246, 137)
    end
end)
else
	getgenv().swing = false
spawn(function()
    while true do wait()
        if not getgenv().swing then break end

        local args = {
            [1] = "swingKatana"
        }

        game:GetService("Players").LocalPlayer:WaitForChild("ninjaEvent"):FireServer(unpack(args))
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(91, 91246, 144)
        wait(0.01)
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(88, 91246, 137)
    end
end)
end
	end)
	
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "wait a few secs will prompt ui", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)

	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
	-- Cursed Sea
elseif game.PlaceId == 14426444782 then
	local ScreenGui = Instance.new("ScreenGui")
	local ImageLabel = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local Minimize = Instance.new("TextButton")
	local Rot = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Frame_2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Frame_3 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Frame_4 = Instance.new("Frame")
	local UICorner_5 = Instance.new("UICorner")
	local Close = Instance.new("TextButton")
	local Rot_3 = Instance.new("Frame")
	local Frame_5 = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local Frame_6 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local TabList = Instance.new("ScrollingFrame")
	local UIGridLayout = Instance.new("UIGridLayout")
	local Tabs = Instance.new("Folder")
	local CTabs = Instance.new("Folder")
	local TabTemplates = Instance.new("Folder")
	local TTemp = Instance.new("Frame")
	local Toggle = Instance.new("TextButton")
	local UICorner_8 = Instance.new("UICorner")
	local Desc = Instance.new("TextLabel")
	local ITemp = Instance.new("Frame")
	local Input = Instance.new("TextBox")
	local UICorner_9 = Instance.new("UICorner")
	local BTemp = Instance.new("Frame")
	local Button = Instance.new("TextButton")
	local UICorner_10 = Instance.new("UICorner")
	local SectionTemp = Instance.new("Frame")
	local Section = Instance.new("TextLabel")
	local SectionSpacer = Instance.new("Frame")
	local Slide = Instance.new("Frame")
	local Max = Instance.new("TextButton")
	local Bar = Instance.new("Frame")
	local UICorner_11 = Instance.new("UICorner")
	local UIGradient_2 = Instance.new("UIGradient")
	local UICorner_12 = Instance.new("UICorner")
	local DTemp = Instance.new("Frame")
	local Button_2 = Instance.new("TextButton")
	local UICorner_13 = Instance.new("UICorner")
	local Drop = Instance.new("ScrollingFrame")
	local UICorner_14 = Instance.new("UICorner")
	local UIGridLayout_2 = Instance.new("UIGridLayout")
	local Button_3 = Instance.new("TextButton")
	local UICorner_15 = Instance.new("UICorner")
	local TabStuff = Instance.new("Folder")
	local TabTemp = Instance.new("Frame")
	local Button_4 = Instance.new("TextButton")
	local TextLabel_2 = Instance.new("TextLabel")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local TempTab = Instance.new("ScrollingFrame")
	local UIGridLayout_3 = Instance.new("UIGridLayout")
	local Script = Instance.new("Script", ImageLabel)
	Script.Name = "Script"

	--Properties:
	ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ImageLabel.Parent = ScreenGui
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.ClipsDescendants = true
	ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
	ImageLabel.Size = UDim2.new(0, 550, 0, 300)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
	ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
	ImageLabel.ImageTransparency = 0.150

	UICorner.Parent = ImageLabel

	TopBar.Name = "TopBar"
	TopBar.Parent = ImageLabel
	TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TopBar.BackgroundTransparency = 0.900
	TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BorderSizePixel = 0
	TopBar.Size = UDim2.new(1, 0, 0, 40)

	TextLabel.Parent = TopBar
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 200, 0, 40)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "Sky Hub CE Edition"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 25.000
	TextLabel.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
	UIGradient.Rotation = 90
	UIGradient.Parent = TopBar

	Minimize.Name = "Minimize"
	Minimize.Parent = TopBar
	Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Minimize.BackgroundTransparency = 1.000
	Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.BorderSizePixel = 0
	Minimize.Position = UDim2.new(0, 470, 0, 0)
	Minimize.Size = UDim2.new(0, 40, 0, 40)
	Minimize.Font = Enum.Font.Ubuntu
	Minimize.Text = ""
	Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.TextSize = 14.000

	Rot.Name = "Rot"
	Rot.Parent = Minimize
	Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot.BackgroundTransparency = 1.000
	Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot.BorderSizePixel = 0
	Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot.Rotation = 90.000
	Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

	UICorner_2.CornerRadius = UDim.new(0, 500)
	UICorner_2.Parent = Frame

	Frame_2.Parent = Rot
	Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
	Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_3.CornerRadius = UDim.new(0, 500)
	UICorner_3.Parent = Frame_2

	Close.Name = "Close"
	Close.Parent = TopBar
	Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Close.BackgroundTransparency = 1.000
	Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 510, 0, 0)
	Close.Rotation = 1.000
	Close.Size = UDim2.new(0, 40, 0, 40)
	Close.Font = Enum.Font.Ubuntu
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(0, 0, 0)
	Close.TextSize = 14.000

	Rot_3.Name = "Rot"
	Rot_3.Parent = Close
	Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot_3.BackgroundTransparency = 1.000
	Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot_3.BorderSizePixel = 0
	Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

	Frame_5.Parent = Rot_3
	Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_5.BorderSizePixel = 0
	Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
	Frame_5.Rotation = -45.000
	Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_6.CornerRadius = UDim.new(0, 500)
	UICorner_6.Parent = Frame_5

	Frame_6.Parent = Rot_3
	Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_6.BorderSizePixel = 0
	Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
	Frame_6.Rotation = 45.000
	Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_7.CornerRadius = UDim.new(0, 500)
	UICorner_7.Parent = Frame_6

	TabList.Name = "TabList"
	TabList.Parent = ImageLabel
	TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabList.BackgroundTransparency = 1.000
	TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabList.BorderSizePixel = 0
	TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
	TabList.Size = UDim2.new(0, 120, 0, 251)
	TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
	TabList.ScrollBarThickness = 0

	UIGridLayout.Parent = TabList
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

	Tabs.Name = "Tabs"
	Tabs.Parent = ImageLabel

	CTabs.Name = "CTabs"
	CTabs.Parent = ImageLabel

	TabTemplates.Name = "TabTemplates"
	TabTemplates.Parent = Script

	TTemp.Name = "TTemp"
	TTemp.Parent = TabTemplates
	TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TTemp.BackgroundTransparency = 1.000
	TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TTemp.BorderSizePixel = 0
	TTemp.Size = UDim2.new(0, 100, 0, 100)

	Toggle.Name = "Toggle"
	Toggle.Parent = TTemp
	Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Toggle.BackgroundTransparency = 0.750
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
	Toggle.Size = UDim2.new(0, 33, 0, 33)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.Ubuntu
	Toggle.Text = ""
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 30.000

	UICorner_8.CornerRadius = UDim.new(0, 5)
	UICorner_8.Parent = Toggle

	Desc.Name = "Desc"
	Desc.Parent = TTemp
	Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Desc.BackgroundTransparency = 1.000
	Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Desc.BorderSizePixel = 0
	Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
	Desc.Size = UDim2.new(0, 145, 0, 26)
	Desc.Font = Enum.Font.Ubuntu
	Desc.Text = "Checkmark"
	Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
	Desc.TextScaled = true
	Desc.TextSize = 14.000
	Desc.TextWrapped = true
	Desc.TextXAlignment = Enum.TextXAlignment.Left

	ITemp.Name = "ITemp"
	ITemp.Parent = TabTemplates
	ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ITemp.BackgroundTransparency = 1.000
	ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ITemp.BorderSizePixel = 0
	ITemp.Size = UDim2.new(0, 100, 0, 100)

	Input.Name = "Input"
	Input.Parent = ITemp
	Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Input.BackgroundTransparency = 0.750
	Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Input.BorderSizePixel = 0
	Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
	Input.Size = UDim2.new(0, 150, 0, 33)
	Input.Font = Enum.Font.Ubuntu
	Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Input.PlaceholderText = "Placeholder"
	Input.Text = ""
	Input.TextColor3 = Color3.fromRGB(255, 255, 255)
	Input.TextSize = 22.000
	Input.TextWrapped = true

	UICorner_9.CornerRadius = UDim.new(0, 5)
	UICorner_9.Parent = Input

	BTemp.Name = "BTemp"
	BTemp.Parent = TabTemplates
	BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
	BTemp.BackgroundTransparency = 1.000
	BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BTemp.BorderSizePixel = 0
	BTemp.Size = UDim2.new(0, 100, 0, 100)

	Button.Name = "Button"
	Button.Parent = BTemp
	Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button.BackgroundTransparency = 0.750
	Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button.Size = UDim2.new(0, 150, 0, 33)
	Button.Font = Enum.Font.Ubuntu
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 18.000

	UICorner_10.CornerRadius = UDim.new(0, 5)
	UICorner_10.Parent = Button

	SectionTemp.Name = "SectionTemp"
	SectionTemp.Parent = TabTemplates
	SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionTemp.BackgroundTransparency = 1.000
	SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionTemp.BorderSizePixel = 0
	SectionTemp.Size = UDim2.new(0, 100, 0, 100)

	Section.Name = "Section"
	Section.Parent = SectionTemp
	Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Section.BackgroundTransparency = 1.000
	Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Section.BorderSizePixel = 0
	Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
	Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
	Section.Font = Enum.Font.Ubuntu
	Section.Text = "Section"
	Section.TextColor3 = Color3.fromRGB(255, 255, 255)
	Section.TextScaled = true
	Section.TextSize = 14.000
	Section.TextWrapped = true
	Section.TextXAlignment = Enum.TextXAlignment.Left

	SectionSpacer.Name = "SectionSpacer"
	SectionSpacer.Parent = TabTemplates
	SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionSpacer.BackgroundTransparency = 1.000
	SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionSpacer.BorderSizePixel = 0
	SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

	Slide.Name = "Slide"
	Slide.Parent = TabTemplates
	Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slide.BackgroundTransparency = 1.000
	Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slide.BorderSizePixel = 0
	Slide.Size = UDim2.new(0, 100, 0, 100)

	Max.Name = "Max"
	Max.Parent = Slide
	Max.AnchorPoint = Vector2.new(0.5, 0.5)
	Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Max.BackgroundTransparency = 0.500
	Max.BorderSizePixel = 0
	Max.Position = UDim2.new(0.5, 0, 0.5, 0)
	Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
	Max.AutoButtonColor = false
	Max.Font = Enum.Font.Ubuntu
	Max.Text = ""
	Max.TextColor3 = Color3.fromRGB(0, 0, 0)
	Max.TextSize = 14.000

	Bar.Name = "Bar"
	Bar.Parent = Max
	Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Bar.BorderSizePixel = 0
	Bar.Size = UDim2.new(0, 82, 1, 0)

	UICorner_11.Parent = Bar

	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
	UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
	UIGradient_2.Parent = Bar

	UICorner_12.Parent = Max

	DTemp.Name = "DTemp"
	DTemp.Parent = TabTemplates
	DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DTemp.BackgroundTransparency = 1.000
	DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DTemp.BorderSizePixel = 0
	DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
	DTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_2.Name = "Button"
	Button_2.Parent = DTemp
	Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_2.BackgroundTransparency = 0.750
	Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_2.BorderSizePixel = 0
	Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_2.Size = UDim2.new(0, 150, 0, 33)
	Button_2.Font = Enum.Font.Ubuntu
	Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_2.TextSize = 18.000

	UICorner_13.CornerRadius = UDim.new(0, 5)
	UICorner_13.Parent = Button_2

	Drop.Name = "Drop"
	Drop.Parent = Button_2
	Drop.Active = true
	Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Drop.BackgroundTransparency = 0.750
	Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Drop.BorderSizePixel = 0
	Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
	Drop.Size = UDim2.new(0, 150, 0, 127)
	Drop.ZIndex = 2
	Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
	Drop.ScrollBarThickness = 0

	UICorner_14.CornerRadius = UDim.new(0, 5)
	UICorner_14.Parent = Drop

	UIGridLayout_2.Parent = Drop
	UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

	Button_3.Name = "Button"
	Button_3.Parent = UIGridLayout_2
	Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_3.BorderSizePixel = 0
	Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_3.Size = UDim2.new(0, 150, 0, 33)
	Button_3.Font = Enum.Font.Ubuntu
	Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_3.TextSize = 18.000

	UICorner_15.CornerRadius = UDim.new(0, 5)
	UICorner_15.Parent = Button_3

	TabStuff.Name = "TabStuff"
	TabStuff.Parent = Script

	TabTemp.Name = "TabTemp"
	TabTemp.Parent = TabStuff
	TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabTemp.BackgroundTransparency = 0.900
	TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabTemp.BorderSizePixel = 0
	TabTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_4.Name = "Button"
	Button_4.Parent = TabTemp
	Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_4.BackgroundTransparency = 1.000
	Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_4.BorderSizePixel = 0
	Button_4.Size = UDim2.new(1, 0, 1, 0)
	Button_4.Font = Enum.Font.Ubuntu
	Button_4.Text = ""
	Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_4.TextSize = 20.000

	TextLabel_2.Parent = TabTemp
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel_2.BorderSizePixel = 0
	TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
	TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
	TextLabel_2.Font = Enum.Font.Ubuntu
	TextLabel_2.Text = "Tab 1"
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextScaled = true
	TextLabel_2.TextSize = 20.000
	TextLabel_2.TextWrapped = true

	ImageLabel_2.Parent = TabTemp
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel_2.BorderSizePixel = 0
	ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
	ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
	ImageLabel_2.Image = "rbxassetid://12010069146"

	TempTab.Name = "TempTab"
	TempTab.Parent = TabStuff
	TempTab.Active = true
	TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TempTab.BackgroundTransparency = 1.000
	TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TempTab.BorderSizePixel = 0
	TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
	TempTab.Size = UDim2.new(0, 430, 0, 260)
	TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
	TempTab.ScrollBarThickness = 0

	UIGridLayout_3.Parent = TempTab
	UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

	-- Scripts:
	local close = false
	local function HLBC_fake_script() -- ImageLabel.Script 
		local script = Instance.new('LocalScript', ImageLabel)

		--[[
			
			Version 6.0
			
			Max Intensity: 1
			
			Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
			Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
			
			Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
			
			]]
		
		local BlurIntensity = 0.4
		
		local RunService = game:GetService('RunService')
		local camera = workspace.CurrentCamera
		local MTREL = "Glass"
		local binds = {}
		local root = Instance.new('Folder', camera)
		
		local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
		local frame = script.Parent
		DepthOfField.FarIntensity = 0
		DepthOfField.FocusDistance = 51.6
		DepthOfField.InFocusRadius = 50
		DepthOfField.NearIntensity = BlurIntensity
		DepthOfField.Name = " "
		root.Name = 'BlurSnox'
		
		local GenUid; do -- Generate unique names for RenderStepped bindings
			local id = 0
			function GenUid()
				id = id + 1
				return 'neon::'..tostring(id)
			end
		end
		
		do
			local function IsNotNaN(x)
				return x == x
			end
			local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			while not continue do
				RunService.RenderStepped:wait()
				continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			end
		end
		
		local DrawQuad; do
			local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
			local sz = 0.2
		
			local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
				local s1 = (v1 - v2).magnitude
				local s2 = (v2 - v3).magnitude
				local s3 = (v3 - v1).magnitude
				local smax = max(s1, s2, s3)
				local A, B, C
				if s1 == smax then
					A, B, C = v1, v2, v3
				elseif s2 == smax then
					A, B, C = v2, v3, v1
				elseif s3 == smax then
					A, B, C = v3, v1, v2
				end
		
				local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
				local perp = sqrt((C-A).magnitude^2 - para*para)
				local dif_para = (A - B).magnitude - para
		
				local st = CFrame.new(B, A)
				local za = CFrame.Angles(pi/2,0,0)
		
				local cf0 = st
		
				local Top_Look = (cf0 * za).lookVector
				local Mid_Point = A + CFrame.new(A, B).LookVector * para
				local Needed_Look = CFrame.new(Mid_Point, C).LookVector
				local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
		
				local ac = CFrame.Angles(0, 0, acos(dot))
		
				cf0 = cf0 * ac
				if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
				end
				cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
		
				local cf1 = st * ac * CFrame.Angles(0, pi, 0)
				if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
				end
				cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
		
				if not p0 then
					p0 = Instance.new('Part')
					p0.Color = Color3.fromRGB(91, 128, 130)
					p0.FormFactor = 'Custom'
					p0.TopSurface = 0
					p0.BottomSurface = 0
					p0.Anchored = true
					p0.CanCollide = false
					p0.CastShadow = false
					p0.Material = MTREL
					p0.Size = Vector3.new(sz, sz, sz)
					local mesh = Instance.new('SpecialMesh', p0)
					mesh.MeshType = 2
					mesh.Name = 'WedgeMesh'
				end
				p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
				p0.CFrame = cf0
		
				if not p1 then
					p1 = p0:clone()
				end
				p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
				p1.CFrame = cf1
		
				return p0, p1
			end
		
			function DrawQuad(v1, v2, v3, v4, parts)
				parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
				parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
			end
		end
		
		if binds[frame] then
			return binds[frame].parts
		end
		
		local uid = GenUid()
		local parts = {}
		local visible = true
		local f = Instance.new('Folder', root)
		f.Name = frame.Name
		
		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end
		
		local function UpdateOrientation(fetchProps)
			if close == true then
				return
			end
			local trans = 0.99
			if visible == false then
				trans = 1
			end
			local properties = {
				Transparency = trans;
				--BrickColor = BrickColor.new('Institutional white');
			}
			local zIndex = 1 - 0.05*frame.ZIndex
		
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end
		
		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
		local UserInputService = game:GetService("UserInputService")
		local runService = (game:GetService("RunService"));
		
		local gui = script.Parent
		
		local dragging
		local dragInput
		local dragStart
		local startPos
		
		local function Lerp(a, b, m)
			return a + (b - a) * m
		end;
		
		local lastMousePos
		local lastGoalPos
		local DRAG_SPEED = (8); -- // The speed of the UI darg.
		local function Update(dt)
			if not (startPos) then return end;
			if not (dragging) and (lastGoalPos) then
				gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
				return 
			end;
		
			local delta = (lastMousePos - UserInputService:GetMouseLocation())
			local xGoal = (startPos.X.Offset - delta.X);
			local yGoal = (startPos.Y.Offset - delta.Y);
			lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
		end;
		
		gui.TopBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position
				lastMousePos = UserInputService:GetMouseLocation()
		
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		
		gui.TopBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		
		runService.Heartbeat:Connect(Update)
		script.Parent.TopBar.Minimize.Activated:Connect(function()
			visible = false
		end)
		script.Parent.TopBar.Close.Activated:Connect(function()
			close = true
			script.Parent.Parent:Destroy()
			game:GetService("Workspace").Camera.BlurSnox:Destroy()
			game:GetService("Lighting")[" "]:Destroy()
		end)
		local uis = game:GetService("UserInputService")
		uis.InputBegan:Connect(function(inp)
			if inp.KeyCode == Enum.KeyCode.RightControl then
				visible = true
			end
		end)
		task.spawn(function()
			while task.wait() do
				script.Parent.Visible = visible
			end
		end)
		
			--[[
			local lib = require(script.Parent.Lib)
			local tab = lib.AddTab("Tabs are over rated")
			
			tab.AddButton("Button", "Im a button test", function()
				print("Testing!")
			end)
			tab.AddToggle("Toggle", "Toggle Desc", function(bool)
				print(bool)
			end)
			tab.AddInput("Input", "Placeholder i think", function(out)
				print(out)
			end)
			tab.AddSection("Wha da fuck")
			tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
				print(val)
			end)
			
			local tab2 = lib.AddTab("Why are most niggers annoying")
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
				print(str)
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)]]
	end
	coroutine.wrap(HLBC_fake_script)()

	local lib = {}
	local tabs = {}
	local ui = ImageLabel

	function AddToggle(name, text, callback, tab)
		local button = ui.Script.TabTemplates.TTemp:Clone()
		button.Name = name
		button.Desc.Text = name
		button.Desc.MouseEnter:Connect(function()
			button.Desc.Text = text
		end)
		button.Desc.MouseLeave:Connect(function()
			button.Desc.Text = name
		end)
		local enabled = false
		local deb = false
		local ts = game:GetService("TweenService")
		button.Toggle.Activated:Connect(function()
			if deb == false then
				if enabled == false then
					enabled = true
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				else
					enabled = false
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				end
				callback(enabled)
			end
		end)
		button.Parent = tab
		return button
	end

	function AddInput(name, placeholder, callback, tab)
		local button = ui.Script.TabTemplates.ITemp:Clone()
		button.Name = name
		button.Input.PlaceholderText = placeholder
		local previousinput = ""
		task.spawn(function()
			while task.wait(0.1) do
				if #button.Input.Text >= 10 then
					button.Input.TextScaled = true
				else
					button.Input.TextScaled = true
				end
			end
		end)
		button.Input.FocusLost:Connect(function()
			if button.Input.Text == "" then
				return
			end
			previousinput = button.Input.Text
			callback(button.Input.Text)
		end)
		button.Parent = tab
		return button
	end

	function AddButton(name, text, callback, tab)
		local button = ui.Script.TabTemplates.BTemp:Clone()
		button.Name = name
		button.Button.Text = name
		button.ZIndex = 1
		button.Button.MouseEnter:Connect(function()
			button.Button.Text = text
			button.Button.TextScaled = true
		end)
		button.Button.MouseLeave:Connect(function()
			button.Button.Text = name
			button.Button.TextScaled = false
		end)
		button.Button.Activated:Connect(callback)
		button.Parent = tab
		return button
	end

	function AddEmpty(tab)
		local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
		spacer.Parent = tab
	end

	function AddSection(name, tab)
		local actions = #tab:GetChildren()
		local section = ui.Script.TabTemplates.SectionTemp:Clone()
		if actions % 2 == 0 then
			AddEmpty(tab)
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		else
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		end
		return section
	end

	function AddSlider(name,tab,callback, maxi,min)
		local slider = ui.Script.TabTemplates.Slide:Clone()
		local text = Instance.new("TextLabel", slider)
		text.Size = UDim2.new(1,0,1,0)
		text.BackgroundTransparency = 1
		text.TextColor3 = Color3.new(255,255,255)
		text.Text = ""
		slider.Parent = tab
		task.spawn(function()
			local max = slider.Max
			local bar = max.Bar
			local player = game.Players.LocalPlayer
			local mouse = player:GetMouse()
			local uis = game:GetService("UserInputService")
			local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
			local down = false
			local lastinp = nil

			max.InputBegan:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = true
				end
			end)

			max.InputEnded:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = false
				end
			end)
			local function ScaleToOffset(Scale)
				local ViewPortSize = workspace.Camera.ViewportSize
				return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
			end


			local function OffsetToScale(Offset)
				local ViewPortSize = workspace.Camera.ViewportSize
				return Offset / max.Size
			end
			while task.wait(0.05) do
				if down == true and lastinp ~= nil then
					local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
					--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
					local ts = game:GetService("TweenService")
					ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
					local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
					local function range(value)
						local oldmin, oldmax = 0, 161
						local newmin, newmax = min, maxi

						local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

						return newValue
					end
					text.Text = name .. " " .. tostring(math.round(range(val)))
					callback(range(val))
				end
			end
		end)
		return slider
	end

	function AddDropdown(name,text,s_table,callback,tab)
		local dropdown = ui.Script.TabTemplates.DTemp:Clone()
		dropdown.Parent = tab
		dropdown.Name = name
		dropdown.Button.Text = name
		dropdown.ZIndex = 2
		dropdown.Button.MouseEnter:Connect(function()
			dropdown.Button.Text = text
		end)
		dropdown.Button.MouseLeave:Connect(function()
			dropdown.Button.Text = name
		end)
		local visible = false
		dropdown.Button.Activated:Connect(function()
			if visible == true then
				visible = false
			else
				visible = true
			end
		end)
		dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
		task.spawn(function()
			while task.wait() do
				dropdown.Button.Drop.Visible = visible
			end
		end)
		for i, v in pairs(s_table) do
			local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
			temp.Parent = dropdown.Button.Drop
			temp.Text = v
			temp.Activated:Connect(function()
				visible = false
				callback(v)
			end)
		end
		return dropdown
	end

	local tabs = 0
	local uistroke = Instance.new("UIStroke", ui)
	uistroke.Color = Color3.fromRGB(0,0,0)
	uistroke.Thickness = 5
	uistroke.Transparency = 0.85
	local tdeb = false
	function lib.AddTab(name, icon)
		tabs += 1
		local tname = name
		local icon = icon or "160460785"
		icon = "rbxassetid://" .. icon
		local tbutton = ui.Script.TabStuff.TabTemp:Clone()
		tbutton.Parent = ui.TabList
		tbutton.ImageLabel.Image = icon
		tbutton.TextLabel.Text = name
		local tholder = ui.Script.TabStuff.TempTab:Clone()
		tholder.Parent = ui.Tabs
		tholder.Name = name
		tholder.Visible = false
		if tabs == 1 then
			tholder.Visible = true
		end
		tbutton.Button.Activated:Connect(function()
			if tdeb == true then
				return
			end
			tdeb = true
			local ts = game:GetService("TweenService")
			for i, v in pairs(ui.Tabs:GetChildren()) do
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if not v:FindFirstChild("Trans") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
								local dat2 = Instance.new("NumberValue", v)
								dat2.Name = "TTrans"
								dat2.Value = v.TextTransparency
							elseif v:IsA("UIStroke") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "STrans"
								dat.Value = v.Transparency
							else
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
							end
						end
						--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
					end
				end
				if v ~= tholder then
					local clone = v--:Clone()
					v.Parent = ui.CTabs
					--v.Visible = false
					for i, v in pairs(clone:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							--local dat = Instance.new("NumberValue", v)
							--dat.Name = "Trans"
							--dat.Value = v.BackgroundTransparency
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							end
							--print("maybe twen")
						end
					end
					task.spawn(function()
						wait(0.5)
						v.Visible = false
					end)
				end
			end
			wait(0.5)
			tholder.Visible = true
			tholder.Parent = ui.Tabs
			for i, v in pairs(tholder:GetChildren()) do
				if v ~= tholder then
					for i, v in pairs(v:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							end
						end
					end
				end
			end
			tdeb = false
		end)
		local toreturn = {}
		toreturn.AddButton = function(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		toreturn.AddDropdown = function(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		toreturn.AddInput = function(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		toreturn.AddToggle = function(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		toreturn.AddSection = function(Name)
			AddSection(Name, tholder)
			return toreturn
		end
		toreturn.AddSlider = function(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		function toreturn:NewButton(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		function toreturn:NewDropdown(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		function toreturn:NewTextBox(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		function toreturn:NewToggle(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		function toreturn:NewSection(Name)
			AddSection(Name,tholder)
			return toreturn
		end
		function toreturn:NewSlider(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		toreturn.Source = tholder
		return toreturn
	end

	task.spawn(function()
		while task.wait(0.1) do
			
			ui.TopBar.TextLabel.Text = "Sky Hub CE Edition"
		end
	end)

	lib.CreateLib = function(name,smth)
		local toreturn = {}
		function toreturn:NewTab(name, icon)
			return lib.AddTab(name,icon)
		end
		return toreturn
	end
	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewToggle("Auto Farm", "must be in first person or shift lock", function(state)
		getgenv().lol = state
		for _, tool in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA("Tool") and tool:FindFirstChild("combatClient") then
				tool.Parent = game:GetService("Players").LocalPlayer.Character
			end
		end
		local function delplrs()
			for i, v in pairs(game:GetService("Workspace").entities:GetDescendants()) do
				if v.Name == "scripts" and v.ClassName == "Folder" then
					if v.Parent.Name ~= game:GetService("Players").LocalPlayer.Name then
						v.Parent:Destroy()
					end
				end
			end
		end
		delplrs()
		local function getTarget()
			for _, v in pairs(workspace.entities:GetDescendants()) do
				if v.Name == "HumanoidRootPart" then
					return v
				end
			end
			return nil
		end
		spawn(function()
			local currentTarget = nil
			while wait() do
				if not getgenv().lol then
					break
				end
				if currentTarget == nil or not currentTarget:IsDescendantOf(workspace) then
					currentTarget = getTarget()
				end
				if currentTarget then
					local player = game:GetService("Players").LocalPlayer
					local character = player.Character
					local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
					local targetPosition = currentTarget.Position
					local parent = currentTarget.Parent
					if humanoidRootPart then
						local direction = (targetPosition - humanoidRootPart.Position).unit
						local lookAt = CFrame.new(humanoidRootPart.Position, targetPosition)
						local rotation = CFrame.Angles(0, math.atan2(-direction.Z, -direction.X) + math.pi, 0)
						humanoidRootPart.CFrame = lookAt * rotation
						game:GetService("Workspace").CurrentCamera.CFrame = CFrame.new(game:GetService("Workspace").CurrentCamera.CFrame.p, currentTarget.Position)
						humanoidRootPart.CFrame = currentTarget.CFrame * CFrame.new(0, 0, 5) * CFrame.Angles(0, math.pi, 0)
						local args = {
							[1] = "M1"
						}
						game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("combat"):FireServer(unpack(args))
					end
				else
					wait(0.5)
				end
			end
		end)
		game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(character)
			for _, tool in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
				if tool:IsA("Tool") and tool:FindFirstChild("combatClient") then
					tool.Parent = game:GetService("Players").LocalPlayer.Character
				end
			end
		end)
		game:GetService("Players").PlayerAdded:Connect(function(player)
			delplrs()
		end)
		game:GetService("Players").CharacterAdded:Connect(function(player)
			delplrs()
		end)
	end)
	MainSection:NewButton("Anti-afk", "no kick after 20 mins", function()
		Players = game:GetService("Players")
		local GC = getconnections or get_signal_cons
		if GC then
			for i, v in pairs(GC(Players.LocalPlayer.Idled)) do
				if v["Disable"] then
					v["Disable"](v)
				elseif v["Disconnect"] then
					v["Disconnect"](v)
				end
			end
		else
			Players.LocalPlayer.Idled:Connect(function()
				local VirtualUser = game:GetService("VirtualUser")
				VirtualUser:CaptureController()
				VirtualUser:ClickButton2(Vector2.new())
			end)
		end
	end)
	

	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "wait a few secs will prompt ui", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)

	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
	-- Blox Fruits
elseif game.PlaceId == 14426444782 then
	local ScreenGui = Instance.new("ScreenGui")
	local ImageLabel = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local Minimize = Instance.new("TextButton")
	local Rot = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Frame_2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Frame_3 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Frame_4 = Instance.new("Frame")
	local UICorner_5 = Instance.new("UICorner")
	local Close = Instance.new("TextButton")
	local Rot_3 = Instance.new("Frame")
	local Frame_5 = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local Frame_6 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local TabList = Instance.new("ScrollingFrame")
	local UIGridLayout = Instance.new("UIGridLayout")
	local Tabs = Instance.new("Folder")
	local CTabs = Instance.new("Folder")
	local TabTemplates = Instance.new("Folder")
	local TTemp = Instance.new("Frame")
	local Toggle = Instance.new("TextButton")
	local UICorner_8 = Instance.new("UICorner")
	local Desc = Instance.new("TextLabel")
	local ITemp = Instance.new("Frame")
	local Input = Instance.new("TextBox")
	local UICorner_9 = Instance.new("UICorner")
	local BTemp = Instance.new("Frame")
	local Button = Instance.new("TextButton")
	local UICorner_10 = Instance.new("UICorner")
	local SectionTemp = Instance.new("Frame")
	local Section = Instance.new("TextLabel")
	local SectionSpacer = Instance.new("Frame")
	local Slide = Instance.new("Frame")
	local Max = Instance.new("TextButton")
	local Bar = Instance.new("Frame")
	local UICorner_11 = Instance.new("UICorner")
	local UIGradient_2 = Instance.new("UIGradient")
	local UICorner_12 = Instance.new("UICorner")
	local DTemp = Instance.new("Frame")
	local Button_2 = Instance.new("TextButton")
	local UICorner_13 = Instance.new("UICorner")
	local Drop = Instance.new("ScrollingFrame")
	local UICorner_14 = Instance.new("UICorner")
	local UIGridLayout_2 = Instance.new("UIGridLayout")
	local Button_3 = Instance.new("TextButton")
	local UICorner_15 = Instance.new("UICorner")
	local TabStuff = Instance.new("Folder")
	local TabTemp = Instance.new("Frame")
	local Button_4 = Instance.new("TextButton")
	local TextLabel_2 = Instance.new("TextLabel")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local TempTab = Instance.new("ScrollingFrame")
	local UIGridLayout_3 = Instance.new("UIGridLayout")
	local Script = Instance.new("Script", ImageLabel)
	Script.Name = "Script"

	--Properties:
	ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ImageLabel.Parent = ScreenGui
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.ClipsDescendants = true
	ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
	ImageLabel.Size = UDim2.new(0, 550, 0, 300)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
	ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
	ImageLabel.ImageTransparency = 0.150

	UICorner.Parent = ImageLabel

	TopBar.Name = "TopBar"
	TopBar.Parent = ImageLabel
	TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TopBar.BackgroundTransparency = 0.900
	TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BorderSizePixel = 0
	TopBar.Size = UDim2.new(1, 0, 0, 40)

	TextLabel.Parent = TopBar
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 200, 0, 40)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "Sky Hub CE Edition"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 25.000
	TextLabel.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
	UIGradient.Rotation = 90
	UIGradient.Parent = TopBar

	Minimize.Name = "Minimize"
	Minimize.Parent = TopBar
	Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Minimize.BackgroundTransparency = 1.000
	Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.BorderSizePixel = 0
	Minimize.Position = UDim2.new(0, 470, 0, 0)
	Minimize.Size = UDim2.new(0, 40, 0, 40)
	Minimize.Font = Enum.Font.Ubuntu
	Minimize.Text = ""
	Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.TextSize = 14.000

	Rot.Name = "Rot"
	Rot.Parent = Minimize
	Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot.BackgroundTransparency = 1.000
	Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot.BorderSizePixel = 0
	Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot.Rotation = 90.000
	Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

	UICorner_2.CornerRadius = UDim.new(0, 500)
	UICorner_2.Parent = Frame

	Frame_2.Parent = Rot
	Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
	Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_3.CornerRadius = UDim.new(0, 500)
	UICorner_3.Parent = Frame_2

	Close.Name = "Close"
	Close.Parent = TopBar
	Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Close.BackgroundTransparency = 1.000
	Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 510, 0, 0)
	Close.Rotation = 1.000
	Close.Size = UDim2.new(0, 40, 0, 40)
	Close.Font = Enum.Font.Ubuntu
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(0, 0, 0)
	Close.TextSize = 14.000

	Rot_3.Name = "Rot"
	Rot_3.Parent = Close
	Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot_3.BackgroundTransparency = 1.000
	Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot_3.BorderSizePixel = 0
	Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

	Frame_5.Parent = Rot_3
	Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_5.BorderSizePixel = 0
	Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
	Frame_5.Rotation = -45.000
	Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_6.CornerRadius = UDim.new(0, 500)
	UICorner_6.Parent = Frame_5

	Frame_6.Parent = Rot_3
	Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_6.BorderSizePixel = 0
	Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
	Frame_6.Rotation = 45.000
	Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_7.CornerRadius = UDim.new(0, 500)
	UICorner_7.Parent = Frame_6

	TabList.Name = "TabList"
	TabList.Parent = ImageLabel
	TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabList.BackgroundTransparency = 1.000
	TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabList.BorderSizePixel = 0
	TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
	TabList.Size = UDim2.new(0, 120, 0, 251)
	TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
	TabList.ScrollBarThickness = 0

	UIGridLayout.Parent = TabList
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

	Tabs.Name = "Tabs"
	Tabs.Parent = ImageLabel

	CTabs.Name = "CTabs"
	CTabs.Parent = ImageLabel

	TabTemplates.Name = "TabTemplates"
	TabTemplates.Parent = Script

	TTemp.Name = "TTemp"
	TTemp.Parent = TabTemplates
	TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TTemp.BackgroundTransparency = 1.000
	TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TTemp.BorderSizePixel = 0
	TTemp.Size = UDim2.new(0, 100, 0, 100)

	Toggle.Name = "Toggle"
	Toggle.Parent = TTemp
	Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Toggle.BackgroundTransparency = 0.750
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
	Toggle.Size = UDim2.new(0, 33, 0, 33)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.Ubuntu
	Toggle.Text = ""
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 30.000

	UICorner_8.CornerRadius = UDim.new(0, 5)
	UICorner_8.Parent = Toggle

	Desc.Name = "Desc"
	Desc.Parent = TTemp
	Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Desc.BackgroundTransparency = 1.000
	Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Desc.BorderSizePixel = 0
	Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
	Desc.Size = UDim2.new(0, 145, 0, 26)
	Desc.Font = Enum.Font.Ubuntu
	Desc.Text = "Checkmark"
	Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
	Desc.TextScaled = true
	Desc.TextSize = 14.000
	Desc.TextWrapped = true
	Desc.TextXAlignment = Enum.TextXAlignment.Left

	ITemp.Name = "ITemp"
	ITemp.Parent = TabTemplates
	ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ITemp.BackgroundTransparency = 1.000
	ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ITemp.BorderSizePixel = 0
	ITemp.Size = UDim2.new(0, 100, 0, 100)

	Input.Name = "Input"
	Input.Parent = ITemp
	Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Input.BackgroundTransparency = 0.750
	Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Input.BorderSizePixel = 0
	Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
	Input.Size = UDim2.new(0, 150, 0, 33)
	Input.Font = Enum.Font.Ubuntu
	Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Input.PlaceholderText = "Placeholder"
	Input.Text = ""
	Input.TextColor3 = Color3.fromRGB(255, 255, 255)
	Input.TextSize = 22.000
	Input.TextWrapped = true

	UICorner_9.CornerRadius = UDim.new(0, 5)
	UICorner_9.Parent = Input

	BTemp.Name = "BTemp"
	BTemp.Parent = TabTemplates
	BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
	BTemp.BackgroundTransparency = 1.000
	BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BTemp.BorderSizePixel = 0
	BTemp.Size = UDim2.new(0, 100, 0, 100)

	Button.Name = "Button"
	Button.Parent = BTemp
	Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button.BackgroundTransparency = 0.750
	Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button.Size = UDim2.new(0, 150, 0, 33)
	Button.Font = Enum.Font.Ubuntu
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 18.000

	UICorner_10.CornerRadius = UDim.new(0, 5)
	UICorner_10.Parent = Button

	SectionTemp.Name = "SectionTemp"
	SectionTemp.Parent = TabTemplates
	SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionTemp.BackgroundTransparency = 1.000
	SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionTemp.BorderSizePixel = 0
	SectionTemp.Size = UDim2.new(0, 100, 0, 100)

	Section.Name = "Section"
	Section.Parent = SectionTemp
	Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Section.BackgroundTransparency = 1.000
	Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Section.BorderSizePixel = 0
	Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
	Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
	Section.Font = Enum.Font.Ubuntu
	Section.Text = "Section"
	Section.TextColor3 = Color3.fromRGB(255, 255, 255)
	Section.TextScaled = true
	Section.TextSize = 14.000
	Section.TextWrapped = true
	Section.TextXAlignment = Enum.TextXAlignment.Left

	SectionSpacer.Name = "SectionSpacer"
	SectionSpacer.Parent = TabTemplates
	SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionSpacer.BackgroundTransparency = 1.000
	SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionSpacer.BorderSizePixel = 0
	SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

	Slide.Name = "Slide"
	Slide.Parent = TabTemplates
	Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slide.BackgroundTransparency = 1.000
	Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slide.BorderSizePixel = 0
	Slide.Size = UDim2.new(0, 100, 0, 100)

	Max.Name = "Max"
	Max.Parent = Slide
	Max.AnchorPoint = Vector2.new(0.5, 0.5)
	Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Max.BackgroundTransparency = 0.500
	Max.BorderSizePixel = 0
	Max.Position = UDim2.new(0.5, 0, 0.5, 0)
	Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
	Max.AutoButtonColor = false
	Max.Font = Enum.Font.Ubuntu
	Max.Text = ""
	Max.TextColor3 = Color3.fromRGB(0, 0, 0)
	Max.TextSize = 14.000

	Bar.Name = "Bar"
	Bar.Parent = Max
	Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Bar.BorderSizePixel = 0
	Bar.Size = UDim2.new(0, 82, 1, 0)

	UICorner_11.Parent = Bar

	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
	UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
	UIGradient_2.Parent = Bar

	UICorner_12.Parent = Max

	DTemp.Name = "DTemp"
	DTemp.Parent = TabTemplates
	DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DTemp.BackgroundTransparency = 1.000
	DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DTemp.BorderSizePixel = 0
	DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
	DTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_2.Name = "Button"
	Button_2.Parent = DTemp
	Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_2.BackgroundTransparency = 0.750
	Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_2.BorderSizePixel = 0
	Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_2.Size = UDim2.new(0, 150, 0, 33)
	Button_2.Font = Enum.Font.Ubuntu
	Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_2.TextSize = 18.000

	UICorner_13.CornerRadius = UDim.new(0, 5)
	UICorner_13.Parent = Button_2

	Drop.Name = "Drop"
	Drop.Parent = Button_2
	Drop.Active = true
	Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Drop.BackgroundTransparency = 0.750
	Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Drop.BorderSizePixel = 0
	Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
	Drop.Size = UDim2.new(0, 150, 0, 127)
	Drop.ZIndex = 2
	Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
	Drop.ScrollBarThickness = 0

	UICorner_14.CornerRadius = UDim.new(0, 5)
	UICorner_14.Parent = Drop

	UIGridLayout_2.Parent = Drop
	UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

	Button_3.Name = "Button"
	Button_3.Parent = UIGridLayout_2
	Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_3.BorderSizePixel = 0
	Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_3.Size = UDim2.new(0, 150, 0, 33)
	Button_3.Font = Enum.Font.Ubuntu
	Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_3.TextSize = 18.000

	UICorner_15.CornerRadius = UDim.new(0, 5)
	UICorner_15.Parent = Button_3

	TabStuff.Name = "TabStuff"
	TabStuff.Parent = Script

	TabTemp.Name = "TabTemp"
	TabTemp.Parent = TabStuff
	TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabTemp.BackgroundTransparency = 0.900
	TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabTemp.BorderSizePixel = 0
	TabTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_4.Name = "Button"
	Button_4.Parent = TabTemp
	Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_4.BackgroundTransparency = 1.000
	Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_4.BorderSizePixel = 0
	Button_4.Size = UDim2.new(1, 0, 1, 0)
	Button_4.Font = Enum.Font.Ubuntu
	Button_4.Text = ""
	Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_4.TextSize = 20.000

	TextLabel_2.Parent = TabTemp
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel_2.BorderSizePixel = 0
	TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
	TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
	TextLabel_2.Font = Enum.Font.Ubuntu
	TextLabel_2.Text = "Tab 1"
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextScaled = true
	TextLabel_2.TextSize = 20.000
	TextLabel_2.TextWrapped = true

	ImageLabel_2.Parent = TabTemp
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel_2.BorderSizePixel = 0
	ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
	ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
	ImageLabel_2.Image = "rbxassetid://12010069146"

	TempTab.Name = "TempTab"
	TempTab.Parent = TabStuff
	TempTab.Active = true
	TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TempTab.BackgroundTransparency = 1.000
	TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TempTab.BorderSizePixel = 0
	TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
	TempTab.Size = UDim2.new(0, 430, 0, 260)
	TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
	TempTab.ScrollBarThickness = 0

	UIGridLayout_3.Parent = TempTab
	UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

	-- Scripts:
	local close = false
	local function HLBC_fake_script() -- ImageLabel.Script 
		local script = Instance.new('LocalScript', ImageLabel)

		--[[
			
			Version 6.0
			
			Max Intensity: 1
			
			Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
			Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
			
			Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
			
			]]
		
		local BlurIntensity = 0.4
		
		local RunService = game:GetService('RunService')
		local camera = workspace.CurrentCamera
		local MTREL = "Glass"
		local binds = {}
		local root = Instance.new('Folder', camera)
		
		local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
		local frame = script.Parent
		DepthOfField.FarIntensity = 0
		DepthOfField.FocusDistance = 51.6
		DepthOfField.InFocusRadius = 50
		DepthOfField.NearIntensity = BlurIntensity
		DepthOfField.Name = " "
		root.Name = 'BlurSnox'
		
		local GenUid; do -- Generate unique names for RenderStepped bindings
			local id = 0
			function GenUid()
				id = id + 1
				return 'neon::'..tostring(id)
			end
		end
		
		do
			local function IsNotNaN(x)
				return x == x
			end
			local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			while not continue do
				RunService.RenderStepped:wait()
				continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			end
		end
		
		local DrawQuad; do
			local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
			local sz = 0.2
		
			local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
				local s1 = (v1 - v2).magnitude
				local s2 = (v2 - v3).magnitude
				local s3 = (v3 - v1).magnitude
				local smax = max(s1, s2, s3)
				local A, B, C
				if s1 == smax then
					A, B, C = v1, v2, v3
				elseif s2 == smax then
					A, B, C = v2, v3, v1
				elseif s3 == smax then
					A, B, C = v3, v1, v2
				end
		
				local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
				local perp = sqrt((C-A).magnitude^2 - para*para)
				local dif_para = (A - B).magnitude - para
		
				local st = CFrame.new(B, A)
				local za = CFrame.Angles(pi/2,0,0)
		
				local cf0 = st
		
				local Top_Look = (cf0 * za).lookVector
				local Mid_Point = A + CFrame.new(A, B).LookVector * para
				local Needed_Look = CFrame.new(Mid_Point, C).LookVector
				local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
		
				local ac = CFrame.Angles(0, 0, acos(dot))
		
				cf0 = cf0 * ac
				if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
				end
				cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
		
				local cf1 = st * ac * CFrame.Angles(0, pi, 0)
				if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
				end
				cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
		
				if not p0 then
					p0 = Instance.new('Part')
					p0.Color = Color3.fromRGB(91, 128, 130)
					p0.FormFactor = 'Custom'
					p0.TopSurface = 0
					p0.BottomSurface = 0
					p0.Anchored = true
					p0.CanCollide = false
					p0.CastShadow = false
					p0.Material = MTREL
					p0.Size = Vector3.new(sz, sz, sz)
					local mesh = Instance.new('SpecialMesh', p0)
					mesh.MeshType = 2
					mesh.Name = 'WedgeMesh'
				end
				p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
				p0.CFrame = cf0
		
				if not p1 then
					p1 = p0:clone()
				end
				p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
				p1.CFrame = cf1
		
				return p0, p1
			end
		
			function DrawQuad(v1, v2, v3, v4, parts)
				parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
				parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
			end
		end
		
		if binds[frame] then
			return binds[frame].parts
		end
		
		local uid = GenUid()
		local parts = {}
		local visible = true
		local f = Instance.new('Folder', root)
		f.Name = frame.Name
		
		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end
		
		local function UpdateOrientation(fetchProps)
			if close == true then
				return
			end
			local trans = 0.99
			if visible == false then
				trans = 1
			end
			local properties = {
				Transparency = trans;
				--BrickColor = BrickColor.new('Institutional white');
			}
			local zIndex = 1 - 0.05*frame.ZIndex
		
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end
		
		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
		local UserInputService = game:GetService("UserInputService")
		local runService = (game:GetService("RunService"));
		
		local gui = script.Parent
		
		local dragging
		local dragInput
		local dragStart
		local startPos
		
		local function Lerp(a, b, m)
			return a + (b - a) * m
		end;
		
		local lastMousePos
		local lastGoalPos
		local DRAG_SPEED = (8); -- // The speed of the UI darg.
		local function Update(dt)
			if not (startPos) then return end;
			if not (dragging) and (lastGoalPos) then
				gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
				return 
			end;
		
			local delta = (lastMousePos - UserInputService:GetMouseLocation())
			local xGoal = (startPos.X.Offset - delta.X);
			local yGoal = (startPos.Y.Offset - delta.Y);
			lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
		end;
		
		gui.TopBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position
				lastMousePos = UserInputService:GetMouseLocation()
		
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		
		gui.TopBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		
		runService.Heartbeat:Connect(Update)
		script.Parent.TopBar.Minimize.Activated:Connect(function()
			visible = false
		end)
		script.Parent.TopBar.Close.Activated:Connect(function()
			close = true
			script.Parent.Parent:Destroy()
			game:GetService("Workspace").Camera.BlurSnox:Destroy()
			game:GetService("Lighting")[" "]:Destroy()
		end)
		local uis = game:GetService("UserInputService")
		uis.InputBegan:Connect(function(inp)
			if inp.KeyCode == Enum.KeyCode.RightControl then
				visible = true
			end
		end)
		task.spawn(function()
			while task.wait() do
				script.Parent.Visible = visible
			end
		end)
		
			--[[
			local lib = require(script.Parent.Lib)
			local tab = lib.AddTab("Tabs are over rated")
			
			tab.AddButton("Button", "Im a button test", function()
				print("Testing!")
			end)
			tab.AddToggle("Toggle", "Toggle Desc", function(bool)
				print(bool)
			end)
			tab.AddInput("Input", "Placeholder i think", function(out)
				print(out)
			end)
			tab.AddSection("Wha da fuck")
			tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
				print(val)
			end)
			
			local tab2 = lib.AddTab("Why are most niggers annoying")
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
				print(str)
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)]]
	end
	coroutine.wrap(HLBC_fake_script)()

	local lib = {}
	local tabs = {}
	local ui = ImageLabel

	function AddToggle(name, text, callback, tab)
		local button = ui.Script.TabTemplates.TTemp:Clone()
		button.Name = name
		button.Desc.Text = name
		button.Desc.MouseEnter:Connect(function()
			button.Desc.Text = text
		end)
		button.Desc.MouseLeave:Connect(function()
			button.Desc.Text = name
		end)
		local enabled = false
		local deb = false
		local ts = game:GetService("TweenService")
		button.Toggle.Activated:Connect(function()
			if deb == false then
				if enabled == false then
					enabled = true
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				else
					enabled = false
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				end
				callback(enabled)
			end
		end)
		button.Parent = tab
		return button
	end

	function AddInput(name, placeholder, callback, tab)
		local button = ui.Script.TabTemplates.ITemp:Clone()
		button.Name = name
		button.Input.PlaceholderText = placeholder
		local previousinput = ""
		task.spawn(function()
			while task.wait(0.1) do
				if #button.Input.Text >= 10 then
					button.Input.TextScaled = true
				else
					button.Input.TextScaled = true
				end
			end
		end)
		button.Input.FocusLost:Connect(function()
			if button.Input.Text == "" then
				return
			end
			previousinput = button.Input.Text
			callback(button.Input.Text)
		end)
		button.Parent = tab
		return button
	end

	function AddButton(name, text, callback, tab)
		local button = ui.Script.TabTemplates.BTemp:Clone()
		button.Name = name
		button.Button.Text = name
		button.ZIndex = 1
		button.Button.MouseEnter:Connect(function()
			button.Button.Text = text
			button.Button.TextScaled = true
		end)
		button.Button.MouseLeave:Connect(function()
			button.Button.Text = name
			button.Button.TextScaled = false
		end)
		button.Button.Activated:Connect(callback)
		button.Parent = tab
		return button
	end

	function AddEmpty(tab)
		local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
		spacer.Parent = tab
	end

	function AddSection(name, tab)
		local actions = #tab:GetChildren()
		local section = ui.Script.TabTemplates.SectionTemp:Clone()
		if actions % 2 == 0 then
			AddEmpty(tab)
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		else
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		end
		return section
	end

	function AddSlider(name,tab,callback, maxi,min)
		local slider = ui.Script.TabTemplates.Slide:Clone()
		local text = Instance.new("TextLabel", slider)
		text.Size = UDim2.new(1,0,1,0)
		text.BackgroundTransparency = 1
		text.TextColor3 = Color3.new(255,255,255)
		text.Text = ""
		slider.Parent = tab
		task.spawn(function()
			local max = slider.Max
			local bar = max.Bar
			local player = game.Players.LocalPlayer
			local mouse = player:GetMouse()
			local uis = game:GetService("UserInputService")
			local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
			local down = false
			local lastinp = nil

			max.InputBegan:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = true
				end
			end)

			max.InputEnded:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = false
				end
			end)
			local function ScaleToOffset(Scale)
				local ViewPortSize = workspace.Camera.ViewportSize
				return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
			end


			local function OffsetToScale(Offset)
				local ViewPortSize = workspace.Camera.ViewportSize
				return Offset / max.Size
			end
			while task.wait(0.05) do
				if down == true and lastinp ~= nil then
					local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
					--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
					local ts = game:GetService("TweenService")
					ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
					local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
					local function range(value)
						local oldmin, oldmax = 0, 161
						local newmin, newmax = min, maxi

						local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

						return newValue
					end
					text.Text = name .. " " .. tostring(math.round(range(val)))
					callback(range(val))
				end
			end
		end)
		return slider
	end

	function AddDropdown(name,text,s_table,callback,tab)
		local dropdown = ui.Script.TabTemplates.DTemp:Clone()
		dropdown.Parent = tab
		dropdown.Name = name
		dropdown.Button.Text = name
		dropdown.ZIndex = 2
		dropdown.Button.MouseEnter:Connect(function()
			dropdown.Button.Text = text
		end)
		dropdown.Button.MouseLeave:Connect(function()
			dropdown.Button.Text = name
		end)
		local visible = false
		dropdown.Button.Activated:Connect(function()
			if visible == true then
				visible = false
			else
				visible = true
			end
		end)
		dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
		task.spawn(function()
			while task.wait() do
				dropdown.Button.Drop.Visible = visible
			end
		end)
		for i, v in pairs(s_table) do
			local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
			temp.Parent = dropdown.Button.Drop
			temp.Text = v
			temp.Activated:Connect(function()
				visible = false
				callback(v)
			end)
		end
		return dropdown
	end

	local tabs = 0
	local uistroke = Instance.new("UIStroke", ui)
	uistroke.Color = Color3.fromRGB(0,0,0)
	uistroke.Thickness = 5
	uistroke.Transparency = 0.85
	local tdeb = false
	function lib.AddTab(name, icon)
		tabs += 1
		local tname = name
		local icon = icon or "160460785"
		icon = "rbxassetid://" .. icon
		local tbutton = ui.Script.TabStuff.TabTemp:Clone()
		tbutton.Parent = ui.TabList
		tbutton.ImageLabel.Image = icon
		tbutton.TextLabel.Text = name
		local tholder = ui.Script.TabStuff.TempTab:Clone()
		tholder.Parent = ui.Tabs
		tholder.Name = name
		tholder.Visible = false
		if tabs == 1 then
			tholder.Visible = true
		end
		tbutton.Button.Activated:Connect(function()
			if tdeb == true then
				return
			end
			tdeb = true
			local ts = game:GetService("TweenService")
			for i, v in pairs(ui.Tabs:GetChildren()) do
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if not v:FindFirstChild("Trans") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
								local dat2 = Instance.new("NumberValue", v)
								dat2.Name = "TTrans"
								dat2.Value = v.TextTransparency
							elseif v:IsA("UIStroke") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "STrans"
								dat.Value = v.Transparency
							else
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
							end
						end
						--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
					end
				end
				if v ~= tholder then
					local clone = v--:Clone()
					v.Parent = ui.CTabs
					--v.Visible = false
					for i, v in pairs(clone:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							--local dat = Instance.new("NumberValue", v)
							--dat.Name = "Trans"
							--dat.Value = v.BackgroundTransparency
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							end
							--print("maybe twen")
						end
					end
					task.spawn(function()
						wait(0.5)
						v.Visible = false
					end)
				end
			end
			wait(0.5)
			tholder.Visible = true
			tholder.Parent = ui.Tabs
			for i, v in pairs(tholder:GetChildren()) do
				if v ~= tholder then
					for i, v in pairs(v:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							end
						end
					end
				end
			end
			tdeb = false
		end)
		local toreturn = {}
		toreturn.AddButton = function(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		toreturn.AddDropdown = function(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		toreturn.AddInput = function(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		toreturn.AddToggle = function(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		toreturn.AddSection = function(Name)
			AddSection(Name, tholder)
			return toreturn
		end
		toreturn.AddSlider = function(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		function toreturn:NewButton(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		function toreturn:NewDropdown(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		function toreturn:NewTextBox(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		function toreturn:NewToggle(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		function toreturn:NewSection(Name)
			AddSection(Name,tholder)
			return toreturn
		end
		function toreturn:NewSlider(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		toreturn.Source = tholder
		return toreturn
	end

	task.spawn(function()
		while task.wait(0.1) do
			
			ui.TopBar.TextLabel.Text = "Sky Hub CE Edition"
		end
	end)

	lib.CreateLib = function(name,smth)
		local toreturn = {}
		function toreturn:NewTab(name, icon)
			return lib.AddTab(name,icon)
		end
		return toreturn
	end
	local Window = lib.CreateLib("Sky Hub")
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	MainSection:NewToggle("blox fruits", "yuh", function(state)
		_G.bloxfruit()
	end)
	

	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "wait a few secs will prompt ui", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)

	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)
	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
-- Universal
else
	local ScreenGui = Instance.new("ScreenGui")
	local ImageLabel = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local Minimize = Instance.new("TextButton")
	local Rot = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Frame_2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Frame_3 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Frame_4 = Instance.new("Frame")
	local UICorner_5 = Instance.new("UICorner")
	local Close = Instance.new("TextButton")
	local Rot_3 = Instance.new("Frame")
	local Frame_5 = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local Frame_6 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local TabList = Instance.new("ScrollingFrame")
	local UIGridLayout = Instance.new("UIGridLayout")
	local Tabs = Instance.new("Folder")
	local CTabs = Instance.new("Folder")
	local TabTemplates = Instance.new("Folder")
	local TTemp = Instance.new("Frame")
	local Toggle = Instance.new("TextButton")
	local UICorner_8 = Instance.new("UICorner")
	local Desc = Instance.new("TextLabel")
	local ITemp = Instance.new("Frame")
	local Input = Instance.new("TextBox")
	local UICorner_9 = Instance.new("UICorner")
	local BTemp = Instance.new("Frame")
	local Button = Instance.new("TextButton")
	local UICorner_10 = Instance.new("UICorner")
	local SectionTemp = Instance.new("Frame")
	local Section = Instance.new("TextLabel")
	local SectionSpacer = Instance.new("Frame")
	local Slide = Instance.new("Frame")
	local Max = Instance.new("TextButton")
	local Bar = Instance.new("Frame")
	local UICorner_11 = Instance.new("UICorner")
	local UIGradient_2 = Instance.new("UIGradient")
	local UICorner_12 = Instance.new("UICorner")
	local DTemp = Instance.new("Frame")
	local Button_2 = Instance.new("TextButton")
	local UICorner_13 = Instance.new("UICorner")
	local Drop = Instance.new("ScrollingFrame")
	local UICorner_14 = Instance.new("UICorner")
	local UIGridLayout_2 = Instance.new("UIGridLayout")
	local Button_3 = Instance.new("TextButton")
	local UICorner_15 = Instance.new("UICorner")
	local TabStuff = Instance.new("Folder")
	local TabTemp = Instance.new("Frame")
	local Button_4 = Instance.new("TextButton")
	local TextLabel_2 = Instance.new("TextLabel")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local TempTab = Instance.new("ScrollingFrame")
	local UIGridLayout_3 = Instance.new("UIGridLayout")
	local Script = Instance.new("Script", ImageLabel)
	Script.Name = "Script"

	--Properties:
	ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ImageLabel.Parent = ScreenGui
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.ClipsDescendants = true
	ImageLabel.Position = UDim2.new(0.180995479, 0, 0.2781955, 0)
	ImageLabel.Size = UDim2.new(0, 550, 0, 300)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=16710334936"
	ImageLabel.ImageColor3 = Color3.fromRGB(89, 89, 89)
	ImageLabel.ImageTransparency = 0.150

	UICorner.Parent = ImageLabel

	TopBar.Name = "TopBar"
	TopBar.Parent = ImageLabel
	TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TopBar.BackgroundTransparency = 0.900
	TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BorderSizePixel = 0
	TopBar.Size = UDim2.new(1, 0, 0, 40)

	TextLabel.Parent = TopBar
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 200, 0, 40)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "Sky Hub CE Edition"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 25.000
	TextLabel.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(56, 56, 56)), ColorSequenceKeypoint.new(0.69, Color3.fromRGB(88, 88, 88)), ColorSequenceKeypoint.new(0.86, Color3.fromRGB(113, 113, 113)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(29, 29, 29))}
	UIGradient.Rotation = 90
	UIGradient.Parent = TopBar

	Minimize.Name = "Minimize"
	Minimize.Parent = TopBar
	Minimize.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Minimize.BackgroundTransparency = 1.000
	Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.BorderSizePixel = 0
	Minimize.Position = UDim2.new(0, 470, 0, 0)
	Minimize.Size = UDim2.new(0, 40, 0, 40)
	Minimize.Font = Enum.Font.Ubuntu
	Minimize.Text = ""
	Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
	Minimize.TextSize = 14.000

	Rot.Name = "Rot"
	Rot.Parent = Minimize
	Rot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot.BackgroundTransparency = 1.000
	Rot.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot.BorderSizePixel = 0
	Rot.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot.Rotation = 90.000
	Rot.Size = UDim2.new(0.75, 0, 0.75, 0)

	UICorner_2.CornerRadius = UDim.new(0, 500)
	UICorner_2.Parent = Frame

	Frame_2.Parent = Rot
	Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(0.80000001, 0, 0.100000001, 0)
	Frame_2.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_3.CornerRadius = UDim.new(0, 500)
	UICorner_3.Parent = Frame_2

	Close.Name = "Close"
	Close.Parent = TopBar
	Close.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
	Close.BackgroundTransparency = 1.000
	Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 510, 0, 0)
	Close.Rotation = 1.000
	Close.Size = UDim2.new(0, 40, 0, 40)
	Close.Font = Enum.Font.Ubuntu
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(0, 0, 0)
	Close.TextSize = 14.000

	Rot_3.Name = "Rot"
	Rot_3.Parent = Close
	Rot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Rot_3.BackgroundTransparency = 1.000
	Rot_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Rot_3.BorderSizePixel = 0
	Rot_3.Position = UDim2.new(0.125, 0, 0.125, 0)
	Rot_3.Size = UDim2.new(0.75, 0, 0.75, 0)

	Frame_5.Parent = Rot_3
	Frame_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_5.BorderSizePixel = 0
	Frame_5.Position = UDim2.new(0.432999998, 0, 0.0939999968, 0)
	Frame_5.Rotation = -45.000
	Frame_5.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_6.CornerRadius = UDim.new(0, 500)
	UICorner_6.Parent = Frame_5

	Frame_6.Parent = Rot_3
	Frame_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame_6.BorderSizePixel = 0
	Frame_6.Position = UDim2.new(0.433281153, 0, 0.0941828862, 0)
	Frame_6.Rotation = 45.000
	Frame_6.Size = UDim2.new(0.100000001, 0, 0.800000012, 0)

	UICorner_7.CornerRadius = UDim.new(0, 500)
	UICorner_7.Parent = Frame_6

	TabList.Name = "TabList"
	TabList.Parent = ImageLabel
	TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabList.BackgroundTransparency = 1.000
	TabList.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabList.BorderSizePixel = 0
	TabList.Position = UDim2.new(0, 0, 0.13333334, 0)
	TabList.Size = UDim2.new(0, 120, 0, 251)
	TabList.CanvasSize = UDim2.new(0, 0, 1.5, 0)
	TabList.ScrollBarThickness = 0

	UIGridLayout.Parent = TabList
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

	Tabs.Name = "Tabs"
	Tabs.Parent = ImageLabel

	CTabs.Name = "CTabs"
	CTabs.Parent = ImageLabel

	TabTemplates.Name = "TabTemplates"
	TabTemplates.Parent = Script

	TTemp.Name = "TTemp"
	TTemp.Parent = TabTemplates
	TTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TTemp.BackgroundTransparency = 1.000
	TTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TTemp.BorderSizePixel = 0
	TTemp.Size = UDim2.new(0, 100, 0, 100)

	Toggle.Name = "Toggle"
	Toggle.Parent = TTemp
	Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Toggle.BackgroundTransparency = 0.750
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0.0395348854, 0, 0.0769233704, 0)
	Toggle.Size = UDim2.new(0, 33, 0, 33)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.Ubuntu
	Toggle.Text = ""
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 30.000

	UICorner_8.CornerRadius = UDim.new(0, 5)
	UICorner_8.Parent = Toggle

	Desc.Name = "Desc"
	Desc.Parent = TTemp
	Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Desc.BackgroundTransparency = 1.000
	Desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Desc.BorderSizePixel = 0
	Desc.Position = UDim2.new(0.274418592, 0, 0.174999997, 0)
	Desc.Size = UDim2.new(0, 145, 0, 26)
	Desc.Font = Enum.Font.Ubuntu
	Desc.Text = "Checkmark"
	Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
	Desc.TextScaled = true
	Desc.TextSize = 14.000
	Desc.TextWrapped = true
	Desc.TextXAlignment = Enum.TextXAlignment.Left

	ITemp.Name = "ITemp"
	ITemp.Parent = TabTemplates
	ITemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ITemp.BackgroundTransparency = 1.000
	ITemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ITemp.BorderSizePixel = 0
	ITemp.Size = UDim2.new(0, 100, 0, 100)

	Input.Name = "Input"
	Input.Parent = ITemp
	Input.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Input.BackgroundTransparency = 0.750
	Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Input.BorderSizePixel = 0
	Input.Position = UDim2.new(0.150999993, 0, 0.0769999996, 0)
	Input.Size = UDim2.new(0, 150, 0, 33)
	Input.Font = Enum.Font.Ubuntu
	Input.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Input.PlaceholderText = "Placeholder"
	Input.Text = ""
	Input.TextColor3 = Color3.fromRGB(255, 255, 255)
	Input.TextSize = 22.000
	Input.TextWrapped = true

	UICorner_9.CornerRadius = UDim.new(0, 5)
	UICorner_9.Parent = Input

	BTemp.Name = "BTemp"
	BTemp.Parent = TabTemplates
	BTemp.BackgroundColor3 = Color3.fromRGB(50, 57, 81)
	BTemp.BackgroundTransparency = 1.000
	BTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BTemp.BorderSizePixel = 0
	BTemp.Size = UDim2.new(0, 100, 0, 100)

	Button.Name = "Button"
	Button.Parent = BTemp
	Button.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button.BackgroundTransparency = 0.750
	Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button.Size = UDim2.new(0, 150, 0, 33)
	Button.Font = Enum.Font.Ubuntu
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 18.000

	UICorner_10.CornerRadius = UDim.new(0, 5)
	UICorner_10.Parent = Button

	SectionTemp.Name = "SectionTemp"
	SectionTemp.Parent = TabTemplates
	SectionTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionTemp.BackgroundTransparency = 1.000
	SectionTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionTemp.BorderSizePixel = 0
	SectionTemp.Size = UDim2.new(0, 100, 0, 100)

	Section.Name = "Section"
	Section.Parent = SectionTemp
	Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Section.BackgroundTransparency = 1.000
	Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Section.BorderSizePixel = 0
	Section.Position = UDim2.new(0.0500000007, 0, 0.25, 0)
	Section.Size = UDim2.new(0.899999976, 0, 0.5, 0)
	Section.Font = Enum.Font.Ubuntu
	Section.Text = "Section"
	Section.TextColor3 = Color3.fromRGB(255, 255, 255)
	Section.TextScaled = true
	Section.TextSize = 14.000
	Section.TextWrapped = true
	Section.TextXAlignment = Enum.TextXAlignment.Left

	SectionSpacer.Name = "SectionSpacer"
	SectionSpacer.Parent = TabTemplates
	SectionSpacer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SectionSpacer.BackgroundTransparency = 1.000
	SectionSpacer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SectionSpacer.BorderSizePixel = 0
	SectionSpacer.Size = UDim2.new(0, 100, 0, 100)

	Slide.Name = "Slide"
	Slide.Parent = TabTemplates
	Slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slide.BackgroundTransparency = 1.000
	Slide.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slide.BorderSizePixel = 0
	Slide.Size = UDim2.new(0, 100, 0, 100)

	Max.Name = "Max"
	Max.Parent = Slide
	Max.AnchorPoint = Vector2.new(0.5, 0.5)
	Max.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Max.BackgroundTransparency = 0.500
	Max.BorderSizePixel = 0
	Max.Position = UDim2.new(0.5, 0, 0.5, 0)
	Max.Size = UDim2.new(0.75, 0, 0.400000006, 0)
	Max.AutoButtonColor = false
	Max.Font = Enum.Font.Ubuntu
	Max.Text = ""
	Max.TextColor3 = Color3.fromRGB(0, 0, 0)
	Max.TextSize = 14.000

	Bar.Name = "Bar"
	Bar.Parent = Max
	Bar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Bar.BorderSizePixel = 0
	Bar.Size = UDim2.new(0, 82, 1, 0)

	UICorner_11.Parent = Bar

	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.33, Color3.fromRGB(184, 184, 184)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
	UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(1.00, 0.75)}
	UIGradient_2.Parent = Bar

	UICorner_12.Parent = Max

	DTemp.Name = "DTemp"
	DTemp.Parent = TabTemplates
	DTemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DTemp.BackgroundTransparency = 1.000
	DTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DTemp.BorderSizePixel = 0
	DTemp.Position = UDim2.new(0.674208164, 0, 0.454838723, 0)
	DTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_2.Name = "Button"
	Button_2.Parent = DTemp
	Button_2.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_2.BackgroundTransparency = 0.750
	Button_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_2.BorderSizePixel = 0
	Button_2.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_2.Size = UDim2.new(0, 150, 0, 33)
	Button_2.Font = Enum.Font.Ubuntu
	Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_2.TextSize = 18.000

	UICorner_13.CornerRadius = UDim.new(0, 5)
	UICorner_13.Parent = Button_2

	Drop.Name = "Drop"
	Drop.Parent = Button_2
	Drop.Active = true
	Drop.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Drop.BackgroundTransparency = 0.750
	Drop.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Drop.BorderSizePixel = 0
	Drop.Position = UDim2.new(-0.00333333341, 0, 1.29818165, 0)
	Drop.Size = UDim2.new(0, 150, 0, 127)
	Drop.ZIndex = 2
	Drop.CanvasSize = UDim2.new(0, 0, 4, 0)
	Drop.ScrollBarThickness = 0

	UICorner_14.CornerRadius = UDim.new(0, 5)
	UICorner_14.Parent = Drop

	UIGridLayout_2.Parent = Drop
	UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 40)

	Button_3.Name = "Button"
	Button_3.Parent = UIGridLayout_2
	Button_3.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_3.BorderSizePixel = 0
	Button_3.Position = UDim2.new(0.151162788, 0, 0.0769233704, 0)
	Button_3.Size = UDim2.new(0, 150, 0, 33)
	Button_3.Font = Enum.Font.Ubuntu
	Button_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_3.TextSize = 18.000

	UICorner_15.CornerRadius = UDim.new(0, 5)
	UICorner_15.Parent = Button_3

	TabStuff.Name = "TabStuff"
	TabStuff.Parent = Script

	TabTemp.Name = "TabTemp"
	TabTemp.Parent = TabStuff
	TabTemp.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabTemp.BackgroundTransparency = 0.900
	TabTemp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabTemp.BorderSizePixel = 0
	TabTemp.Size = UDim2.new(0, 100, 0, 100)

	Button_4.Name = "Button"
	Button_4.Parent = TabTemp
	Button_4.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Button_4.BackgroundTransparency = 1.000
	Button_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button_4.BorderSizePixel = 0
	Button_4.Size = UDim2.new(1, 0, 1, 0)
	Button_4.Font = Enum.Font.Ubuntu
	Button_4.Text = ""
	Button_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button_4.TextSize = 20.000

	TextLabel_2.Parent = TabTemp
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel_2.BorderSizePixel = 0
	TextLabel_2.Position = UDim2.new(0.333333343, 0, 0.174999997, 0)
	TextLabel_2.Size = UDim2.new(0, 80, 0, 26)
	TextLabel_2.Font = Enum.Font.Ubuntu
	TextLabel_2.Text = "Tab 1"
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextScaled = true
	TextLabel_2.TextSize = 20.000
	TextLabel_2.TextWrapped = true

	ImageLabel_2.Parent = TabTemp
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel_2.BorderSizePixel = 0
	ImageLabel_2.Position = UDim2.new(0.0833333358, 0, 0.125, 0)
	ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
	ImageLabel_2.Image = "rbxassetid://12010069146"

	TempTab.Name = "TempTab"
	TempTab.Parent = TabStuff
	TempTab.Active = true
	TempTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TempTab.BackgroundTransparency = 1.000
	TempTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TempTab.BorderSizePixel = 0
	TempTab.Position = UDim2.new(0.217999995, 0, 0.133000001, 0)
	TempTab.Size = UDim2.new(0, 430, 0, 260)
	TempTab.CanvasSize = UDim2.new(0, 0, 8, 0)
	TempTab.ScrollBarThickness = 0

	UIGridLayout_3.Parent = TempTab
	UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout_3.CellPadding = UDim2.new(0, 0, 0, 5)
	UIGridLayout_3.CellSize = UDim2.new(0.5, 0, 0, 40)

	-- Scripts:
	local close = false
	local function HLBC_fake_script() -- ImageLabel.Script 
		local script = Instance.new('LocalScript', ImageLabel)

		--[[
			
			Version 6.0
			
			Max Intensity: 1
			
			Original: https://devforum.roblox.com/t/how-to-make-ui-gaussian-blur/1238701
			Automated(Current Script): https://devforum.roblox.com/t/new-ui-blur-fully-automatic/2402850
			
			Credits: Original Creator @googleUSE, Moder and automater thingy majingy @ImSnox
			
			]]
		
		local BlurIntensity = 0.4
		
		local RunService = game:GetService('RunService')
		local camera = workspace.CurrentCamera
		local MTREL = "Glass"
		local binds = {}
		local root = Instance.new('Folder', camera)
		
		local DepthOfField = Instance.new('DepthOfFieldEffect', game:GetService('Lighting'))
		local frame = script.Parent
		DepthOfField.FarIntensity = 0
		DepthOfField.FocusDistance = 51.6
		DepthOfField.InFocusRadius = 50
		DepthOfField.NearIntensity = BlurIntensity
		DepthOfField.Name = " "
		root.Name = 'BlurSnox'
		
		local GenUid; do -- Generate unique names for RenderStepped bindings
			local id = 0
			function GenUid()
				id = id + 1
				return 'neon::'..tostring(id)
			end
		end
		
		do
			local function IsNotNaN(x)
				return x == x
			end
			local continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			while not continue do
				RunService.RenderStepped:wait()
				continue = IsNotNaN(camera:ScreenPointToRay(0,0).Origin.x)
			end
		end
		
		local DrawQuad; do
			local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
			local sz = 0.2
		
			local function DrawTriangle(v1, v2, v3, p0, p1) -- I think Stravant wrote this function
				local s1 = (v1 - v2).magnitude
				local s2 = (v2 - v3).magnitude
				local s3 = (v3 - v1).magnitude
				local smax = max(s1, s2, s3)
				local A, B, C
				if s1 == smax then
					A, B, C = v1, v2, v3
				elseif s2 == smax then
					A, B, C = v2, v3, v1
				elseif s3 == smax then
					A, B, C = v3, v1, v2
				end
		
				local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
				local perp = sqrt((C-A).magnitude^2 - para*para)
				local dif_para = (A - B).magnitude - para
		
				local st = CFrame.new(B, A)
				local za = CFrame.Angles(pi/2,0,0)
		
				local cf0 = st
		
				local Top_Look = (cf0 * za).lookVector
				local Mid_Point = A + CFrame.new(A, B).LookVector * para
				local Needed_Look = CFrame.new(Mid_Point, C).LookVector
				local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z
		
				local ac = CFrame.Angles(0, 0, acos(dot))
		
				cf0 = cf0 * ac
				if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
				end
				cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))
		
				local cf1 = st * ac * CFrame.Angles(0, pi, 0)
				if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
				end
				cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)
		
				if not p0 then
					p0 = Instance.new('Part')
					p0.Color = Color3.fromRGB(91, 128, 130)
					p0.FormFactor = 'Custom'
					p0.TopSurface = 0
					p0.BottomSurface = 0
					p0.Anchored = true
					p0.CanCollide = false
					p0.CastShadow = false
					p0.Material = MTREL
					p0.Size = Vector3.new(sz, sz, sz)
					local mesh = Instance.new('SpecialMesh', p0)
					mesh.MeshType = 2
					mesh.Name = 'WedgeMesh'
				end
				p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
				p0.CFrame = cf0
		
				if not p1 then
					p1 = p0:clone()
				end
				p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
				p1.CFrame = cf1
		
				return p0, p1
			end
		
			function DrawQuad(v1, v2, v3, v4, parts)
				parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
				parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
			end
		end
		
		if binds[frame] then
			return binds[frame].parts
		end
		
		local uid = GenUid()
		local parts = {}
		local visible = true
		local f = Instance.new('Folder', root)
		f.Name = frame.Name
		
		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end
		
		local function UpdateOrientation(fetchProps)
			if close == true then
				return
			end
			local trans = 0.99
			if visible == false then
				trans = 1
			end
			local properties = {
				Transparency = trans;
				--BrickColor = BrickColor.new('Institutional white');
			}
			local zIndex = 1 - 0.05*frame.ZIndex
		
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end
		
		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)
		local UserInputService = game:GetService("UserInputService")
		local runService = (game:GetService("RunService"));
		
		local gui = script.Parent
		
		local dragging
		local dragInput
		local dragStart
		local startPos
		
		local function Lerp(a, b, m)
			return a + (b - a) * m
		end;
		
		local lastMousePos
		local lastGoalPos
		local DRAG_SPEED = (8); -- // The speed of the UI darg.
		local function Update(dt)
			if not (startPos) then return end;
			if not (dragging) and (lastGoalPos) then
				gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
				return 
			end;
		
			local delta = (lastMousePos - UserInputService:GetMouseLocation())
			local xGoal = (startPos.X.Offset - delta.X);
			local yGoal = (startPos.Y.Offset - delta.Y);
			lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
		end;
		
		gui.TopBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position
				lastMousePos = UserInputService:GetMouseLocation()
		
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		
		gui.TopBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		
		runService.Heartbeat:Connect(Update)
		script.Parent.TopBar.Minimize.Activated:Connect(function()
			visible = false
		end)
		script.Parent.TopBar.Close.Activated:Connect(function()
			close = true
			script.Parent.Parent:Destroy()
			game:GetService("Workspace").Camera.BlurSnox:Destroy()
			game:GetService("Lighting")[" "]:Destroy()
		end)
		local uis = game:GetService("UserInputService")
		uis.InputBegan:Connect(function(inp)
			if inp.KeyCode == Enum.KeyCode.RightControl then
				visible = true
			end
		end)
		task.spawn(function()
			while task.wait() do
				script.Parent.Visible = visible
			end
		end)
		
			--[[
			local lib = require(script.Parent.Lib)
			local tab = lib.AddTab("Tabs are over rated")
			
			tab.AddButton("Button", "Im a button test", function()
				print("Testing!")
			end)
			tab.AddToggle("Toggle", "Toggle Desc", function(bool)
				print(bool)
			end)
			tab.AddInput("Input", "Placeholder i think", function(out)
				print(out)
			end)
			tab.AddSection("Wha da fuck")
			tab.AddSlider("Slider1", "Big black cock", 100, 0, function(val)
				print(val)
			end)
			
			local tab2 = lib.AddTab("Why are most niggers annoying")
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddDropdown("Dropdown", "da fuc", {"Option 1", "Option 2", "Option 3"}, function(str)
				print(str)
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)
			tab2.AddButton("Why are you black", "Cause im a negro", function()
				print("Niggers")
			end)]]
	end
	coroutine.wrap(HLBC_fake_script)()

	local lib = {}
	local tabs = {}
	local ui = ImageLabel

	function AddToggle(name, text, callback, tab)
		local button = ui.Script.TabTemplates.TTemp:Clone()
		button.Name = name
		button.Desc.Text = name
		button.Desc.MouseEnter:Connect(function()
			button.Desc.Text = text
		end)
		button.Desc.MouseLeave:Connect(function()
			button.Desc.Text = name
		end)
		local enabled = false
		local deb = false
		local ts = game:GetService("TweenService")
		button.Toggle.Activated:Connect(function()
			if deb == false then
				if enabled == false then
					enabled = true
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(250,250,250)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.3}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				else
					enabled = false
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {BackgroundColor3 = Color3.fromRGB(29, 29, 29)}):Play()
					ts:Create(button.Toggle, TweenInfo.new(0.25,Enum.EasingStyle.Linear), {Transparency = 0.75}):Play()
					deb = true
					task.spawn(function()
						wait(0.25)
						deb = false
					end)
				end
				callback(enabled)
			end
		end)
		button.Parent = tab
		return button
	end

	function AddInput(name, placeholder, callback, tab)
		local button = ui.Script.TabTemplates.ITemp:Clone()
		button.Name = name
		button.Input.PlaceholderText = placeholder
		local previousinput = ""
		task.spawn(function()
			while task.wait(0.1) do
				if #button.Input.Text >= 10 then
					button.Input.TextScaled = true
				else
					button.Input.TextScaled = true
				end
			end
		end)
		button.Input.FocusLost:Connect(function()
			if button.Input.Text == "" then
				return
			end
			previousinput = button.Input.Text
			callback(button.Input.Text)
		end)
		button.Parent = tab
		return button
	end

	function AddButton(name, text, callback, tab)
		local button = ui.Script.TabTemplates.BTemp:Clone()
		button.Name = name
		button.Button.Text = name
		button.ZIndex = 1
		button.Button.MouseEnter:Connect(function()
			button.Button.Text = text
			button.Button.TextScaled = true
		end)
		button.Button.MouseLeave:Connect(function()
			button.Button.Text = name
			button.Button.TextScaled = false
		end)
		button.Button.Activated:Connect(callback)
		button.Parent = tab
		return button
	end

	function AddEmpty(tab)
		local spacer = ui.Script.TabTemplates.SectionSpacer:Clone()
		spacer.Parent = tab
	end

	function AddSection(name, tab)
		local actions = #tab:GetChildren()
		local section = ui.Script.TabTemplates.SectionTemp:Clone()
		if actions % 2 == 0 then
			AddEmpty(tab)
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		else
			section.Parent = tab
			section.Section.Text = name
			AddEmpty(tab)
		end
		return section
	end

	function AddSlider(name,tab,callback, maxi,min)
		local slider = ui.Script.TabTemplates.Slide:Clone()
		local text = Instance.new("TextLabel", slider)
		text.Size = UDim2.new(1,0,1,0)
		text.BackgroundTransparency = 1
		text.TextColor3 = Color3.new(255,255,255)
		text.Text = ""
		slider.Parent = tab
		task.spawn(function()
			local max = slider.Max
			local bar = max.Bar
			local player = game.Players.LocalPlayer
			local mouse = player:GetMouse()
			local uis = game:GetService("UserInputService")
			local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
			local down = false
			local lastinp = nil

			max.InputBegan:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = true
				end
			end)

			max.InputEnded:Connect(function(input, gp)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType ==  Enum.UserInputType.Touch then
					lastinp = input
					down = false
				end
			end)
			local function ScaleToOffset(Scale)
				local ViewPortSize = workspace.Camera.ViewportSize
				return ({ViewPortSize.X * Scale[1],ViewPortSize.Y * Scale[2]})
			end


			local function OffsetToScale(Offset)
				local ViewPortSize = workspace.Camera.ViewportSize
				return Offset / max.Size
			end
			while task.wait(0.05) do
				if down == true and lastinp ~= nil then
					local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
					--bar.Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)
					local ts = game:GetService("TweenService")
					ts:Create(bar, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161), 1, 0)}):Play()
					local val = math.clamp(uis:GetMouseLocation().X - ap.X, 0, 161)
					local function range(value)
						local oldmin, oldmax = 0, 161
						local newmin, newmax = min, maxi

						local newValue = ((value - oldmin) / (oldmax - oldmin)) * (newmax - newmin) + newmin

						return newValue
					end
					text.Text = name .. " " .. tostring(math.round(range(val)))
					callback(range(val))
				end
			end
		end)
		return slider
	end

	function AddDropdown(name,text,s_table,callback,tab)
		local dropdown = ui.Script.TabTemplates.DTemp:Clone()
		dropdown.Parent = tab
		dropdown.Name = name
		dropdown.Button.Text = name
		dropdown.ZIndex = 2
		dropdown.Button.MouseEnter:Connect(function()
			dropdown.Button.Text = text
		end)
		dropdown.Button.MouseLeave:Connect(function()
			dropdown.Button.Text = name
		end)
		local visible = false
		dropdown.Button.Activated:Connect(function()
			if visible == true then
				visible = false
			else
				visible = true
			end
		end)
		dropdown.Button.Drop.CanvasSize = UDim2.new(0, 0,#s_table+#s_table/2, 0)
		task.spawn(function()
			while task.wait() do
				dropdown.Button.Drop.Visible = visible
			end
		end)
		for i, v in pairs(s_table) do
			local temp = dropdown.Button.Drop.UIGridLayout.Button:Clone()
			temp.Parent = dropdown.Button.Drop
			temp.Text = v
			temp.Activated:Connect(function()
				visible = false
				callback(v)
			end)
		end
		return dropdown
	end

	local tabs = 0
	local uistroke = Instance.new("UIStroke", ui)
	uistroke.Color = Color3.fromRGB(0,0,0)
	uistroke.Thickness = 5
	uistroke.Transparency = 0.85
	local tdeb = false
	function lib.AddTab(name, icon)
		tabs += 1
		local tname = name
		local icon = icon or "160460785"
		icon = "rbxassetid://" .. icon
		local tbutton = ui.Script.TabStuff.TabTemp:Clone()
		tbutton.Parent = ui.TabList
		tbutton.ImageLabel.Image = icon
		tbutton.TextLabel.Text = name
		local tholder = ui.Script.TabStuff.TempTab:Clone()
		tholder.Parent = ui.Tabs
		tholder.Name = name
		tholder.Visible = false
		if tabs == 1 then
			tholder.Visible = true
		end
		tbutton.Button.Activated:Connect(function()
			if tdeb == true then
				return
			end
			tdeb = true
			local ts = game:GetService("TweenService")
			for i, v in pairs(ui.Tabs:GetChildren()) do
				for i, v in pairs(v:GetDescendants()) do
					if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
						if not v:FindFirstChild("Trans") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
								local dat2 = Instance.new("NumberValue", v)
								dat2.Name = "TTrans"
								dat2.Value = v.TextTransparency
							elseif v:IsA("UIStroke") then
								local dat = Instance.new("NumberValue", v)
								dat.Name = "STrans"
								dat.Value = v.Transparency
							else
								local dat = Instance.new("NumberValue", v)
								dat.Name = "Trans"
								dat.Value = v.BackgroundTransparency
							end
						end
						--ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
					end
				end
				if v ~= tholder then
					local clone = v--:Clone()
					v.Parent = ui.CTabs
					--v.Visible = false
					for i, v in pairs(clone:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							--local dat = Instance.new("NumberValue", v)
							--dat.Name = "Trans"
							--dat.Value = v.BackgroundTransparency
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = 1}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
							end
							--print("maybe twen")
						end
					end
					task.spawn(function()
						wait(0.5)
						v.Visible = false
					end)
				end
			end
			wait(0.5)
			tholder.Visible = true
			tholder.Parent = ui.Tabs
			for i, v in pairs(tholder:GetChildren()) do
				if v ~= tholder then
					for i, v in pairs(v:GetDescendants()) do
						if not v:IsA("UIGridLayout") and not v:IsA("UICorner") and not v:IsA("LocalScript") and not v:IsA("UIGradient") and not v:IsA("NumberValue") then
							if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
								ts:Create(v, TweenInfo.new(0.5), {TextTransparency = v.TTrans.Value}):Play()
							elseif v:IsA("UIStroke") then
								ts:Create(v, TweenInfo.new(0.5), {Transparency = v.STrans.Value}):Play()
							else
								ts:Create(v, TweenInfo.new(0.5), {BackgroundTransparency = v.Trans.Value}):Play()
							end
						end
					end
				end
			end
			tdeb = false
		end)
		local toreturn = {}
		toreturn.AddButton = function(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		toreturn.AddDropdown = function(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		toreturn.AddInput = function(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		toreturn.AddToggle = function(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		toreturn.AddSection = function(Name)
			AddSection(Name, tholder)
			return toreturn
		end
		toreturn.AddSlider = function(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		function toreturn:NewButton(Name, text, callback)
			AddButton(Name,text,callback,tholder)
		end
		function toreturn:NewDropdown(Name, text, tab, callback)
			AddDropdown(Name,text,tab,callback,tholder)
		end
		function toreturn:NewTextBox(Name, text, callback)
			AddInput(Name,text,callback,tholder)
		end
		function toreturn:NewToggle(Name, text, callback)
			AddToggle(Name,text,callback,tholder)
		end
		function toreturn:NewSection(Name)
			AddSection(Name,tholder)
			return toreturn
		end
		function toreturn:NewSlider(name, text, max, min, callback)
			AddSlider(name,tholder,callback, max, min)
		end
		toreturn.Source = tholder
		return toreturn
	end

	task.spawn(function()
		while task.wait(0.1) do
			
			ui.TopBar.TextLabel.Text = "Sky Hub CE Edition"
		end
	end)

	lib.CreateLib = function(name,smth)
		local toreturn = {}
		function toreturn:NewTab(name, icon)
			return lib.AddTab(name,icon)
		end
		return toreturn
	end

    
	local Window = lib.CreateLib("Sky Hub")
	local Discord = Window:NewTab("Discords")
	local DiscordSection = Discord:NewSection("Discords")
	DiscordSection:NewButton("Discord Invite", "Copys Discord invite link", function()
		setclipboard(string)
	end)
	DiscordSection:NewButton("Discord Invite OLD", "Copys Discord invite link", function()
		setclipboard(string2)
	end)
	local Debugs = Window:NewTab("Debuggers", 10507357657)
	local DebugsSection = Debugs:NewSection("Debuggers")
	DebugsSection:NewButton("Dex", "Explorer", function()
		_G.DEX()
	end)
	
	

	local Admins = Window:NewTab("Admins", 10016551771)
	local AdminsSection = Admins:NewSection("Admins")
	AdminsSection:NewButton("Infinite Yield FE", "Admin", function()
		_G.IY()
	end)
	
	
	AdminsSection:NewButton("Shattervast Admin", "Admin", function()
		_G.ShatterVast()
	end)
	
	AdminsSection:NewButton("Reviz Admin V2", "Admin", function()
		_G.RevizAdmin()
	end)

	local Player = Window:NewTab("Player", 2795572800)
	local PlayerSection = Player:NewSection("Player")
	PlayerSection:NewSlider("WalkSpeed", "Changes how fast you walk", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = v
	end)
	PlayerSection:NewSlider("Jumppower", "Changes how high you jump", 500, 1, function(v)
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = v
	end)
	PlayerSection:NewSlider("Gravity", "Changes gravity", 500, 1, function(v)
		game:GetService("Workspace").Gravity = v
	end)
	
	local Obbys = Window:NewTab("Obbys")
	local ObbysSection = Obbys:NewSection("Obbys")
	ObbysSection:NewButton("Method 1", "auto farm/tp to end if supported game", function()
		if game.PlaceId == 5972698540 then -- easy obby
			game.StarterGui:SetCore("SendNotification",  {
				Title = "Working";
				Text = "its working just please wait";
				Icon = "";
				Duration = 5;
				Callback = NotificationBindable;
			})
			wait(15)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Stages.Stage130.Checkpoint.Checkpoint.CFrame
			wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Stages.END["The End Obby..!!"].Checkpoint.CFrame
		elseif game.PlaceId == 13413789725 then -- emo obby
			getgenv().collectOrbsToggle = true
			spawn(function()
				local checkpoints = game:GetService("Workspace").Checkpoints:GetChildren()
				table.sort(checkpoints, function(a, b)
					return tonumber(a.Name) < tonumber(b.Name)
				end)
				while wait() do
					if not getgenv().collectOrbsToggle then
						break
					end
					for i, checkpoint in ipairs(checkpoints) do
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame
						wait(0.05) -- Adjust the wait time as needed
					end
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(160, 285, 371)
					wait(10.8)
					fireproximityprompt(workspace.endlobby.Rebirth.Prompt)
					wait(2)
				end
			end)
		elseif game.PlaceId == 11364184405 then -- 725 obby
			while true do
				wait()
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Checkpoints.Floor8["725"].Detector.CFrame
				wait(2)
				game:GetService("ReplicatedStorage"):WaitForChild("Honeypot"):WaitForChild("Internal"):WaitForChild("RemoteStorage"):WaitForChild("Rebirth - RemoteEvent"):FireServer()
			end
		elseif game.PlaceId == 10760024537 then -- ultimate easy obby
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Checkpoints["50"].DetectorPart.CFrame
		elseif game.PlaceId == 3587619225 then -- mega easy obby 825 stages
			local checkpoints = game:GetService("Workspace").Checkpoints:GetChildren()
			table.sort(checkpoints, function(a, b)
				return tonumber(a.Name) < tonumber(b.Name)
			end)
			for i, checkpoint in ipairs(checkpoints) do
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame + Vector3.new(0, 5, 0)
				wait(0.5) -- Adjust the wait time as needed
			end
		elseif game.PlaceId == 8472851459 then -- really easy obby
			local checkpoints = game:GetService("Workspace").Checkpoints:GetChildren()
			table.sort(checkpoints, function(a, b)
				return tonumber(a.Name) < tonumber(b.Name)
			end)
			for i, checkpoint in ipairs(checkpoints) do
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame + Vector3.new(0, 5, 0)
				wait(0.5) -- Adjust the wait time as needed
			end
		elseif game.PlaceId == 12961669859 then -- Easy Fun Obby
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-301, 236, 78)
		elseif game.PlaceId == 8712817601 then -- barrys prison
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3781, 1072, -502)
		elseif game.PlaceId == 13326256431 then -- obby but no jump
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Checkpoints["48"].CFrame
		elseif game.PlaceId == 1946695497 then -- escape butcher obby
			local checkpoints = game:GetService("Workspace").Stages:GetChildren()
			table.sort(checkpoints, function(a, b)
				return tonumber(a.Name) < tonumber(b.Name)
			end)
			for i, checkpoint in ipairs(checkpoints) do
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame + Vector3.new(0, 5, 0)
				wait(0.5) -- Adjust the wait time as needed
			end
		elseif game.PlaceId == 12357508217 then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Checkpoints["60"].Detector.CFrame
		else -- universal
			game.StarterGui:SetCore("SendNotification",  {
				Title = "Game Not Supported";
				Text = "game not supported so it may be trash or not work at all";
				Icon = "";
				Duration = 5;
				Callback = NotificationBindable;
			})
			if workspace:FindFirstChild('Checkpoints') then
				local checkpoints = game:GetService("Workspace").Checkpoints:GetChildren()
				table.sort(checkpoints, function(a, b)
					return tonumber(a.Name) < tonumber(b.Name)
				end)
				for i, checkpoint in ipairs(checkpoints) do
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame
					wait(6) -- Adjust the wait time as needed
				end
			elseif workspace:FindFirstChild('Stages') then
				local checkpoints = game:GetService("Workspace").Stages:GetChildren()
				table.sort(checkpoints, function(a, b)
					return tonumber(a.Name) < tonumber(b.Name)
				end)
				for i, checkpoint in ipairs(checkpoints) do
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame
					wait(6) -- Adjust the wait time as needed
				end
			else
				game.StarterGui:SetCore("SendNotification",  {
					Title = "Could not find path";
					Text = "Could not find path including all the stages/checkpoints try the other method";
					Icon = "";
					Duration = 5;
					Callback = NotificationBindable;
				})
			end
		end
	end)
	ObbysSection:NewButton("Method 2", "fire all touchinterests", function()
		game.StarterGui:SetCore("SendNotification",  {
			Title = "if this doesnt work for you try method 3";
			Text = "executing in 5 seconds";
			Icon = "";
			Duration = 5;
			Callback = NotificationBindable;
		})
		wait(5)
		function getRoot(char)
			local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
			return rootPart
		end
		local root = getRoot(game:GetService("Players").LocalPlayer.Character) or game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")
		local function touch(x)
			x = x:FindFirstAncestorWhichIsA("Part")
			if x then
				if firetouchinterest then
					task.spawn(function()
						firetouchinterest(x, root, 1)
						wait()
						firetouchinterest(x, root, 0)
					end)
				end
				x.CFrame = root.CFrame
			end
		end
		for _, descendant in ipairs(workspace:GetDescendants()) do
			if descendant:IsA("TouchTransmitter") then
				touch(descendant)
			end
		end
	end)
	ObbysSection:NewButton("Method 3", "fire all touchinterests pt2", function()
		game.StarterGui:SetCore("SendNotification",  {
			Title = "if this doesnt work for you join the discord and open a ticket";
			Text = "executing in 5 seconds";
			Icon = "";
			Duration = 5;
			Callback = NotificationBindable;
		})
		wait(5)
		local ftiamount = 0
		for _, v in pairs(workspace:GetDescendants()) do
			if v:IsA("TouchTransmitter") then
				ftiamount = ftiamount + 1
				firetouchinterest(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
				wait()
				firetouchinterest(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) -- 1 is untouch
			end
		end
	end)
	local Main = Window:NewTab("Main")
	local MainSection = Main:NewSection("Main")
	
	MainSection:NewButton("Btools", "Btools", function()
		game.StarterGui:SetCoreGuiEnabled(2, true)
		a = Instance.new("HopperBin", game:GetService("Players").LocalPlayer.Backpack)
		a.BinType = 2
		b = Instance.new("HopperBin", game:GetService("Players").LocalPlayer.Backpack)
		b.BinType = 3
		c = Instance.new("HopperBin", game:GetService("Players").LocalPlayer.Backpack)
		c.BinType = 4
	end)
	
	MainSection:NewButton("UnNamed ESP", "UnNamed ESP", function()
		_G.unnamedesp()
	end)
	MainSection:NewButton("aimbot and esp", "aimbot and esp", function()
		PLAYER  = game.Players.LocalPlayer
MOUSE   = PLAYER:GetMouse()
CC      = game.Workspace.CurrentCamera
 
ENABLED      = false
ESP_ENABLED  = false
 
_G.FREE_FOR_ALL = true
 
_G.ESP_BIND    = 52
_G.CHANGE_AIM  = 'q'
 
_G.AIM_AT = 'Head'
 
wait(1)
 
function GetNearestPlayerToMouse()
	local PLAYERS      = {}
	local PLAYER_HOLD  = {}
	local DISTANCES    = {}
	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= PLAYER then
			table.insert(PLAYERS, v)
		end
	end
	for i, v in pairs(PLAYERS) do
		if _G.FREE_FOR_ALL == false then
			if v and (v.Character) ~= nil and v.TeamColor ~= PLAYER.TeamColor then
				local AIM = v.Character:FindFirstChild(_G.AIM_AT)
				if AIM ~= nil then
					local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
					local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
					local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
					local DIFF                     = math.floor((POS - AIM.Position).magnitude)
					PLAYER_HOLD[v.Name .. i]       = {}
					PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
					PLAYER_HOLD[v.Name .. i].plr   = v
					PLAYER_HOLD[v.Name .. i].diff  = DIFF
					table.insert(DISTANCES, DIFF)
				end
			end
		elseif _G.FREE_FOR_ALL == true then
			local AIM = v.Character:FindFirstChild(_G.AIM_AT)
			if AIM ~= nil then
				local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
				local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
				local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
				local DIFF                     = math.floor((POS - AIM.Position).magnitude)
				PLAYER_HOLD[v.Name .. i]       = {}
				PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
				PLAYER_HOLD[v.Name .. i].plr   = v
				PLAYER_HOLD[v.Name .. i].diff  = DIFF
				table.insert(DISTANCES, DIFF)
			end
		end
	end
 
	if unpack(DISTANCES) == nil then
		return false
	end
 
	local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
	if L_DISTANCE > 20 then
		return false
	end
 
	for i, v in pairs(PLAYER_HOLD) do
		if v.diff == L_DISTANCE then
			return v.plr
		end
	end
	return false
end
 
GUI_MAIN                           = Instance.new('ScreenGui', game.CoreGui)
GUI_TARGET                         = Instance.new('TextLabel', GUI_MAIN)
GUI_AIM_AT                         = Instance.new('TextLabel', GUI_MAIN)
 
GUI_MAIN.Name                      = 'AIMBOT'
 
GUI_TARGET.Size                    = UDim2.new(0,200,0,30)
GUI_TARGET.BackgroundTransparency  = 0.5
GUI_TARGET.BackgroundColor         = BrickColor.new('Fossil')
GUI_TARGET.BorderSizePixel         = 0
GUI_TARGET.Position                = UDim2.new(0.5,-100,0,0)
GUI_TARGET.Text                    = 'AIMBOT : ON'
GUI_TARGET.TextColor3              = Color3.new(1,1,1)
GUI_TARGET.TextStrokeTransparency  = 1
GUI_TARGET.TextWrapped             = true
GUI_TARGET.FontSize                = 'Size24'
GUI_TARGET.Font                    = 'SourceSansBold'
 
GUI_AIM_AT.Size                    = UDim2.new(0,200,0,20)
GUI_AIM_AT.BackgroundTransparency  = 0.5
GUI_AIM_AT.BackgroundColor         = BrickColor.new('Fossil')
GUI_AIM_AT.BorderSizePixel         = 0
GUI_AIM_AT.Position                = UDim2.new(0.5,-100,0,30)
GUI_AIM_AT.Text                    = 'AIMING : HEAD'
GUI_AIM_AT.TextColor3              = Color3.new(1,1,1)
GUI_AIM_AT.TextStrokeTransparency  = 1
GUI_AIM_AT.TextWrapped             = true
GUI_AIM_AT.FontSize                = 'Size18'
GUI_AIM_AT.Font                    = 'SourceSansBold'
 
local TRACK = false
 
function CREATE(BASE, TEAM)
	local ESP_MAIN                   = Instance.new('BillboardGui', PLAYER.PlayerGui)
	local ESP_DOT                    = Instance.new('Frame', ESP_MAIN)
	local ESP_NAME                   = Instance.new('TextLabel', ESP_MAIN)
 
	ESP_MAIN.Name                    = 'ESP'
	ESP_MAIN.Adornee                 = BASE
	ESP_MAIN.AlwaysOnTop             = true
	ESP_MAIN.ExtentsOffset           = Vector3.new(0, 1, 0)
	ESP_MAIN.Size                    = UDim2.new(0, 5, 0, 5)
 
	ESP_DOT.Name                     = 'DOT'
	ESP_DOT.BackgroundColor          = BrickColor.new('Bright red')
	ESP_DOT.BackgroundTransparency   = 0.3
	ESP_DOT.BorderSizePixel          = 0
	ESP_DOT.Position                 = UDim2.new(-0.5, 0, -0.5, 0)
	ESP_DOT.Size                     = UDim2.new(2, 0, 2, 0)
	ESP_DOT.Visible                  = true
	ESP_DOT.ZIndex                   = 10
 
	ESP_NAME.Name                    = 'NAME'
	ESP_NAME.BackgroundColor3        = Color3.new(255, 255, 255)
	ESP_NAME.BackgroundTransparency  = 1
	ESP_NAME.BorderSizePixel         = 0
	ESP_NAME.Position                = UDim2.new(0, 0, 0, -40)
	ESP_NAME.Size                    = UDim2.new(1, 0, 10, 0)
	ESP_NAME.Visible                 = true
	ESP_NAME.ZIndex                  = 10
	ESP_NAME.Font                    = 'ArialBold'
	ESP_NAME.FontSize                = 'Size14'
	ESP_NAME.Text                    = BASE.Parent.Name:upper()
	ESP_NAME.TextColor               = BrickColor.new('Bright red')
end
 
function CLEAR()
	for _,v in pairs(PLAYER.PlayerGui:children()) do
		if v.Name == 'ESP' and v:IsA('BillboardGui') then
			v:Destroy()
		end
	end
end
 
function FIND()
	CLEAR()
	TRACK = true
	spawn(function()
		while wait() do
			if TRACK then
				CLEAR()
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild('Head') then
						if _G.FREE_FOR_ALL == false then
							if v.TeamColor ~= PLAYER.TeamColor then
								if v.Character:FindFirstChild('Head') then
									CREATE(v.Character.Head, true)
								end
							end
						else
							if v.Character:FindFirstChild('Head') then
								CREATE(v.Character.Head, true)
							end
						end
					end
				end
			end
		end
		wait(1)
	end)
end
 
MOUSE.Button2Down:connect(function()
	ENABLED = true
end)
 
MOUSE.Button2Up:connect(function()
	ENABLED = false
end)
 
MOUSE.KeyDown:connect(function(KEY)
	KEY = KEY:lower():byte()
	if KEY == _G.ESP_BIND then
		if ESP_ENABLED == false then
			FIND()
			ESP_ENABLED = true
			print('ESP : ON')
		elseif ESP_ENABLED == true then
			wait()
			CLEAR()
			TRACK = false
			ESP_ENABLED = false
			print('ESP : OFF')
		end
	end
end)
 
MOUSE.KeyDown:connect(function(KEY)
	if KEY == _G.CHANGE_AIM then
		if _G.AIM_AT == 'Head' then
			_G.AIM_AT = 'Torso'
			GUI_AIM_AT.Text = 'AIMING : TORSO'
		elseif _G.AIM_AT == 'Torso' then
			_G.AIM_AT = 'Head'
			GUI_AIM_AT.Text = 'AIMING : HEAD'
		end
	end
end)
 
game:GetService('RunService').RenderStepped:connect(function()
	if ENABLED then
		local TARGET = GetNearestPlayerToMouse()
		if (TARGET ~= false) then
			local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
			if AIM then
				CC.CoordinateFrame = CFrame.new(CC.CoordinateFrame.p, AIM.CFrame.p)
			end
			GUI_TARGET.Text = 'AIMBOT : '.. TARGET.Name:sub(1, 5)
		else
			GUI_TARGET.Text = 'AIMBOT : ON'
		end
	end
end)
 
repeat
	wait()
	if ESP_ENABLED == true then
		FIND()
	end
until ESP_ENABLED == false
	end)
	MainSection:NewButton("Mobile Aimbot", "ce aimbot for now lol", function()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local localPlayer = Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		local lockOnActive = false
		local teamCheckActive = false
		local currentTouch = nil
		local fovRadius = 125
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
		local toggleButton = Instance.new("TextButton")
		toggleButton.Parent = screenGui
		toggleButton.Size = UDim2.new(0, 150, 0, 50)
		toggleButton.Position = UDim2.new(0, 100, 0, 100)
		toggleButton.Text = "Toggle Lock-On"
		toggleButton.Draggable = true
		local toggleTeamButton = Instance.new("TextButton")
		toggleTeamButton.Parent = screenGui
		toggleTeamButton.Size = UDim2.new(0, 150, 0, 50)
		toggleTeamButton.Position = UDim2.new(0, 100, 0, 160)
		toggleTeamButton.Text = "Toggle Team Check"
		toggleTeamButton.Draggable = true
		local fovCircleGui = Instance.new("ImageLabel")
		fovCircleGui.Parent = screenGui
		fovCircleGui.AnchorPoint = Vector2.new(0.5, 0.5)
		fovCircleGui.Size = UDim2.new(0, fovRadius * 2, 0, fovRadius * 2)
		fovCircleGui.Image = "rbxassetid://432312433"
		fovCircleGui.ImageTransparency = 0.5
		fovCircleGui.ImageColor3 = Color3.new(1, 1, 1)
		fovCircleGui.BackgroundTransparency = 1
		fovCircleGui.Visible = false
		fovCircleGui.ZIndex = 0 -- Ensure it's behind other GUI elements

-- Function to check if a player is within the FOV and not obstructed by walls
		local function isPlayerVisible(targetPlayer)
			if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
				return false
			end
			if teamCheckActive and targetPlayer.Team == localPlayer.Team then
				return false -- Player is on the same team
			end
			local targetHeadPosition = targetPlayer.Character.Head.Position
			local vectorToTarget = (targetHeadPosition - camera.CFrame.Position).unit
			local ray = Ray.new(camera.CFrame.Position, vectorToTarget * fovRadius)
			local part, position = game.Workspace:FindPartOnRay(ray, localPlayer.Character, false, true)
			if part and part:IsDescendantOf(targetPlayer.Character) then
				local dotProduct = camera.CFrame.LookVector:Dot(vectorToTarget)
				local angle = math.deg(math.acos(dotProduct))
				return angle <= (fovRadius / 2) -- Player is within FOV
			end
			return false -- Player is obstructed by walls
		end

-- Toggle button functionality
		toggleButton.MouseButton1Click:Connect(function()
			lockOnActive = not lockOnActive
			toggleButton.Text = lockOnActive and "Lock-On Active" or "Toggle Lock-On"
			fovCircleGui.Visible = lockOnActive
		end)
		toggleTeamButton.MouseButton1Click:Connect(function()
			teamCheckActive = not teamCheckActive
			toggleTeamButton.Text = teamCheckActive and "Team Check Active" or "Toggle Team Check"
		end)

-- Function to handle touch input
		local function onTouchStarted(touch)
			currentTouch = touch.Position
			fovCircleGui.Position = UDim2.new(0, touch.Position.X - fovRadius, 0, touch.Position.Y - fovRadius)
			fovCircleGui.Visible = true
		end

-- Function to handle touch ended
		local function onTouchEnded(touch)
			if currentTouch and currentTouch == touch.Position then
				currentTouch = nil
				fovCircleGui.Visible = false
			end
		end

-- Connect the touch event handlers
		UserInputService.TouchStarted:Connect(onTouchStarted)
		UserInputService.TouchEnded:Connect(onTouchEnded)
		RunService.RenderStepped:Connect(function()
			if lockOnActive then
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and isPlayerVisible(player) then
						local head = player.Character.Head
						local direction = (head.Position - camera.CFrame.Position).unit
						camera.CFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + direction * 10)
						break
					end
				end
			end
		end)
	end)
	MainSection:NewButton("Portal Gun", "COOL ASF", function()
		_G.portalgun()
	end)
	
	local PlaceInfo = Window:NewTab("Place Info", 10507357657)
	local PlaceInfoSection = PlaceInfo:NewSection("Place Info")
	PlaceInfoSection:NewButton(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name, game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Description, function()
		setclipboard(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Description)
	end)
	PlaceInfoSection:NewButton("RespectFilteringEnabled is " .. _G.lmao24, function()
		
	end)
	PlaceInfoSection:NewButton("Filtering is Enabled lmao Forced ", "Filtering is Enabled lmao Forced", function()
		
	end)
end